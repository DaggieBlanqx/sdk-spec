// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app_model.proto

#include "app_model.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class CustomerReminderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CustomerReminder> _instance;
} _CustomerReminder_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
static void InitDefaultsscc_info_CustomerReminder_app_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_CustomerReminder_default_instance_;
    new (ptr) ::com::elarian::hera::proto::CustomerReminder();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CustomerReminder_app_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_CustomerReminder_app_5fmodel_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_app_5fmodel_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_app_5fmodel_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_app_5fmodel_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_app_5fmodel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerReminder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerReminder, key_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerReminder, remind_at_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerReminder, interval_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerReminder, payload_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::elarian::hera::proto::CustomerReminder)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_CustomerReminder_default_instance_),
};

const char descriptor_table_protodef_app_5fmodel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017app_model.proto\022\026com.elarian.hera.prot"
  "o\032\036google/protobuf/wrappers.proto\032\036googl"
  "e/protobuf/duration.proto\032\037google/protob"
  "uf/timestamp.proto\"\252\001\n\020CustomerReminder\022"
  "\013\n\003key\030\001 \001(\t\022-\n\tremind_at\030\002 \001(\0132\032.google"
  ".protobuf.Timestamp\022+\n\010interval\030\003 \001(\0132\031."
  "google.protobuf.Duration\022-\n\007payload\030\004 \001("
  "\0132\034.google.protobuf.StringValueb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_app_5fmodel_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_app_5fmodel_2eproto_sccs[1] = {
  &scc_info_CustomerReminder_app_5fmodel_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_app_5fmodel_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_app_5fmodel_2eproto = {
  false, false, descriptor_table_protodef_app_5fmodel_2eproto, "app_model.proto", 319,
  &descriptor_table_app_5fmodel_2eproto_once, descriptor_table_app_5fmodel_2eproto_sccs, descriptor_table_app_5fmodel_2eproto_deps, 1, 3,
  schemas, file_default_instances, TableStruct_app_5fmodel_2eproto::offsets,
  file_level_metadata_app_5fmodel_2eproto, 1, file_level_enum_descriptors_app_5fmodel_2eproto, file_level_service_descriptors_app_5fmodel_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_app_5fmodel_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_app_5fmodel_2eproto)), true);
namespace com {
namespace elarian {
namespace hera {
namespace proto {

// ===================================================================

class CustomerReminder::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& remind_at(const CustomerReminder* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& interval(const CustomerReminder* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& payload(const CustomerReminder* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
CustomerReminder::_Internal::remind_at(const CustomerReminder* msg) {
  return *msg->remind_at_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
CustomerReminder::_Internal::interval(const CustomerReminder* msg) {
  return *msg->interval_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
CustomerReminder::_Internal::payload(const CustomerReminder* msg) {
  return *msg->payload_;
}
void CustomerReminder::clear_remind_at() {
  if (GetArena() == nullptr && remind_at_ != nullptr) {
    delete remind_at_;
  }
  remind_at_ = nullptr;
}
void CustomerReminder::clear_interval() {
  if (GetArena() == nullptr && interval_ != nullptr) {
    delete interval_;
  }
  interval_ = nullptr;
}
void CustomerReminder::clear_payload() {
  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
}
CustomerReminder::CustomerReminder(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.CustomerReminder)
}
CustomerReminder::CustomerReminder(const CustomerReminder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  if (from._internal_has_remind_at()) {
    remind_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.remind_at_);
  } else {
    remind_at_ = nullptr;
  }
  if (from._internal_has_interval()) {
    interval_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.interval_);
  } else {
    interval_ = nullptr;
  }
  if (from._internal_has_payload()) {
    payload_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.payload_);
  } else {
    payload_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.CustomerReminder)
}

void CustomerReminder::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CustomerReminder_app_5fmodel_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&remind_at_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&payload_) -
      reinterpret_cast<char*>(&remind_at_)) + sizeof(payload_));
}

CustomerReminder::~CustomerReminder() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.CustomerReminder)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CustomerReminder::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete remind_at_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete payload_;
}

void CustomerReminder::ArenaDtor(void* object) {
  CustomerReminder* _this = reinterpret_cast< CustomerReminder* >(object);
  (void)_this;
}
void CustomerReminder::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CustomerReminder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CustomerReminder& CustomerReminder::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CustomerReminder_app_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void CustomerReminder::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.CustomerReminder)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  if (GetArena() == nullptr && remind_at_ != nullptr) {
    delete remind_at_;
  }
  remind_at_ = nullptr;
  if (GetArena() == nullptr && interval_ != nullptr) {
    delete interval_;
  }
  interval_ = nullptr;
  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomerReminder::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.CustomerReminder.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp remind_at = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_remind_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration interval = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_interval(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue payload = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_payload(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CustomerReminder::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.CustomerReminder)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.CustomerReminder.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // .google.protobuf.Timestamp remind_at = 2;
  if (this->has_remind_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::remind_at(this), target, stream);
  }

  // .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::interval(this), target, stream);
  }

  // .google.protobuf.StringValue payload = 4;
  if (this->has_payload()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::payload(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.CustomerReminder)
  return target;
}

size_t CustomerReminder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.CustomerReminder)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .google.protobuf.Timestamp remind_at = 2;
  if (this->has_remind_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *remind_at_);
  }

  // .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *interval_);
  }

  // .google.protobuf.StringValue payload = 4;
  if (this->has_payload()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payload_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CustomerReminder::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.CustomerReminder)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomerReminder* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CustomerReminder>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.CustomerReminder)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.CustomerReminder)
    MergeFrom(*source);
  }
}

void CustomerReminder::MergeFrom(const CustomerReminder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.CustomerReminder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.has_remind_at()) {
    _internal_mutable_remind_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_remind_at());
  }
  if (from.has_interval()) {
    _internal_mutable_interval()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_interval());
  }
  if (from.has_payload()) {
    _internal_mutable_payload()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_payload());
  }
}

void CustomerReminder::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.CustomerReminder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomerReminder::CopyFrom(const CustomerReminder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.CustomerReminder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomerReminder::IsInitialized() const {
  return true;
}

void CustomerReminder::InternalSwap(CustomerReminder* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomerReminder, payload_)
      + sizeof(CustomerReminder::payload_)
      - PROTOBUF_FIELD_OFFSET(CustomerReminder, remind_at_)>(
          reinterpret_cast<char*>(&remind_at_),
          reinterpret_cast<char*>(&other->remind_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomerReminder::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::CustomerReminder* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::CustomerReminder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::CustomerReminder >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
