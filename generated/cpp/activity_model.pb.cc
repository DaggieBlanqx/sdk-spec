// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity_model.proto

#include "activity_model.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_activity_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CustomerActivity_PropertiesEntry_DoNotUse_activity_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class CustomerActivity_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CustomerActivity_PropertiesEntry_DoNotUse> _instance;
} _CustomerActivity_PropertiesEntry_DoNotUse_default_instance_;
class CustomerActivityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CustomerActivity> _instance;
} _CustomerActivity_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
static void InitDefaultsscc_info_CustomerActivity_activity_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_CustomerActivity_default_instance_;
    new (ptr) ::com::elarian::hera::proto::CustomerActivity();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CustomerActivity_activity_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CustomerActivity_activity_5fmodel_2eproto}, {
      &scc_info_CustomerActivity_PropertiesEntry_DoNotUse_activity_5fmodel_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_CustomerActivity_PropertiesEntry_DoNotUse_activity_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_CustomerActivity_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::com::elarian::hera::proto::CustomerActivity_PropertiesEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CustomerActivity_PropertiesEntry_DoNotUse_activity_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CustomerActivity_PropertiesEntry_DoNotUse_activity_5fmodel_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_activity_5fmodel_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_activity_5fmodel_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_activity_5fmodel_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_activity_5fmodel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerActivity_PropertiesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerActivity_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerActivity_PropertiesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerActivity_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerActivity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerActivity, key_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerActivity, properties_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerActivity, created_at_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::com::elarian::hera::proto::CustomerActivity_PropertiesEntry_DoNotUse)},
  { 9, -1, sizeof(::com::elarian::hera::proto::CustomerActivity)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_CustomerActivity_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_CustomerActivity_default_instance_),
};

const char descriptor_table_protodef_activity_5fmodel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024activity_model.proto\022\026com.elarian.hera"
  ".proto\032\037google/protobuf/timestamp.proto\""
  "\320\001\n\020CustomerActivity\022\013\n\003key\030\001 \001(\t\022L\n\npro"
  "perties\030\002 \003(\01328.com.elarian.hera.proto.C"
  "ustomerActivity.PropertiesEntry\022.\n\ncreat"
  "ed_at\030\003 \001(\0132\032.google.protobuf.Timestamp\032"
  "1\n\017PropertiesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
  "\030\002 \001(\t:\0028\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_activity_5fmodel_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_activity_5fmodel_2eproto_sccs[2] = {
  &scc_info_CustomerActivity_activity_5fmodel_2eproto.base,
  &scc_info_CustomerActivity_PropertiesEntry_DoNotUse_activity_5fmodel_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_activity_5fmodel_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_activity_5fmodel_2eproto = {
  false, false, descriptor_table_protodef_activity_5fmodel_2eproto, "activity_model.proto", 298,
  &descriptor_table_activity_5fmodel_2eproto_once, descriptor_table_activity_5fmodel_2eproto_sccs, descriptor_table_activity_5fmodel_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_activity_5fmodel_2eproto::offsets,
  file_level_metadata_activity_5fmodel_2eproto, 2, file_level_enum_descriptors_activity_5fmodel_2eproto, file_level_service_descriptors_activity_5fmodel_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_activity_5fmodel_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_activity_5fmodel_2eproto)), true);
namespace com {
namespace elarian {
namespace hera {
namespace proto {

// ===================================================================

CustomerActivity_PropertiesEntry_DoNotUse::CustomerActivity_PropertiesEntry_DoNotUse() {}
CustomerActivity_PropertiesEntry_DoNotUse::CustomerActivity_PropertiesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CustomerActivity_PropertiesEntry_DoNotUse::MergeFrom(const CustomerActivity_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CustomerActivity_PropertiesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void CustomerActivity_PropertiesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class CustomerActivity::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const CustomerActivity* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
CustomerActivity::_Internal::created_at(const CustomerActivity* msg) {
  return *msg->created_at_;
}
void CustomerActivity::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
CustomerActivity::CustomerActivity(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  properties_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.CustomerActivity)
}
CustomerActivity::CustomerActivity(const CustomerActivity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.CustomerActivity)
}

void CustomerActivity::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CustomerActivity_activity_5fmodel_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  created_at_ = nullptr;
}

CustomerActivity::~CustomerActivity() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.CustomerActivity)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CustomerActivity::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
}

void CustomerActivity::ArenaDtor(void* object) {
  CustomerActivity* _this = reinterpret_cast< CustomerActivity* >(object);
  (void)_this;
}
void CustomerActivity::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CustomerActivity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CustomerActivity& CustomerActivity::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CustomerActivity_activity_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void CustomerActivity::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.CustomerActivity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  key_.ClearToEmpty();
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomerActivity::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.CustomerActivity.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> properties = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&properties_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CustomerActivity::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.CustomerActivity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.CustomerActivity.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // map<string, string> properties = 2;
  if (!this->_internal_properties().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "com.elarian.hera.proto.CustomerActivity.PropertiesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "com.elarian.hera.proto.CustomerActivity.PropertiesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_properties().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_properties().begin();
          it != this->_internal_properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = CustomerActivity_PropertiesEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_properties().begin();
          it != this->_internal_properties().end(); ++it) {
        target = CustomerActivity_PropertiesEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::created_at(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.CustomerActivity)
  return target;
}

size_t CustomerActivity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.CustomerActivity)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> properties = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_properties_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_properties().begin();
      it != this->_internal_properties().end(); ++it) {
    total_size += CustomerActivity_PropertiesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CustomerActivity::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.CustomerActivity)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomerActivity* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CustomerActivity>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.CustomerActivity)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.CustomerActivity)
    MergeFrom(*source);
  }
}

void CustomerActivity::MergeFrom(const CustomerActivity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.CustomerActivity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
}

void CustomerActivity::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.CustomerActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomerActivity::CopyFrom(const CustomerActivity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.CustomerActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomerActivity::IsInitialized() const {
  return true;
}

void CustomerActivity::InternalSwap(CustomerActivity* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  properties_.Swap(&other->properties_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(created_at_, other->created_at_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomerActivity::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::CustomerActivity_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::CustomerActivity_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::CustomerActivity_PropertiesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::CustomerActivity* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::CustomerActivity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::CustomerActivity >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
