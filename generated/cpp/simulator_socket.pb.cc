// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: simulator_socket.proto

#include "simulator_socket.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_common_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cash_common_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_simulator_5fsocket_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_CheckoutPaymentSimulatorNotification_simulator_5fsocket_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CustomerNumber_common_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_InboundMessageBody_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_simulator_5fsocket_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MakeVoiceCallSimulatorNotification_simulator_5fsocket_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MessagingChannelNumber_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_OutboundMessage_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_payment_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PaymentChannelNumber_payment_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_payment_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_payment_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_simulator_5fsocket_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ReceiveMessageSimulatorCommand_simulator_5fsocket_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_simulator_5fsocket_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ReceivePaymentSimulatorCommand_simulator_5fsocket_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_simulator_5fsocket_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_SendChannelPaymentSimulatorNotification_simulator_5fsocket_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_simulator_5fsocket_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_SendCustomerPaymentSimulatorNotification_simulator_5fsocket_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_simulator_5fsocket_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_SendMessageSimulatorNotification_simulator_5fsocket_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_simulator_5fsocket_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdatePaymentStatusSimulatorCommand_simulator_5fsocket_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class SimulatorToServerCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SimulatorToServerCommand> _instance;
} _SimulatorToServerCommand_default_instance_;
class ReceiveMessageSimulatorCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReceiveMessageSimulatorCommand> _instance;
} _ReceiveMessageSimulatorCommand_default_instance_;
class ReceivePaymentSimulatorCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReceivePaymentSimulatorCommand> _instance;
} _ReceivePaymentSimulatorCommand_default_instance_;
class UpdatePaymentStatusSimulatorCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdatePaymentStatusSimulatorCommand> _instance;
} _UpdatePaymentStatusSimulatorCommand_default_instance_;
class SimulatorToServerCommandReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SimulatorToServerCommandReply> _instance;
} _SimulatorToServerCommandReply_default_instance_;
class ServerToSimulatorNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerToSimulatorNotification> _instance;
} _ServerToSimulatorNotification_default_instance_;
class ServerToSimulatorNotificationReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerToSimulatorNotificationReply> _instance;
} _ServerToSimulatorNotificationReply_default_instance_;
class SendMessageSimulatorNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendMessageSimulatorNotification> _instance;
} _SendMessageSimulatorNotification_default_instance_;
class MakeVoiceCallSimulatorNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MakeVoiceCallSimulatorNotification> _instance;
} _MakeVoiceCallSimulatorNotification_default_instance_;
class SendCustomerPaymentSimulatorNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendCustomerPaymentSimulatorNotification> _instance;
} _SendCustomerPaymentSimulatorNotification_default_instance_;
class SendChannelPaymentSimulatorNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendChannelPaymentSimulatorNotification> _instance;
} _SendChannelPaymentSimulatorNotification_default_instance_;
class CheckoutPaymentSimulatorNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckoutPaymentSimulatorNotification> _instance;
} _CheckoutPaymentSimulatorNotification_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
static void InitDefaultsscc_info_CheckoutPaymentSimulatorNotification_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_CheckoutPaymentSimulatorNotification_default_instance_;
    new (ptr) ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_CheckoutPaymentSimulatorNotification_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_CheckoutPaymentSimulatorNotification_simulator_5fsocket_2eproto}, {
      &scc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto.base,
      &scc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto.base,
      &scc_info_CustomerNumber_common_5fmodel_2eproto.base,
      &scc_info_PaymentChannelNumber_payment_5fmodel_2eproto.base,
      &scc_info_Cash_common_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_MakeVoiceCallSimulatorNotification_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_MakeVoiceCallSimulatorNotification_default_instance_;
    new (ptr) ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MakeVoiceCallSimulatorNotification_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MakeVoiceCallSimulatorNotification_simulator_5fsocket_2eproto}, {
      &scc_info_CustomerNumber_common_5fmodel_2eproto.base,
      &scc_info_MessagingChannelNumber_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_ReceiveMessageSimulatorCommand_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_ReceiveMessageSimulatorCommand_default_instance_;
    new (ptr) ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ReceiveMessageSimulatorCommand_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_ReceiveMessageSimulatorCommand_simulator_5fsocket_2eproto}, {
      &scc_info_MessagingChannelNumber_messaging_5fmodel_2eproto.base,
      &scc_info_InboundMessageBody_messaging_5fmodel_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Cash_common_5fmodel_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_ReceivePaymentSimulatorCommand_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_ReceivePaymentSimulatorCommand_default_instance_;
    new (ptr) ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ReceivePaymentSimulatorCommand_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ReceivePaymentSimulatorCommand_simulator_5fsocket_2eproto}, {
      &scc_info_PaymentChannelNumber_payment_5fmodel_2eproto.base,
      &scc_info_Cash_common_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_SendChannelPaymentSimulatorNotification_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_SendChannelPaymentSimulatorNotification_default_instance_;
    new (ptr) ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_SendChannelPaymentSimulatorNotification_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_SendChannelPaymentSimulatorNotification_simulator_5fsocket_2eproto}, {
      &scc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto.base,
      &scc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Cash_common_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_SendCustomerPaymentSimulatorNotification_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_SendCustomerPaymentSimulatorNotification_default_instance_;
    new (ptr) ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_SendCustomerPaymentSimulatorNotification_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_SendCustomerPaymentSimulatorNotification_simulator_5fsocket_2eproto}, {
      &scc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto.base,
      &scc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto.base,
      &scc_info_CustomerNumber_common_5fmodel_2eproto.base,
      &scc_info_PaymentChannelNumber_payment_5fmodel_2eproto.base,
      &scc_info_Cash_common_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_SendMessageSimulatorNotification_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_SendMessageSimulatorNotification_default_instance_;
    new (ptr) ::com::elarian::hera::proto::SendMessageSimulatorNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_SendMessageSimulatorNotification_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_SendMessageSimulatorNotification_simulator_5fsocket_2eproto}, {
      &scc_info_CustomerNumber_common_5fmodel_2eproto.base,
      &scc_info_MessagingChannelNumber_messaging_5fmodel_2eproto.base,
      &scc_info_OutboundMessage_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_ServerToSimulatorNotification_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_ServerToSimulatorNotification_default_instance_;
    new (ptr) ::com::elarian::hera::proto::ServerToSimulatorNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ServerToSimulatorNotification_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_ServerToSimulatorNotification_simulator_5fsocket_2eproto}, {
      &scc_info_SendMessageSimulatorNotification_simulator_5fsocket_2eproto.base,
      &scc_info_MakeVoiceCallSimulatorNotification_simulator_5fsocket_2eproto.base,
      &scc_info_SendCustomerPaymentSimulatorNotification_simulator_5fsocket_2eproto.base,
      &scc_info_SendChannelPaymentSimulatorNotification_simulator_5fsocket_2eproto.base,
      &scc_info_CheckoutPaymentSimulatorNotification_simulator_5fsocket_2eproto.base,}};

static void InitDefaultsscc_info_ServerToSimulatorNotificationReply_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_ServerToSimulatorNotificationReply_default_instance_;
    new (ptr) ::com::elarian::hera::proto::ServerToSimulatorNotificationReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerToSimulatorNotificationReply_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerToSimulatorNotificationReply_simulator_5fsocket_2eproto}, {}};

static void InitDefaultsscc_info_SimulatorToServerCommand_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_SimulatorToServerCommand_default_instance_;
    new (ptr) ::com::elarian::hera::proto::SimulatorToServerCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_SimulatorToServerCommand_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_SimulatorToServerCommand_simulator_5fsocket_2eproto}, {
      &scc_info_ReceiveMessageSimulatorCommand_simulator_5fsocket_2eproto.base,
      &scc_info_ReceivePaymentSimulatorCommand_simulator_5fsocket_2eproto.base,
      &scc_info_UpdatePaymentStatusSimulatorCommand_simulator_5fsocket_2eproto.base,}};

static void InitDefaultsscc_info_SimulatorToServerCommandReply_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_SimulatorToServerCommandReply_default_instance_;
    new (ptr) ::com::elarian::hera::proto::SimulatorToServerCommandReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SimulatorToServerCommandReply_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SimulatorToServerCommandReply_simulator_5fsocket_2eproto}, {
      &scc_info_OutboundMessage_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_UpdatePaymentStatusSimulatorCommand_simulator_5fsocket_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_UpdatePaymentStatusSimulatorCommand_default_instance_;
    new (ptr) ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdatePaymentStatusSimulatorCommand_simulator_5fsocket_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdatePaymentStatusSimulatorCommand_simulator_5fsocket_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_simulator_5fsocket_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_simulator_5fsocket_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_simulator_5fsocket_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_simulator_5fsocket_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SimulatorToServerCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SimulatorToServerCommand, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SimulatorToServerCommand, entry_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceiveMessageSimulatorCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceiveMessageSimulatorCommand, customer_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceiveMessageSimulatorCommand, channel_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceiveMessageSimulatorCommand, parts_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceiveMessageSimulatorCommand, session_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceiveMessageSimulatorCommand, cost_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceiveMessageSimulatorCommand, duration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceivePaymentSimulatorCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceivePaymentSimulatorCommand, transaction_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceivePaymentSimulatorCommand, channel_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceivePaymentSimulatorCommand, customer_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceivePaymentSimulatorCommand, value_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ReceivePaymentSimulatorCommand, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand, transaction_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SimulatorToServerCommandReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SimulatorToServerCommandReply, status_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SimulatorToServerCommandReply, description_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SimulatorToServerCommandReply, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ServerToSimulatorNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ServerToSimulatorNotification, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ServerToSimulatorNotification, entry_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::ServerToSimulatorNotificationReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendMessageSimulatorNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendMessageSimulatorNotification, org_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendMessageSimulatorNotification, customer_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendMessageSimulatorNotification, message_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendMessageSimulatorNotification, customer_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendMessageSimulatorNotification, channel_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendMessageSimulatorNotification, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification, org_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification, customer_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification, session_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification, customer_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification, channel_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification, org_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification, customer_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification, app_id_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification, transaction_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification, customer_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification, channel_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification, value_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification, debit_party_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification, org_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification, app_id_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification, transaction_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification, channel_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification, source_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification, destination_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification, account_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification, value_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification, debit_party_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification, org_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification, customer_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification, app_id_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification, transaction_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification, customer_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification, channel_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification, value_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification, credit_party_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::elarian::hera::proto::SimulatorToServerCommand)},
  { 9, -1, sizeof(::com::elarian::hera::proto::ReceiveMessageSimulatorCommand)},
  { 20, -1, sizeof(::com::elarian::hera::proto::ReceivePaymentSimulatorCommand)},
  { 30, -1, sizeof(::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand)},
  { 37, -1, sizeof(::com::elarian::hera::proto::SimulatorToServerCommandReply)},
  { 45, -1, sizeof(::com::elarian::hera::proto::ServerToSimulatorNotification)},
  { 56, -1, sizeof(::com::elarian::hera::proto::ServerToSimulatorNotificationReply)},
  { 61, -1, sizeof(::com::elarian::hera::proto::SendMessageSimulatorNotification)},
  { 72, -1, sizeof(::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification)},
  { 82, -1, sizeof(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification)},
  { 97, -1, sizeof(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification)},
  { 113, -1, sizeof(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_SimulatorToServerCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_ReceiveMessageSimulatorCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_ReceivePaymentSimulatorCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_UpdatePaymentStatusSimulatorCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_SimulatorToServerCommandReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_ServerToSimulatorNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_ServerToSimulatorNotificationReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_SendMessageSimulatorNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_MakeVoiceCallSimulatorNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_SendCustomerPaymentSimulatorNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_SendChannelPaymentSimulatorNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_CheckoutPaymentSimulatorNotification_default_instance_),
};

const char descriptor_table_protodef_simulator_5fsocket_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026simulator_socket.proto\022\026com.elarian.he"
  "ra.proto\032\036google/protobuf/duration.proto"
  "\032\036google/protobuf/wrappers.proto\032\022common"
  "_model.proto\032\025messaging_model.proto\032\023pay"
  "ment_model.proto\"\247\002\n\030SimulatorToServerCo"
  "mmand\022Q\n\017receive_message\030\001 \001(\01326.com.ela"
  "rian.hera.proto.ReceiveMessageSimulatorC"
  "ommandH\000\022Q\n\017receive_payment\030\002 \001(\01326.com."
  "elarian.hera.proto.ReceivePaymentSimulat"
  "orCommandH\000\022\\\n\025update_payment_status\030\003 \001"
  "(\0132;.com.elarian.hera.proto.UpdatePaymen"
  "tStatusSimulatorCommandH\000B\007\n\005entry\"\307\002\n\036R"
  "eceiveMessageSimulatorCommand\022\027\n\017custome"
  "r_number\030\001 \001(\t\022F\n\016channel_number\030\002 \001(\0132."
  ".com.elarian.hera.proto.MessagingChannel"
  "Number\0229\n\005parts\030\003 \003(\0132*.com.elarian.hera"
  ".proto.InboundMessageBody\0220\n\nsession_id\030"
  "\004 \001(\0132\034.google.protobuf.StringValue\022*\n\004c"
  "ost\030\005 \001(\0132\034.com.elarian.hera.proto.Cash\022"
  "+\n\010duration\030\006 \001(\0132\031.google.protobuf.Dura"
  "tion\"\373\001\n\036ReceivePaymentSimulatorCommand\022"
  "\026\n\016transaction_id\030\001 \001(\t\022D\n\016channel_numbe"
  "r\030\002 \001(\0132,.com.elarian.hera.proto.Payment"
  "ChannelNumber\022\027\n\017customer_number\030\003 \001(\t\022+"
  "\n\005value\030\004 \001(\0132\034.com.elarian.hera.proto.C"
  "ash\0225\n\006status\030\005 \001(\0162%.com.elarian.hera.p"
  "roto.PaymentStatus\"t\n#UpdatePaymentStatu"
  "sSimulatorCommand\022\026\n\016transaction_id\030\001 \001("
  "\t\0225\n\006status\030\002 \001(\0162%.com.elarian.hera.pro"
  "to.PaymentStatus\"~\n\035SimulatorToServerCom"
  "mandReply\022\016\n\006status\030\001 \001(\010\022\023\n\013description"
  "\030\002 \001(\t\0228\n\007message\030\003 \001(\0132\'.com.elarian.he"
  "ra.proto.OutboundMessage\"\357\003\n\035ServerToSim"
  "ulatorNotification\022P\n\014send_message\030\001 \001(\013"
  "28.com.elarian.hera.proto.SendMessageSim"
  "ulatorNotificationH\000\022U\n\017make_voice_call\030"
  "\002 \001(\0132:.com.elarian.hera.proto.MakeVoice"
  "CallSimulatorNotificationH\000\022a\n\025send_cust"
  "omer_payment\030\003 \001(\0132@.com.elarian.hera.pr"
  "oto.SendCustomerPaymentSimulatorNotifica"
  "tionH\000\022_\n\024send_channel_payment\030\004 \001(\0132\?.c"
  "om.elarian.hera.proto.SendChannelPayment"
  "SimulatorNotificationH\000\022X\n\020checkout_paym"
  "ent\030\005 \001(\0132<.com.elarian.hera.proto.Check"
  "outPaymentSimulatorNotificationH\000B\007\n\005ent"
  "ry\"$\n\"ServerToSimulatorNotificationReply"
  "\"\236\002\n SendMessageSimulatorNotification\022\016\n"
  "\006org_id\030\001 \001(\t\022\023\n\013customer_id\030\002 \001(\t\022\022\n\nme"
  "ssage_id\030\003 \001(\t\022\?\n\017customer_number\030\004 \001(\0132"
  "&.com.elarian.hera.proto.CustomerNumber\022"
  "F\n\016channel_number\030\005 \001(\0132..com.elarian.he"
  "ra.proto.MessagingChannelNumber\0228\n\007messa"
  "ge\030\006 \001(\0132\'.com.elarian.hera.proto.Outbou"
  "ndMessage\"\346\001\n\"MakeVoiceCallSimulatorNoti"
  "fication\022\016\n\006org_id\030\001 \001(\t\022\023\n\013customer_id\030"
  "\002 \001(\t\022\022\n\nsession_id\030\003 \001(\t\022\?\n\017customer_nu"
  "mber\030\004 \001(\0132&.com.elarian.hera.proto.Cust"
  "omerNumber\022F\n\016channel_number\030\005 \001(\0132..com"
  ".elarian.hera.proto.MessagingChannelNumb"
  "er\"\302\003\n(SendCustomerPaymentSimulatorNotif"
  "ication\022\016\n\006org_id\030\001 \001(\t\022\023\n\013customer_id\030\002"
  " \001(\t\022\016\n\006app_id\030\003 \001(\t\022C\n\006wallet\030\004 \001(\01321.c"
  "om.elarian.hera.proto.PaymentWalletCount"
  "erPartyH\000\022A\n\005purse\030\005 \001(\01320.com.elarian.h"
  "era.proto.PaymentPurseCounterPartyH\000\022\026\n\016"
  "transaction_id\030\006 \001(\t\022\?\n\017customer_number\030"
  "\007 \001(\0132&.com.elarian.hera.proto.CustomerN"
  "umber\022D\n\016channel_number\030\010 \001(\0132,.com.elar"
  "ian.hera.proto.PaymentChannelNumber\022+\n\005v"
  "alue\030\t \001(\0132\034.com.elarian.hera.proto.Cash"
  "B\r\n\013debit_party\"\262\003\n\'SendChannelPaymentSi"
  "mulatorNotification\022\016\n\006org_id\030\001 \001(\t\022\016\n\006a"
  "pp_id\030\002 \001(\t\022C\n\006wallet\030\003 \001(\01321.com.elaria"
  "n.hera.proto.PaymentWalletCounterPartyH\000"
  "\022A\n\005purse\030\004 \001(\01320.com.elarian.hera.proto"
  ".PaymentPurseCounterPartyH\000\022\026\n\016transacti"
  "on_id\030\005 \001(\t\0227\n\007channel\030\006 \001(\0162&.com.elari"
  "an.hera.proto.PaymentChannel\022\016\n\006source\030\007"
  " \001(\t\022\023\n\013destination\030\010 \001(\t\022-\n\007account\030\t \001"
  "(\0132\034.google.protobuf.StringValue\022+\n\005valu"
  "e\030\n \001(\0132\034.com.elarian.hera.proto.CashB\r\n"
  "\013debit_party\"\277\003\n$CheckoutPaymentSimulato"
  "rNotification\022\016\n\006org_id\030\001 \001(\t\022\023\n\013custome"
  "r_id\030\002 \001(\t\022\016\n\006app_id\030\003 \001(\t\022C\n\006wallet\030\004 \001"
  "(\01321.com.elarian.hera.proto.PaymentWalle"
  "tCounterPartyH\000\022A\n\005purse\030\005 \001(\01320.com.ela"
  "rian.hera.proto.PaymentPurseCounterParty"
  "H\000\022\026\n\016transaction_id\030\006 \001(\t\022\?\n\017customer_n"
  "umber\030\007 \001(\0132&.com.elarian.hera.proto.Cus"
  "tomerNumber\022D\n\016channel_number\030\010 \001(\0132,.co"
  "m.elarian.hera.proto.PaymentChannelNumbe"
  "r\022+\n\005value\030\t \001(\0132\034.com.elarian.hera.prot"
  "o.CashB\016\n\014credit_partyb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_simulator_5fsocket_2eproto_deps[5] = {
  &::descriptor_table_common_5fmodel_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
  &::descriptor_table_messaging_5fmodel_2eproto,
  &::descriptor_table_payment_5fmodel_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_simulator_5fsocket_2eproto_sccs[12] = {
  &scc_info_CheckoutPaymentSimulatorNotification_simulator_5fsocket_2eproto.base,
  &scc_info_MakeVoiceCallSimulatorNotification_simulator_5fsocket_2eproto.base,
  &scc_info_ReceiveMessageSimulatorCommand_simulator_5fsocket_2eproto.base,
  &scc_info_ReceivePaymentSimulatorCommand_simulator_5fsocket_2eproto.base,
  &scc_info_SendChannelPaymentSimulatorNotification_simulator_5fsocket_2eproto.base,
  &scc_info_SendCustomerPaymentSimulatorNotification_simulator_5fsocket_2eproto.base,
  &scc_info_SendMessageSimulatorNotification_simulator_5fsocket_2eproto.base,
  &scc_info_ServerToSimulatorNotification_simulator_5fsocket_2eproto.base,
  &scc_info_ServerToSimulatorNotificationReply_simulator_5fsocket_2eproto.base,
  &scc_info_SimulatorToServerCommand_simulator_5fsocket_2eproto.base,
  &scc_info_SimulatorToServerCommandReply_simulator_5fsocket_2eproto.base,
  &scc_info_UpdatePaymentStatusSimulatorCommand_simulator_5fsocket_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_simulator_5fsocket_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_simulator_5fsocket_2eproto = {
  false, false, descriptor_table_protodef_simulator_5fsocket_2eproto, "simulator_socket.proto", 3710,
  &descriptor_table_simulator_5fsocket_2eproto_once, descriptor_table_simulator_5fsocket_2eproto_sccs, descriptor_table_simulator_5fsocket_2eproto_deps, 12, 5,
  schemas, file_default_instances, TableStruct_simulator_5fsocket_2eproto::offsets,
  file_level_metadata_simulator_5fsocket_2eproto, 12, file_level_enum_descriptors_simulator_5fsocket_2eproto, file_level_service_descriptors_simulator_5fsocket_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_simulator_5fsocket_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_simulator_5fsocket_2eproto)), true);
namespace com {
namespace elarian {
namespace hera {
namespace proto {

// ===================================================================

class SimulatorToServerCommand::_Internal {
 public:
  static const ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand& receive_message(const SimulatorToServerCommand* msg);
  static const ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand& receive_payment(const SimulatorToServerCommand* msg);
  static const ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand& update_payment_status(const SimulatorToServerCommand* msg);
};

const ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand&
SimulatorToServerCommand::_Internal::receive_message(const SimulatorToServerCommand* msg) {
  return *msg->entry_.receive_message_;
}
const ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand&
SimulatorToServerCommand::_Internal::receive_payment(const SimulatorToServerCommand* msg) {
  return *msg->entry_.receive_payment_;
}
const ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand&
SimulatorToServerCommand::_Internal::update_payment_status(const SimulatorToServerCommand* msg) {
  return *msg->entry_.update_payment_status_;
}
void SimulatorToServerCommand::set_allocated_receive_message(::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* receive_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (receive_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(receive_message);
    if (message_arena != submessage_arena) {
      receive_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, receive_message, submessage_arena);
    }
    set_has_receive_message();
    entry_.receive_message_ = receive_message;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SimulatorToServerCommand.receive_message)
}
void SimulatorToServerCommand::set_allocated_receive_payment(::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* receive_payment) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (receive_payment) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(receive_payment);
    if (message_arena != submessage_arena) {
      receive_payment = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, receive_payment, submessage_arena);
    }
    set_has_receive_payment();
    entry_.receive_payment_ = receive_payment;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SimulatorToServerCommand.receive_payment)
}
void SimulatorToServerCommand::set_allocated_update_payment_status(::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* update_payment_status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (update_payment_status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(update_payment_status);
    if (message_arena != submessage_arena) {
      update_payment_status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_payment_status, submessage_arena);
    }
    set_has_update_payment_status();
    entry_.update_payment_status_ = update_payment_status;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SimulatorToServerCommand.update_payment_status)
}
SimulatorToServerCommand::SimulatorToServerCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.SimulatorToServerCommand)
}
SimulatorToServerCommand::SimulatorToServerCommand(const SimulatorToServerCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_entry();
  switch (from.entry_case()) {
    case kReceiveMessage: {
      _internal_mutable_receive_message()->::com::elarian::hera::proto::ReceiveMessageSimulatorCommand::MergeFrom(from._internal_receive_message());
      break;
    }
    case kReceivePayment: {
      _internal_mutable_receive_payment()->::com::elarian::hera::proto::ReceivePaymentSimulatorCommand::MergeFrom(from._internal_receive_payment());
      break;
    }
    case kUpdatePaymentStatus: {
      _internal_mutable_update_payment_status()->::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand::MergeFrom(from._internal_update_payment_status());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.SimulatorToServerCommand)
}

void SimulatorToServerCommand::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SimulatorToServerCommand_simulator_5fsocket_2eproto.base);
  clear_has_entry();
}

SimulatorToServerCommand::~SimulatorToServerCommand() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.SimulatorToServerCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SimulatorToServerCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_entry()) {
    clear_entry();
  }
}

void SimulatorToServerCommand::ArenaDtor(void* object) {
  SimulatorToServerCommand* _this = reinterpret_cast< SimulatorToServerCommand* >(object);
  (void)_this;
}
void SimulatorToServerCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SimulatorToServerCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SimulatorToServerCommand& SimulatorToServerCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SimulatorToServerCommand_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void SimulatorToServerCommand::clear_entry() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.SimulatorToServerCommand)
  switch (entry_case()) {
    case kReceiveMessage: {
      if (GetArena() == nullptr) {
        delete entry_.receive_message_;
      }
      break;
    }
    case kReceivePayment: {
      if (GetArena() == nullptr) {
        delete entry_.receive_payment_;
      }
      break;
    }
    case kUpdatePaymentStatus: {
      if (GetArena() == nullptr) {
        delete entry_.update_payment_status_;
      }
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTRY_NOT_SET;
}


void SimulatorToServerCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.SimulatorToServerCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_entry();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SimulatorToServerCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.ReceiveMessageSimulatorCommand receive_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_receive_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.ReceivePaymentSimulatorCommand receive_payment = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_receive_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand update_payment_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_payment_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SimulatorToServerCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.SimulatorToServerCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.ReceiveMessageSimulatorCommand receive_message = 1;
  if (_internal_has_receive_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::receive_message(this), target, stream);
  }

  // .com.elarian.hera.proto.ReceivePaymentSimulatorCommand receive_payment = 2;
  if (_internal_has_receive_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::receive_payment(this), target, stream);
  }

  // .com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand update_payment_status = 3;
  if (_internal_has_update_payment_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::update_payment_status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.SimulatorToServerCommand)
  return target;
}

size_t SimulatorToServerCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.SimulatorToServerCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (entry_case()) {
    // .com.elarian.hera.proto.ReceiveMessageSimulatorCommand receive_message = 1;
    case kReceiveMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.receive_message_);
      break;
    }
    // .com.elarian.hera.proto.ReceivePaymentSimulatorCommand receive_payment = 2;
    case kReceivePayment: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.receive_payment_);
      break;
    }
    // .com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand update_payment_status = 3;
    case kUpdatePaymentStatus: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.update_payment_status_);
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimulatorToServerCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.SimulatorToServerCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const SimulatorToServerCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SimulatorToServerCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.SimulatorToServerCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.SimulatorToServerCommand)
    MergeFrom(*source);
  }
}

void SimulatorToServerCommand::MergeFrom(const SimulatorToServerCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.SimulatorToServerCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.entry_case()) {
    case kReceiveMessage: {
      _internal_mutable_receive_message()->::com::elarian::hera::proto::ReceiveMessageSimulatorCommand::MergeFrom(from._internal_receive_message());
      break;
    }
    case kReceivePayment: {
      _internal_mutable_receive_payment()->::com::elarian::hera::proto::ReceivePaymentSimulatorCommand::MergeFrom(from._internal_receive_payment());
      break;
    }
    case kUpdatePaymentStatus: {
      _internal_mutable_update_payment_status()->::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand::MergeFrom(from._internal_update_payment_status());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
}

void SimulatorToServerCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.SimulatorToServerCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimulatorToServerCommand::CopyFrom(const SimulatorToServerCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.SimulatorToServerCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimulatorToServerCommand::IsInitialized() const {
  return true;
}

void SimulatorToServerCommand::InternalSwap(SimulatorToServerCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(entry_, other->entry_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SimulatorToServerCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReceiveMessageSimulatorCommand::_Internal {
 public:
  static const ::com::elarian::hera::proto::MessagingChannelNumber& channel_number(const ReceiveMessageSimulatorCommand* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& session_id(const ReceiveMessageSimulatorCommand* msg);
  static const ::com::elarian::hera::proto::Cash& cost(const ReceiveMessageSimulatorCommand* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& duration(const ReceiveMessageSimulatorCommand* msg);
};

const ::com::elarian::hera::proto::MessagingChannelNumber&
ReceiveMessageSimulatorCommand::_Internal::channel_number(const ReceiveMessageSimulatorCommand* msg) {
  return *msg->channel_number_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
ReceiveMessageSimulatorCommand::_Internal::session_id(const ReceiveMessageSimulatorCommand* msg) {
  return *msg->session_id_;
}
const ::com::elarian::hera::proto::Cash&
ReceiveMessageSimulatorCommand::_Internal::cost(const ReceiveMessageSimulatorCommand* msg) {
  return *msg->cost_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
ReceiveMessageSimulatorCommand::_Internal::duration(const ReceiveMessageSimulatorCommand* msg) {
  return *msg->duration_;
}
void ReceiveMessageSimulatorCommand::clear_channel_number() {
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
}
void ReceiveMessageSimulatorCommand::clear_parts() {
  parts_.Clear();
}
void ReceiveMessageSimulatorCommand::clear_session_id() {
  if (GetArena() == nullptr && session_id_ != nullptr) {
    delete session_id_;
  }
  session_id_ = nullptr;
}
void ReceiveMessageSimulatorCommand::clear_cost() {
  if (GetArena() == nullptr && cost_ != nullptr) {
    delete cost_;
  }
  cost_ = nullptr;
}
void ReceiveMessageSimulatorCommand::clear_duration() {
  if (GetArena() == nullptr && duration_ != nullptr) {
    delete duration_;
  }
  duration_ = nullptr;
}
ReceiveMessageSimulatorCommand::ReceiveMessageSimulatorCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  parts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
}
ReceiveMessageSimulatorCommand::ReceiveMessageSimulatorCommand(const ReceiveMessageSimulatorCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      parts_(from.parts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_number().empty()) {
    customer_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_number(), 
      GetArena());
  }
  if (from._internal_has_channel_number()) {
    channel_number_ = new ::com::elarian::hera::proto::MessagingChannelNumber(*from.channel_number_);
  } else {
    channel_number_ = nullptr;
  }
  if (from._internal_has_session_id()) {
    session_id_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.session_id_);
  } else {
    session_id_ = nullptr;
  }
  if (from._internal_has_cost()) {
    cost_ = new ::com::elarian::hera::proto::Cash(*from.cost_);
  } else {
    cost_ = nullptr;
  }
  if (from._internal_has_duration()) {
    duration_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.duration_);
  } else {
    duration_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
}

void ReceiveMessageSimulatorCommand::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReceiveMessageSimulatorCommand_simulator_5fsocket_2eproto.base);
  customer_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&channel_number_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&channel_number_)) + sizeof(duration_));
}

ReceiveMessageSimulatorCommand::~ReceiveMessageSimulatorCommand() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReceiveMessageSimulatorCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  customer_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete channel_number_;
  if (this != internal_default_instance()) delete session_id_;
  if (this != internal_default_instance()) delete cost_;
  if (this != internal_default_instance()) delete duration_;
}

void ReceiveMessageSimulatorCommand::ArenaDtor(void* object) {
  ReceiveMessageSimulatorCommand* _this = reinterpret_cast< ReceiveMessageSimulatorCommand* >(object);
  (void)_this;
}
void ReceiveMessageSimulatorCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReceiveMessageSimulatorCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReceiveMessageSimulatorCommand& ReceiveMessageSimulatorCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReceiveMessageSimulatorCommand_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void ReceiveMessageSimulatorCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parts_.Clear();
  customer_number_.ClearToEmpty();
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
  if (GetArena() == nullptr && session_id_ != nullptr) {
    delete session_id_;
  }
  session_id_ = nullptr;
  if (GetArena() == nullptr && cost_ != nullptr) {
    delete cost_;
  }
  cost_ = nullptr;
  if (GetArena() == nullptr && duration_ != nullptr) {
    delete duration_;
  }
  duration_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveMessageSimulatorCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string customer_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_customer_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.ReceiveMessageSimulatorCommand.customer_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_channel_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.elarian.hera.proto.InboundMessageBody parts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue session_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_session_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.Cash cost = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_cost(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration duration = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_duration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReceiveMessageSimulatorCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string customer_number = 1;
  if (this->customer_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_number().data(), static_cast<int>(this->_internal_customer_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.ReceiveMessageSimulatorCommand.customer_number");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_customer_number(), target);
  }

  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 2;
  if (this->has_channel_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::channel_number(this), target, stream);
  }

  // repeated .com.elarian.hera.proto.InboundMessageBody parts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_parts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_parts(i), target, stream);
  }

  // .google.protobuf.StringValue session_id = 4;
  if (this->has_session_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::session_id(this), target, stream);
  }

  // .com.elarian.hera.proto.Cash cost = 5;
  if (this->has_cost()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::cost(this), target, stream);
  }

  // .google.protobuf.Duration duration = 6;
  if (this->has_duration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::duration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
  return target;
}

size_t ReceiveMessageSimulatorCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.elarian.hera.proto.InboundMessageBody parts = 3;
  total_size += 1UL * this->_internal_parts_size();
  for (const auto& msg : this->parts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string customer_number = 1;
  if (this->customer_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_number());
  }

  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 2;
  if (this->has_channel_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *channel_number_);
  }

  // .google.protobuf.StringValue session_id = 4;
  if (this->has_session_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *session_id_);
  }

  // .com.elarian.hera.proto.Cash cost = 5;
  if (this->has_cost()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cost_);
  }

  // .google.protobuf.Duration duration = 6;
  if (this->has_duration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *duration_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReceiveMessageSimulatorCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const ReceiveMessageSimulatorCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReceiveMessageSimulatorCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
    MergeFrom(*source);
  }
}

void ReceiveMessageSimulatorCommand::MergeFrom(const ReceiveMessageSimulatorCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parts_.MergeFrom(from.parts_);
  if (from.customer_number().size() > 0) {
    _internal_set_customer_number(from._internal_customer_number());
  }
  if (from.has_channel_number()) {
    _internal_mutable_channel_number()->::com::elarian::hera::proto::MessagingChannelNumber::MergeFrom(from._internal_channel_number());
  }
  if (from.has_session_id()) {
    _internal_mutable_session_id()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_session_id());
  }
  if (from.has_cost()) {
    _internal_mutable_cost()->::com::elarian::hera::proto::Cash::MergeFrom(from._internal_cost());
  }
  if (from.has_duration()) {
    _internal_mutable_duration()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_duration());
  }
}

void ReceiveMessageSimulatorCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceiveMessageSimulatorCommand::CopyFrom(const ReceiveMessageSimulatorCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveMessageSimulatorCommand::IsInitialized() const {
  return true;
}

void ReceiveMessageSimulatorCommand::InternalSwap(ReceiveMessageSimulatorCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parts_.InternalSwap(&other->parts_);
  customer_number_.Swap(&other->customer_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReceiveMessageSimulatorCommand, duration_)
      + sizeof(ReceiveMessageSimulatorCommand::duration_)
      - PROTOBUF_FIELD_OFFSET(ReceiveMessageSimulatorCommand, channel_number_)>(
          reinterpret_cast<char*>(&channel_number_),
          reinterpret_cast<char*>(&other->channel_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveMessageSimulatorCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReceivePaymentSimulatorCommand::_Internal {
 public:
  static const ::com::elarian::hera::proto::PaymentChannelNumber& channel_number(const ReceivePaymentSimulatorCommand* msg);
  static const ::com::elarian::hera::proto::Cash& value(const ReceivePaymentSimulatorCommand* msg);
};

const ::com::elarian::hera::proto::PaymentChannelNumber&
ReceivePaymentSimulatorCommand::_Internal::channel_number(const ReceivePaymentSimulatorCommand* msg) {
  return *msg->channel_number_;
}
const ::com::elarian::hera::proto::Cash&
ReceivePaymentSimulatorCommand::_Internal::value(const ReceivePaymentSimulatorCommand* msg) {
  return *msg->value_;
}
void ReceivePaymentSimulatorCommand::clear_channel_number() {
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
}
void ReceivePaymentSimulatorCommand::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
ReceivePaymentSimulatorCommand::ReceivePaymentSimulatorCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
}
ReceivePaymentSimulatorCommand::ReceivePaymentSimulatorCommand(const ReceivePaymentSimulatorCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction_id().empty()) {
    transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transaction_id(), 
      GetArena());
  }
  customer_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_number().empty()) {
    customer_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_number(), 
      GetArena());
  }
  if (from._internal_has_channel_number()) {
    channel_number_ = new ::com::elarian::hera::proto::PaymentChannelNumber(*from.channel_number_);
  } else {
    channel_number_ = nullptr;
  }
  if (from._internal_has_value()) {
    value_ = new ::com::elarian::hera::proto::Cash(*from.value_);
  } else {
    value_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
}

void ReceivePaymentSimulatorCommand::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReceivePaymentSimulatorCommand_simulator_5fsocket_2eproto.base);
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&channel_number_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&channel_number_)) + sizeof(status_));
}

ReceivePaymentSimulatorCommand::~ReceivePaymentSimulatorCommand() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReceivePaymentSimulatorCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  transaction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete channel_number_;
  if (this != internal_default_instance()) delete value_;
}

void ReceivePaymentSimulatorCommand::ArenaDtor(void* object) {
  ReceivePaymentSimulatorCommand* _this = reinterpret_cast< ReceivePaymentSimulatorCommand* >(object);
  (void)_this;
}
void ReceivePaymentSimulatorCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReceivePaymentSimulatorCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReceivePaymentSimulatorCommand& ReceivePaymentSimulatorCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReceivePaymentSimulatorCommand_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void ReceivePaymentSimulatorCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_id_.ClearToEmpty();
  customer_number_.ClearToEmpty();
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceivePaymentSimulatorCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string transaction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_transaction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.ReceivePaymentSimulatorCommand.transaction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_channel_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_number = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_customer_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.ReceivePaymentSimulatorCommand.customer_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.Cash value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentStatus status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::elarian::hera::proto::PaymentStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReceivePaymentSimulatorCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (this->transaction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transaction_id().data(), static_cast<int>(this->_internal_transaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.ReceivePaymentSimulatorCommand.transaction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transaction_id(), target);
  }

  // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 2;
  if (this->has_channel_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::channel_number(this), target, stream);
  }

  // string customer_number = 3;
  if (this->customer_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_number().data(), static_cast<int>(this->_internal_customer_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.ReceivePaymentSimulatorCommand.customer_number");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_customer_number(), target);
  }

  // .com.elarian.hera.proto.Cash value = 4;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::value(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentStatus status = 5;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
  return target;
}

size_t ReceivePaymentSimulatorCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (this->transaction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transaction_id());
  }

  // string customer_number = 3;
  if (this->customer_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_number());
  }

  // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 2;
  if (this->has_channel_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *channel_number_);
  }

  // .com.elarian.hera.proto.Cash value = 4;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .com.elarian.hera.proto.PaymentStatus status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReceivePaymentSimulatorCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const ReceivePaymentSimulatorCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReceivePaymentSimulatorCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
    MergeFrom(*source);
  }
}

void ReceivePaymentSimulatorCommand::MergeFrom(const ReceivePaymentSimulatorCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transaction_id().size() > 0) {
    _internal_set_transaction_id(from._internal_transaction_id());
  }
  if (from.customer_number().size() > 0) {
    _internal_set_customer_number(from._internal_customer_number());
  }
  if (from.has_channel_number()) {
    _internal_mutable_channel_number()->::com::elarian::hera::proto::PaymentChannelNumber::MergeFrom(from._internal_channel_number());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::com::elarian::hera::proto::Cash::MergeFrom(from._internal_value());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void ReceivePaymentSimulatorCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceivePaymentSimulatorCommand::CopyFrom(const ReceivePaymentSimulatorCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceivePaymentSimulatorCommand::IsInitialized() const {
  return true;
}

void ReceivePaymentSimulatorCommand::InternalSwap(ReceivePaymentSimulatorCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  transaction_id_.Swap(&other->transaction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_number_.Swap(&other->customer_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReceivePaymentSimulatorCommand, status_)
      + sizeof(ReceivePaymentSimulatorCommand::status_)
      - PROTOBUF_FIELD_OFFSET(ReceivePaymentSimulatorCommand, channel_number_)>(
          reinterpret_cast<char*>(&channel_number_),
          reinterpret_cast<char*>(&other->channel_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceivePaymentSimulatorCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdatePaymentStatusSimulatorCommand::_Internal {
 public:
};

UpdatePaymentStatusSimulatorCommand::UpdatePaymentStatusSimulatorCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
}
UpdatePaymentStatusSimulatorCommand::UpdatePaymentStatusSimulatorCommand(const UpdatePaymentStatusSimulatorCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction_id().empty()) {
    transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transaction_id(), 
      GetArena());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
}

void UpdatePaymentStatusSimulatorCommand::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdatePaymentStatusSimulatorCommand_simulator_5fsocket_2eproto.base);
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

UpdatePaymentStatusSimulatorCommand::~UpdatePaymentStatusSimulatorCommand() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdatePaymentStatusSimulatorCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  transaction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdatePaymentStatusSimulatorCommand::ArenaDtor(void* object) {
  UpdatePaymentStatusSimulatorCommand* _this = reinterpret_cast< UpdatePaymentStatusSimulatorCommand* >(object);
  (void)_this;
}
void UpdatePaymentStatusSimulatorCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdatePaymentStatusSimulatorCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdatePaymentStatusSimulatorCommand& UpdatePaymentStatusSimulatorCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdatePaymentStatusSimulatorCommand_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void UpdatePaymentStatusSimulatorCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_id_.ClearToEmpty();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdatePaymentStatusSimulatorCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string transaction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_transaction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.transaction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentStatus status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::elarian::hera::proto::PaymentStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdatePaymentStatusSimulatorCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (this->transaction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transaction_id().data(), static_cast<int>(this->_internal_transaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.transaction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transaction_id(), target);
  }

  // .com.elarian.hera.proto.PaymentStatus status = 2;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
  return target;
}

size_t UpdatePaymentStatusSimulatorCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (this->transaction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transaction_id());
  }

  // .com.elarian.hera.proto.PaymentStatus status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdatePaymentStatusSimulatorCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePaymentStatusSimulatorCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdatePaymentStatusSimulatorCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
    MergeFrom(*source);
  }
}

void UpdatePaymentStatusSimulatorCommand::MergeFrom(const UpdatePaymentStatusSimulatorCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transaction_id().size() > 0) {
    _internal_set_transaction_id(from._internal_transaction_id());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void UpdatePaymentStatusSimulatorCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePaymentStatusSimulatorCommand::CopyFrom(const UpdatePaymentStatusSimulatorCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePaymentStatusSimulatorCommand::IsInitialized() const {
  return true;
}

void UpdatePaymentStatusSimulatorCommand::InternalSwap(UpdatePaymentStatusSimulatorCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  transaction_id_.Swap(&other->transaction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdatePaymentStatusSimulatorCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SimulatorToServerCommandReply::_Internal {
 public:
  static const ::com::elarian::hera::proto::OutboundMessage& message(const SimulatorToServerCommandReply* msg);
};

const ::com::elarian::hera::proto::OutboundMessage&
SimulatorToServerCommandReply::_Internal::message(const SimulatorToServerCommandReply* msg) {
  return *msg->message_;
}
void SimulatorToServerCommandReply::clear_message() {
  if (GetArena() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
}
SimulatorToServerCommandReply::SimulatorToServerCommandReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.SimulatorToServerCommandReply)
}
SimulatorToServerCommandReply::SimulatorToServerCommandReply(const SimulatorToServerCommandReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  if (from._internal_has_message()) {
    message_ = new ::com::elarian::hera::proto::OutboundMessage(*from.message_);
  } else {
    message_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.SimulatorToServerCommandReply)
}

void SimulatorToServerCommandReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SimulatorToServerCommandReply_simulator_5fsocket_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&message_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&message_)) + sizeof(status_));
}

SimulatorToServerCommandReply::~SimulatorToServerCommandReply() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.SimulatorToServerCommandReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SimulatorToServerCommandReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete message_;
}

void SimulatorToServerCommandReply::ArenaDtor(void* object) {
  SimulatorToServerCommandReply* _this = reinterpret_cast< SimulatorToServerCommandReply* >(object);
  (void)_this;
}
void SimulatorToServerCommandReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SimulatorToServerCommandReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SimulatorToServerCommandReply& SimulatorToServerCommandReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SimulatorToServerCommandReply_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void SimulatorToServerCommandReply::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.SimulatorToServerCommandReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty();
  if (GetArena() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SimulatorToServerCommandReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SimulatorToServerCommandReply.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.OutboundMessage message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SimulatorToServerCommandReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.SimulatorToServerCommandReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SimulatorToServerCommandReply.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // .com.elarian.hera.proto.OutboundMessage message = 3;
  if (this->has_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.SimulatorToServerCommandReply)
  return target;
}

size_t SimulatorToServerCommandReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.SimulatorToServerCommandReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .com.elarian.hera.proto.OutboundMessage message = 3;
  if (this->has_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *message_);
  }

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimulatorToServerCommandReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.SimulatorToServerCommandReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SimulatorToServerCommandReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SimulatorToServerCommandReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.SimulatorToServerCommandReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.SimulatorToServerCommandReply)
    MergeFrom(*source);
  }
}

void SimulatorToServerCommandReply::MergeFrom(const SimulatorToServerCommandReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.SimulatorToServerCommandReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_message()) {
    _internal_mutable_message()->::com::elarian::hera::proto::OutboundMessage::MergeFrom(from._internal_message());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void SimulatorToServerCommandReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.SimulatorToServerCommandReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimulatorToServerCommandReply::CopyFrom(const SimulatorToServerCommandReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.SimulatorToServerCommandReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimulatorToServerCommandReply::IsInitialized() const {
  return true;
}

void SimulatorToServerCommandReply::InternalSwap(SimulatorToServerCommandReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SimulatorToServerCommandReply, status_)
      + sizeof(SimulatorToServerCommandReply::status_)
      - PROTOBUF_FIELD_OFFSET(SimulatorToServerCommandReply, message_)>(
          reinterpret_cast<char*>(&message_),
          reinterpret_cast<char*>(&other->message_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SimulatorToServerCommandReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ServerToSimulatorNotification::_Internal {
 public:
  static const ::com::elarian::hera::proto::SendMessageSimulatorNotification& send_message(const ServerToSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification& make_voice_call(const ServerToSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification& send_customer_payment(const ServerToSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification& send_channel_payment(const ServerToSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification& checkout_payment(const ServerToSimulatorNotification* msg);
};

const ::com::elarian::hera::proto::SendMessageSimulatorNotification&
ServerToSimulatorNotification::_Internal::send_message(const ServerToSimulatorNotification* msg) {
  return *msg->entry_.send_message_;
}
const ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification&
ServerToSimulatorNotification::_Internal::make_voice_call(const ServerToSimulatorNotification* msg) {
  return *msg->entry_.make_voice_call_;
}
const ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification&
ServerToSimulatorNotification::_Internal::send_customer_payment(const ServerToSimulatorNotification* msg) {
  return *msg->entry_.send_customer_payment_;
}
const ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification&
ServerToSimulatorNotification::_Internal::send_channel_payment(const ServerToSimulatorNotification* msg) {
  return *msg->entry_.send_channel_payment_;
}
const ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification&
ServerToSimulatorNotification::_Internal::checkout_payment(const ServerToSimulatorNotification* msg) {
  return *msg->entry_.checkout_payment_;
}
void ServerToSimulatorNotification::set_allocated_send_message(::com::elarian::hera::proto::SendMessageSimulatorNotification* send_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (send_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(send_message);
    if (message_arena != submessage_arena) {
      send_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, send_message, submessage_arena);
    }
    set_has_send_message();
    entry_.send_message_ = send_message;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ServerToSimulatorNotification.send_message)
}
void ServerToSimulatorNotification::set_allocated_make_voice_call(::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* make_voice_call) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (make_voice_call) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(make_voice_call);
    if (message_arena != submessage_arena) {
      make_voice_call = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, make_voice_call, submessage_arena);
    }
    set_has_make_voice_call();
    entry_.make_voice_call_ = make_voice_call;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ServerToSimulatorNotification.make_voice_call)
}
void ServerToSimulatorNotification::set_allocated_send_customer_payment(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* send_customer_payment) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (send_customer_payment) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(send_customer_payment);
    if (message_arena != submessage_arena) {
      send_customer_payment = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, send_customer_payment, submessage_arena);
    }
    set_has_send_customer_payment();
    entry_.send_customer_payment_ = send_customer_payment;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ServerToSimulatorNotification.send_customer_payment)
}
void ServerToSimulatorNotification::set_allocated_send_channel_payment(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* send_channel_payment) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (send_channel_payment) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(send_channel_payment);
    if (message_arena != submessage_arena) {
      send_channel_payment = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, send_channel_payment, submessage_arena);
    }
    set_has_send_channel_payment();
    entry_.send_channel_payment_ = send_channel_payment;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ServerToSimulatorNotification.send_channel_payment)
}
void ServerToSimulatorNotification::set_allocated_checkout_payment(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* checkout_payment) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (checkout_payment) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(checkout_payment);
    if (message_arena != submessage_arena) {
      checkout_payment = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, checkout_payment, submessage_arena);
    }
    set_has_checkout_payment();
    entry_.checkout_payment_ = checkout_payment;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ServerToSimulatorNotification.checkout_payment)
}
ServerToSimulatorNotification::ServerToSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.ServerToSimulatorNotification)
}
ServerToSimulatorNotification::ServerToSimulatorNotification(const ServerToSimulatorNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_entry();
  switch (from.entry_case()) {
    case kSendMessage: {
      _internal_mutable_send_message()->::com::elarian::hera::proto::SendMessageSimulatorNotification::MergeFrom(from._internal_send_message());
      break;
    }
    case kMakeVoiceCall: {
      _internal_mutable_make_voice_call()->::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification::MergeFrom(from._internal_make_voice_call());
      break;
    }
    case kSendCustomerPayment: {
      _internal_mutable_send_customer_payment()->::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification::MergeFrom(from._internal_send_customer_payment());
      break;
    }
    case kSendChannelPayment: {
      _internal_mutable_send_channel_payment()->::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification::MergeFrom(from._internal_send_channel_payment());
      break;
    }
    case kCheckoutPayment: {
      _internal_mutable_checkout_payment()->::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification::MergeFrom(from._internal_checkout_payment());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.ServerToSimulatorNotification)
}

void ServerToSimulatorNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServerToSimulatorNotification_simulator_5fsocket_2eproto.base);
  clear_has_entry();
}

ServerToSimulatorNotification::~ServerToSimulatorNotification() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.ServerToSimulatorNotification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerToSimulatorNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_entry()) {
    clear_entry();
  }
}

void ServerToSimulatorNotification::ArenaDtor(void* object) {
  ServerToSimulatorNotification* _this = reinterpret_cast< ServerToSimulatorNotification* >(object);
  (void)_this;
}
void ServerToSimulatorNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerToSimulatorNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerToSimulatorNotification& ServerToSimulatorNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerToSimulatorNotification_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void ServerToSimulatorNotification::clear_entry() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.ServerToSimulatorNotification)
  switch (entry_case()) {
    case kSendMessage: {
      if (GetArena() == nullptr) {
        delete entry_.send_message_;
      }
      break;
    }
    case kMakeVoiceCall: {
      if (GetArena() == nullptr) {
        delete entry_.make_voice_call_;
      }
      break;
    }
    case kSendCustomerPayment: {
      if (GetArena() == nullptr) {
        delete entry_.send_customer_payment_;
      }
      break;
    }
    case kSendChannelPayment: {
      if (GetArena() == nullptr) {
        delete entry_.send_channel_payment_;
      }
      break;
    }
    case kCheckoutPayment: {
      if (GetArena() == nullptr) {
        delete entry_.checkout_payment_;
      }
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTRY_NOT_SET;
}


void ServerToSimulatorNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.ServerToSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_entry();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerToSimulatorNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.SendMessageSimulatorNotification send_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_send_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.MakeVoiceCallSimulatorNotification make_voice_call = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_make_voice_call(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification send_customer_payment = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_send_customer_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.SendChannelPaymentSimulatorNotification send_channel_payment = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_send_channel_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.CheckoutPaymentSimulatorNotification checkout_payment = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_checkout_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerToSimulatorNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.ServerToSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.SendMessageSimulatorNotification send_message = 1;
  if (_internal_has_send_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::send_message(this), target, stream);
  }

  // .com.elarian.hera.proto.MakeVoiceCallSimulatorNotification make_voice_call = 2;
  if (_internal_has_make_voice_call()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::make_voice_call(this), target, stream);
  }

  // .com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification send_customer_payment = 3;
  if (_internal_has_send_customer_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::send_customer_payment(this), target, stream);
  }

  // .com.elarian.hera.proto.SendChannelPaymentSimulatorNotification send_channel_payment = 4;
  if (_internal_has_send_channel_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::send_channel_payment(this), target, stream);
  }

  // .com.elarian.hera.proto.CheckoutPaymentSimulatorNotification checkout_payment = 5;
  if (_internal_has_checkout_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::checkout_payment(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.ServerToSimulatorNotification)
  return target;
}

size_t ServerToSimulatorNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.ServerToSimulatorNotification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (entry_case()) {
    // .com.elarian.hera.proto.SendMessageSimulatorNotification send_message = 1;
    case kSendMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.send_message_);
      break;
    }
    // .com.elarian.hera.proto.MakeVoiceCallSimulatorNotification make_voice_call = 2;
    case kMakeVoiceCall: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.make_voice_call_);
      break;
    }
    // .com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification send_customer_payment = 3;
    case kSendCustomerPayment: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.send_customer_payment_);
      break;
    }
    // .com.elarian.hera.proto.SendChannelPaymentSimulatorNotification send_channel_payment = 4;
    case kSendChannelPayment: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.send_channel_payment_);
      break;
    }
    // .com.elarian.hera.proto.CheckoutPaymentSimulatorNotification checkout_payment = 5;
    case kCheckoutPayment: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.checkout_payment_);
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerToSimulatorNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.ServerToSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerToSimulatorNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerToSimulatorNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.ServerToSimulatorNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.ServerToSimulatorNotification)
    MergeFrom(*source);
  }
}

void ServerToSimulatorNotification::MergeFrom(const ServerToSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.ServerToSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.entry_case()) {
    case kSendMessage: {
      _internal_mutable_send_message()->::com::elarian::hera::proto::SendMessageSimulatorNotification::MergeFrom(from._internal_send_message());
      break;
    }
    case kMakeVoiceCall: {
      _internal_mutable_make_voice_call()->::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification::MergeFrom(from._internal_make_voice_call());
      break;
    }
    case kSendCustomerPayment: {
      _internal_mutable_send_customer_payment()->::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification::MergeFrom(from._internal_send_customer_payment());
      break;
    }
    case kSendChannelPayment: {
      _internal_mutable_send_channel_payment()->::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification::MergeFrom(from._internal_send_channel_payment());
      break;
    }
    case kCheckoutPayment: {
      _internal_mutable_checkout_payment()->::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification::MergeFrom(from._internal_checkout_payment());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
}

void ServerToSimulatorNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.ServerToSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerToSimulatorNotification::CopyFrom(const ServerToSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.ServerToSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerToSimulatorNotification::IsInitialized() const {
  return true;
}

void ServerToSimulatorNotification::InternalSwap(ServerToSimulatorNotification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(entry_, other->entry_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerToSimulatorNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ServerToSimulatorNotificationReply::_Internal {
 public:
};

ServerToSimulatorNotificationReply::ServerToSimulatorNotificationReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
}
ServerToSimulatorNotificationReply::ServerToSimulatorNotificationReply(const ServerToSimulatorNotificationReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
}

void ServerToSimulatorNotificationReply::SharedCtor() {
}

ServerToSimulatorNotificationReply::~ServerToSimulatorNotificationReply() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerToSimulatorNotificationReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerToSimulatorNotificationReply::ArenaDtor(void* object) {
  ServerToSimulatorNotificationReply* _this = reinterpret_cast< ServerToSimulatorNotificationReply* >(object);
  (void)_this;
}
void ServerToSimulatorNotificationReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerToSimulatorNotificationReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerToSimulatorNotificationReply& ServerToSimulatorNotificationReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerToSimulatorNotificationReply_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void ServerToSimulatorNotificationReply::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerToSimulatorNotificationReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerToSimulatorNotificationReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
  return target;
}

size_t ServerToSimulatorNotificationReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerToSimulatorNotificationReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerToSimulatorNotificationReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerToSimulatorNotificationReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
    MergeFrom(*source);
  }
}

void ServerToSimulatorNotificationReply::MergeFrom(const ServerToSimulatorNotificationReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerToSimulatorNotificationReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerToSimulatorNotificationReply::CopyFrom(const ServerToSimulatorNotificationReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerToSimulatorNotificationReply::IsInitialized() const {
  return true;
}

void ServerToSimulatorNotificationReply::InternalSwap(ServerToSimulatorNotificationReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerToSimulatorNotificationReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SendMessageSimulatorNotification::_Internal {
 public:
  static const ::com::elarian::hera::proto::CustomerNumber& customer_number(const SendMessageSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::MessagingChannelNumber& channel_number(const SendMessageSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::OutboundMessage& message(const SendMessageSimulatorNotification* msg);
};

const ::com::elarian::hera::proto::CustomerNumber&
SendMessageSimulatorNotification::_Internal::customer_number(const SendMessageSimulatorNotification* msg) {
  return *msg->customer_number_;
}
const ::com::elarian::hera::proto::MessagingChannelNumber&
SendMessageSimulatorNotification::_Internal::channel_number(const SendMessageSimulatorNotification* msg) {
  return *msg->channel_number_;
}
const ::com::elarian::hera::proto::OutboundMessage&
SendMessageSimulatorNotification::_Internal::message(const SendMessageSimulatorNotification* msg) {
  return *msg->message_;
}
void SendMessageSimulatorNotification::clear_customer_number() {
  if (GetArena() == nullptr && customer_number_ != nullptr) {
    delete customer_number_;
  }
  customer_number_ = nullptr;
}
void SendMessageSimulatorNotification::clear_channel_number() {
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
}
void SendMessageSimulatorNotification::clear_message() {
  if (GetArena() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
}
SendMessageSimulatorNotification::SendMessageSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.SendMessageSimulatorNotification)
}
SendMessageSimulatorNotification::SendMessageSimulatorNotification(const SendMessageSimulatorNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_org_id().empty()) {
    org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_org_id(), 
      GetArena());
  }
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArena());
  }
  message_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message_id().empty()) {
    message_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message_id(), 
      GetArena());
  }
  if (from._internal_has_customer_number()) {
    customer_number_ = new ::com::elarian::hera::proto::CustomerNumber(*from.customer_number_);
  } else {
    customer_number_ = nullptr;
  }
  if (from._internal_has_channel_number()) {
    channel_number_ = new ::com::elarian::hera::proto::MessagingChannelNumber(*from.channel_number_);
  } else {
    channel_number_ = nullptr;
  }
  if (from._internal_has_message()) {
    message_ = new ::com::elarian::hera::proto::OutboundMessage(*from.message_);
  } else {
    message_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.SendMessageSimulatorNotification)
}

void SendMessageSimulatorNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SendMessageSimulatorNotification_simulator_5fsocket_2eproto.base);
  org_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&customer_number_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&message_) -
      reinterpret_cast<char*>(&customer_number_)) + sizeof(message_));
}

SendMessageSimulatorNotification::~SendMessageSimulatorNotification() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.SendMessageSimulatorNotification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendMessageSimulatorNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  org_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete customer_number_;
  if (this != internal_default_instance()) delete channel_number_;
  if (this != internal_default_instance()) delete message_;
}

void SendMessageSimulatorNotification::ArenaDtor(void* object) {
  SendMessageSimulatorNotification* _this = reinterpret_cast< SendMessageSimulatorNotification* >(object);
  (void)_this;
}
void SendMessageSimulatorNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendMessageSimulatorNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendMessageSimulatorNotification& SendMessageSimulatorNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendMessageSimulatorNotification_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void SendMessageSimulatorNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.SendMessageSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  customer_id_.ClearToEmpty();
  message_id_.ClearToEmpty();
  if (GetArena() == nullptr && customer_number_ != nullptr) {
    delete customer_number_;
  }
  customer_number_ = nullptr;
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
  if (GetArena() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendMessageSimulatorNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string org_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendMessageSimulatorNotification.org_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendMessageSimulatorNotification.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_message_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendMessageSimulatorNotification.message_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.CustomerNumber customer_number = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_channel_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.OutboundMessage message = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendMessageSimulatorNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.SendMessageSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1;
  if (this->org_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendMessageSimulatorNotification.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string customer_id = 2;
  if (this->customer_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendMessageSimulatorNotification.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  // string message_id = 3;
  if (this->message_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_id().data(), static_cast<int>(this->_internal_message_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendMessageSimulatorNotification.message_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message_id(), target);
  }

  // .com.elarian.hera.proto.CustomerNumber customer_number = 4;
  if (this->has_customer_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::customer_number(this), target, stream);
  }

  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 5;
  if (this->has_channel_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::channel_number(this), target, stream);
  }

  // .com.elarian.hera.proto.OutboundMessage message = 6;
  if (this->has_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.SendMessageSimulatorNotification)
  return target;
}

size_t SendMessageSimulatorNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.SendMessageSimulatorNotification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1;
  if (this->org_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string customer_id = 2;
  if (this->customer_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // string message_id = 3;
  if (this->message_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_id());
  }

  // .com.elarian.hera.proto.CustomerNumber customer_number = 4;
  if (this->has_customer_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *customer_number_);
  }

  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 5;
  if (this->has_channel_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *channel_number_);
  }

  // .com.elarian.hera.proto.OutboundMessage message = 6;
  if (this->has_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *message_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendMessageSimulatorNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.SendMessageSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const SendMessageSimulatorNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendMessageSimulatorNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.SendMessageSimulatorNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.SendMessageSimulatorNotification)
    MergeFrom(*source);
  }
}

void SendMessageSimulatorNotification::MergeFrom(const SendMessageSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.SendMessageSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.org_id().size() > 0) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (from.customer_id().size() > 0) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from.message_id().size() > 0) {
    _internal_set_message_id(from._internal_message_id());
  }
  if (from.has_customer_number()) {
    _internal_mutable_customer_number()->::com::elarian::hera::proto::CustomerNumber::MergeFrom(from._internal_customer_number());
  }
  if (from.has_channel_number()) {
    _internal_mutable_channel_number()->::com::elarian::hera::proto::MessagingChannelNumber::MergeFrom(from._internal_channel_number());
  }
  if (from.has_message()) {
    _internal_mutable_message()->::com::elarian::hera::proto::OutboundMessage::MergeFrom(from._internal_message());
  }
}

void SendMessageSimulatorNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.SendMessageSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMessageSimulatorNotification::CopyFrom(const SendMessageSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.SendMessageSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessageSimulatorNotification::IsInitialized() const {
  return true;
}

void SendMessageSimulatorNotification::InternalSwap(SendMessageSimulatorNotification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  org_id_.Swap(&other->org_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_id_.Swap(&other->customer_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_id_.Swap(&other->message_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendMessageSimulatorNotification, message_)
      + sizeof(SendMessageSimulatorNotification::message_)
      - PROTOBUF_FIELD_OFFSET(SendMessageSimulatorNotification, customer_number_)>(
          reinterpret_cast<char*>(&customer_number_),
          reinterpret_cast<char*>(&other->customer_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendMessageSimulatorNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MakeVoiceCallSimulatorNotification::_Internal {
 public:
  static const ::com::elarian::hera::proto::CustomerNumber& customer_number(const MakeVoiceCallSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::MessagingChannelNumber& channel_number(const MakeVoiceCallSimulatorNotification* msg);
};

const ::com::elarian::hera::proto::CustomerNumber&
MakeVoiceCallSimulatorNotification::_Internal::customer_number(const MakeVoiceCallSimulatorNotification* msg) {
  return *msg->customer_number_;
}
const ::com::elarian::hera::proto::MessagingChannelNumber&
MakeVoiceCallSimulatorNotification::_Internal::channel_number(const MakeVoiceCallSimulatorNotification* msg) {
  return *msg->channel_number_;
}
void MakeVoiceCallSimulatorNotification::clear_customer_number() {
  if (GetArena() == nullptr && customer_number_ != nullptr) {
    delete customer_number_;
  }
  customer_number_ = nullptr;
}
void MakeVoiceCallSimulatorNotification::clear_channel_number() {
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
}
MakeVoiceCallSimulatorNotification::MakeVoiceCallSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
}
MakeVoiceCallSimulatorNotification::MakeVoiceCallSimulatorNotification(const MakeVoiceCallSimulatorNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_org_id().empty()) {
    org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_org_id(), 
      GetArena());
  }
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArena());
  }
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_session_id().empty()) {
    session_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_session_id(), 
      GetArena());
  }
  if (from._internal_has_customer_number()) {
    customer_number_ = new ::com::elarian::hera::proto::CustomerNumber(*from.customer_number_);
  } else {
    customer_number_ = nullptr;
  }
  if (from._internal_has_channel_number()) {
    channel_number_ = new ::com::elarian::hera::proto::MessagingChannelNumber(*from.channel_number_);
  } else {
    channel_number_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
}

void MakeVoiceCallSimulatorNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MakeVoiceCallSimulatorNotification_simulator_5fsocket_2eproto.base);
  org_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&customer_number_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&channel_number_) -
      reinterpret_cast<char*>(&customer_number_)) + sizeof(channel_number_));
}

MakeVoiceCallSimulatorNotification::~MakeVoiceCallSimulatorNotification() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MakeVoiceCallSimulatorNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  org_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete customer_number_;
  if (this != internal_default_instance()) delete channel_number_;
}

void MakeVoiceCallSimulatorNotification::ArenaDtor(void* object) {
  MakeVoiceCallSimulatorNotification* _this = reinterpret_cast< MakeVoiceCallSimulatorNotification* >(object);
  (void)_this;
}
void MakeVoiceCallSimulatorNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MakeVoiceCallSimulatorNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MakeVoiceCallSimulatorNotification& MakeVoiceCallSimulatorNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MakeVoiceCallSimulatorNotification_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void MakeVoiceCallSimulatorNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  customer_id_.ClearToEmpty();
  session_id_.ClearToEmpty();
  if (GetArena() == nullptr && customer_number_ != nullptr) {
    delete customer_number_;
  }
  customer_number_ = nullptr;
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MakeVoiceCallSimulatorNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string org_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.org_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string session_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_session_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.session_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.CustomerNumber customer_number = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_channel_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MakeVoiceCallSimulatorNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1;
  if (this->org_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string customer_id = 2;
  if (this->customer_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.session_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_session_id(), target);
  }

  // .com.elarian.hera.proto.CustomerNumber customer_number = 4;
  if (this->has_customer_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::customer_number(this), target, stream);
  }

  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 5;
  if (this->has_channel_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::channel_number(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
  return target;
}

size_t MakeVoiceCallSimulatorNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1;
  if (this->org_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string customer_id = 2;
  if (this->customer_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // .com.elarian.hera.proto.CustomerNumber customer_number = 4;
  if (this->has_customer_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *customer_number_);
  }

  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 5;
  if (this->has_channel_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *channel_number_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MakeVoiceCallSimulatorNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const MakeVoiceCallSimulatorNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MakeVoiceCallSimulatorNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
    MergeFrom(*source);
  }
}

void MakeVoiceCallSimulatorNotification::MergeFrom(const MakeVoiceCallSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.org_id().size() > 0) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (from.customer_id().size() > 0) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from.session_id().size() > 0) {
    _internal_set_session_id(from._internal_session_id());
  }
  if (from.has_customer_number()) {
    _internal_mutable_customer_number()->::com::elarian::hera::proto::CustomerNumber::MergeFrom(from._internal_customer_number());
  }
  if (from.has_channel_number()) {
    _internal_mutable_channel_number()->::com::elarian::hera::proto::MessagingChannelNumber::MergeFrom(from._internal_channel_number());
  }
}

void MakeVoiceCallSimulatorNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MakeVoiceCallSimulatorNotification::CopyFrom(const MakeVoiceCallSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MakeVoiceCallSimulatorNotification::IsInitialized() const {
  return true;
}

void MakeVoiceCallSimulatorNotification::InternalSwap(MakeVoiceCallSimulatorNotification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  org_id_.Swap(&other->org_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_id_.Swap(&other->customer_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  session_id_.Swap(&other->session_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MakeVoiceCallSimulatorNotification, channel_number_)
      + sizeof(MakeVoiceCallSimulatorNotification::channel_number_)
      - PROTOBUF_FIELD_OFFSET(MakeVoiceCallSimulatorNotification, customer_number_)>(
          reinterpret_cast<char*>(&customer_number_),
          reinterpret_cast<char*>(&other->customer_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MakeVoiceCallSimulatorNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SendCustomerPaymentSimulatorNotification::_Internal {
 public:
  static const ::com::elarian::hera::proto::PaymentWalletCounterParty& wallet(const SendCustomerPaymentSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::PaymentPurseCounterParty& purse(const SendCustomerPaymentSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::CustomerNumber& customer_number(const SendCustomerPaymentSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::PaymentChannelNumber& channel_number(const SendCustomerPaymentSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::Cash& value(const SendCustomerPaymentSimulatorNotification* msg);
};

const ::com::elarian::hera::proto::PaymentWalletCounterParty&
SendCustomerPaymentSimulatorNotification::_Internal::wallet(const SendCustomerPaymentSimulatorNotification* msg) {
  return *msg->debit_party_.wallet_;
}
const ::com::elarian::hera::proto::PaymentPurseCounterParty&
SendCustomerPaymentSimulatorNotification::_Internal::purse(const SendCustomerPaymentSimulatorNotification* msg) {
  return *msg->debit_party_.purse_;
}
const ::com::elarian::hera::proto::CustomerNumber&
SendCustomerPaymentSimulatorNotification::_Internal::customer_number(const SendCustomerPaymentSimulatorNotification* msg) {
  return *msg->customer_number_;
}
const ::com::elarian::hera::proto::PaymentChannelNumber&
SendCustomerPaymentSimulatorNotification::_Internal::channel_number(const SendCustomerPaymentSimulatorNotification* msg) {
  return *msg->channel_number_;
}
const ::com::elarian::hera::proto::Cash&
SendCustomerPaymentSimulatorNotification::_Internal::value(const SendCustomerPaymentSimulatorNotification* msg) {
  return *msg->value_;
}
void SendCustomerPaymentSimulatorNotification::set_allocated_wallet(::com::elarian::hera::proto::PaymentWalletCounterParty* wallet) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_debit_party();
  if (wallet) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(wallet)->GetArena();
    if (message_arena != submessage_arena) {
      wallet = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wallet, submessage_arena);
    }
    set_has_wallet();
    debit_party_.wallet_ = wallet;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.wallet)
}
void SendCustomerPaymentSimulatorNotification::clear_wallet() {
  if (_internal_has_wallet()) {
    if (GetArena() == nullptr) {
      delete debit_party_.wallet_;
    }
    clear_has_debit_party();
  }
}
void SendCustomerPaymentSimulatorNotification::set_allocated_purse(::com::elarian::hera::proto::PaymentPurseCounterParty* purse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_debit_party();
  if (purse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(purse)->GetArena();
    if (message_arena != submessage_arena) {
      purse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, purse, submessage_arena);
    }
    set_has_purse();
    debit_party_.purse_ = purse;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.purse)
}
void SendCustomerPaymentSimulatorNotification::clear_purse() {
  if (_internal_has_purse()) {
    if (GetArena() == nullptr) {
      delete debit_party_.purse_;
    }
    clear_has_debit_party();
  }
}
void SendCustomerPaymentSimulatorNotification::clear_customer_number() {
  if (GetArena() == nullptr && customer_number_ != nullptr) {
    delete customer_number_;
  }
  customer_number_ = nullptr;
}
void SendCustomerPaymentSimulatorNotification::clear_channel_number() {
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
}
void SendCustomerPaymentSimulatorNotification::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
SendCustomerPaymentSimulatorNotification::SendCustomerPaymentSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
}
SendCustomerPaymentSimulatorNotification::SendCustomerPaymentSimulatorNotification(const SendCustomerPaymentSimulatorNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_org_id().empty()) {
    org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_org_id(), 
      GetArena());
  }
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArena());
  }
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArena());
  }
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction_id().empty()) {
    transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transaction_id(), 
      GetArena());
  }
  if (from._internal_has_customer_number()) {
    customer_number_ = new ::com::elarian::hera::proto::CustomerNumber(*from.customer_number_);
  } else {
    customer_number_ = nullptr;
  }
  if (from._internal_has_channel_number()) {
    channel_number_ = new ::com::elarian::hera::proto::PaymentChannelNumber(*from.channel_number_);
  } else {
    channel_number_ = nullptr;
  }
  if (from._internal_has_value()) {
    value_ = new ::com::elarian::hera::proto::Cash(*from.value_);
  } else {
    value_ = nullptr;
  }
  clear_has_debit_party();
  switch (from.debit_party_case()) {
    case kWallet: {
      _internal_mutable_wallet()->::com::elarian::hera::proto::PaymentWalletCounterParty::MergeFrom(from._internal_wallet());
      break;
    }
    case kPurse: {
      _internal_mutable_purse()->::com::elarian::hera::proto::PaymentPurseCounterParty::MergeFrom(from._internal_purse());
      break;
    }
    case DEBIT_PARTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
}

void SendCustomerPaymentSimulatorNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SendCustomerPaymentSimulatorNotification_simulator_5fsocket_2eproto.base);
  org_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&customer_number_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&customer_number_)) + sizeof(value_));
  clear_has_debit_party();
}

SendCustomerPaymentSimulatorNotification::~SendCustomerPaymentSimulatorNotification() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendCustomerPaymentSimulatorNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  org_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transaction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete customer_number_;
  if (this != internal_default_instance()) delete channel_number_;
  if (this != internal_default_instance()) delete value_;
  if (has_debit_party()) {
    clear_debit_party();
  }
}

void SendCustomerPaymentSimulatorNotification::ArenaDtor(void* object) {
  SendCustomerPaymentSimulatorNotification* _this = reinterpret_cast< SendCustomerPaymentSimulatorNotification* >(object);
  (void)_this;
}
void SendCustomerPaymentSimulatorNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendCustomerPaymentSimulatorNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendCustomerPaymentSimulatorNotification& SendCustomerPaymentSimulatorNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendCustomerPaymentSimulatorNotification_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void SendCustomerPaymentSimulatorNotification::clear_debit_party() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
  switch (debit_party_case()) {
    case kWallet: {
      if (GetArena() == nullptr) {
        delete debit_party_.wallet_;
      }
      break;
    }
    case kPurse: {
      if (GetArena() == nullptr) {
        delete debit_party_.purse_;
      }
      break;
    }
    case DEBIT_PARTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DEBIT_PARTY_NOT_SET;
}


void SendCustomerPaymentSimulatorNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  customer_id_.ClearToEmpty();
  app_id_.ClearToEmpty();
  transaction_id_.ClearToEmpty();
  if (GetArena() == nullptr && customer_number_ != nullptr) {
    delete customer_number_;
  }
  customer_number_ = nullptr;
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  clear_debit_party();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendCustomerPaymentSimulatorNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string org_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.org_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string app_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.app_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_wallet(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_purse(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string transaction_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_transaction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.transaction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.CustomerNumber customer_number = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_channel_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.Cash value = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendCustomerPaymentSimulatorNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1;
  if (this->org_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string customer_id = 2;
  if (this->customer_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  // string app_id = 3;
  if (this->app_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.app_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_app_id(), target);
  }

  // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 4;
  if (_internal_has_wallet()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::wallet(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 5;
  if (_internal_has_purse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::purse(this), target, stream);
  }

  // string transaction_id = 6;
  if (this->transaction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transaction_id().data(), static_cast<int>(this->_internal_transaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.transaction_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_transaction_id(), target);
  }

  // .com.elarian.hera.proto.CustomerNumber customer_number = 7;
  if (this->has_customer_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::customer_number(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 8;
  if (this->has_channel_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::channel_number(this), target, stream);
  }

  // .com.elarian.hera.proto.Cash value = 9;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
  return target;
}

size_t SendCustomerPaymentSimulatorNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1;
  if (this->org_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string customer_id = 2;
  if (this->customer_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // string app_id = 3;
  if (this->app_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string transaction_id = 6;
  if (this->transaction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transaction_id());
  }

  // .com.elarian.hera.proto.CustomerNumber customer_number = 7;
  if (this->has_customer_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *customer_number_);
  }

  // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 8;
  if (this->has_channel_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *channel_number_);
  }

  // .com.elarian.hera.proto.Cash value = 9;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  switch (debit_party_case()) {
    // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 4;
    case kWallet: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *debit_party_.wallet_);
      break;
    }
    // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 5;
    case kPurse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *debit_party_.purse_);
      break;
    }
    case DEBIT_PARTY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendCustomerPaymentSimulatorNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const SendCustomerPaymentSimulatorNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendCustomerPaymentSimulatorNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
    MergeFrom(*source);
  }
}

void SendCustomerPaymentSimulatorNotification::MergeFrom(const SendCustomerPaymentSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.org_id().size() > 0) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (from.customer_id().size() > 0) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from.app_id().size() > 0) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (from.transaction_id().size() > 0) {
    _internal_set_transaction_id(from._internal_transaction_id());
  }
  if (from.has_customer_number()) {
    _internal_mutable_customer_number()->::com::elarian::hera::proto::CustomerNumber::MergeFrom(from._internal_customer_number());
  }
  if (from.has_channel_number()) {
    _internal_mutable_channel_number()->::com::elarian::hera::proto::PaymentChannelNumber::MergeFrom(from._internal_channel_number());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::com::elarian::hera::proto::Cash::MergeFrom(from._internal_value());
  }
  switch (from.debit_party_case()) {
    case kWallet: {
      _internal_mutable_wallet()->::com::elarian::hera::proto::PaymentWalletCounterParty::MergeFrom(from._internal_wallet());
      break;
    }
    case kPurse: {
      _internal_mutable_purse()->::com::elarian::hera::proto::PaymentPurseCounterParty::MergeFrom(from._internal_purse());
      break;
    }
    case DEBIT_PARTY_NOT_SET: {
      break;
    }
  }
}

void SendCustomerPaymentSimulatorNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendCustomerPaymentSimulatorNotification::CopyFrom(const SendCustomerPaymentSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendCustomerPaymentSimulatorNotification::IsInitialized() const {
  return true;
}

void SendCustomerPaymentSimulatorNotification::InternalSwap(SendCustomerPaymentSimulatorNotification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  org_id_.Swap(&other->org_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_id_.Swap(&other->customer_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  app_id_.Swap(&other->app_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  transaction_id_.Swap(&other->transaction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendCustomerPaymentSimulatorNotification, value_)
      + sizeof(SendCustomerPaymentSimulatorNotification::value_)
      - PROTOBUF_FIELD_OFFSET(SendCustomerPaymentSimulatorNotification, customer_number_)>(
          reinterpret_cast<char*>(&customer_number_),
          reinterpret_cast<char*>(&other->customer_number_));
  swap(debit_party_, other->debit_party_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendCustomerPaymentSimulatorNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SendChannelPaymentSimulatorNotification::_Internal {
 public:
  static const ::com::elarian::hera::proto::PaymentWalletCounterParty& wallet(const SendChannelPaymentSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::PaymentPurseCounterParty& purse(const SendChannelPaymentSimulatorNotification* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& account(const SendChannelPaymentSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::Cash& value(const SendChannelPaymentSimulatorNotification* msg);
};

const ::com::elarian::hera::proto::PaymentWalletCounterParty&
SendChannelPaymentSimulatorNotification::_Internal::wallet(const SendChannelPaymentSimulatorNotification* msg) {
  return *msg->debit_party_.wallet_;
}
const ::com::elarian::hera::proto::PaymentPurseCounterParty&
SendChannelPaymentSimulatorNotification::_Internal::purse(const SendChannelPaymentSimulatorNotification* msg) {
  return *msg->debit_party_.purse_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
SendChannelPaymentSimulatorNotification::_Internal::account(const SendChannelPaymentSimulatorNotification* msg) {
  return *msg->account_;
}
const ::com::elarian::hera::proto::Cash&
SendChannelPaymentSimulatorNotification::_Internal::value(const SendChannelPaymentSimulatorNotification* msg) {
  return *msg->value_;
}
void SendChannelPaymentSimulatorNotification::set_allocated_wallet(::com::elarian::hera::proto::PaymentWalletCounterParty* wallet) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_debit_party();
  if (wallet) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(wallet)->GetArena();
    if (message_arena != submessage_arena) {
      wallet = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wallet, submessage_arena);
    }
    set_has_wallet();
    debit_party_.wallet_ = wallet;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.wallet)
}
void SendChannelPaymentSimulatorNotification::clear_wallet() {
  if (_internal_has_wallet()) {
    if (GetArena() == nullptr) {
      delete debit_party_.wallet_;
    }
    clear_has_debit_party();
  }
}
void SendChannelPaymentSimulatorNotification::set_allocated_purse(::com::elarian::hera::proto::PaymentPurseCounterParty* purse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_debit_party();
  if (purse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(purse)->GetArena();
    if (message_arena != submessage_arena) {
      purse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, purse, submessage_arena);
    }
    set_has_purse();
    debit_party_.purse_ = purse;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.purse)
}
void SendChannelPaymentSimulatorNotification::clear_purse() {
  if (_internal_has_purse()) {
    if (GetArena() == nullptr) {
      delete debit_party_.purse_;
    }
    clear_has_debit_party();
  }
}
void SendChannelPaymentSimulatorNotification::clear_account() {
  if (GetArena() == nullptr && account_ != nullptr) {
    delete account_;
  }
  account_ = nullptr;
}
void SendChannelPaymentSimulatorNotification::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
SendChannelPaymentSimulatorNotification::SendChannelPaymentSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
}
SendChannelPaymentSimulatorNotification::SendChannelPaymentSimulatorNotification(const SendChannelPaymentSimulatorNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_org_id().empty()) {
    org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_org_id(), 
      GetArena());
  }
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArena());
  }
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction_id().empty()) {
    transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transaction_id(), 
      GetArena());
  }
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source().empty()) {
    source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source(), 
      GetArena());
  }
  destination_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_destination().empty()) {
    destination_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_destination(), 
      GetArena());
  }
  if (from._internal_has_account()) {
    account_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.account_);
  } else {
    account_ = nullptr;
  }
  if (from._internal_has_value()) {
    value_ = new ::com::elarian::hera::proto::Cash(*from.value_);
  } else {
    value_ = nullptr;
  }
  channel_ = from.channel_;
  clear_has_debit_party();
  switch (from.debit_party_case()) {
    case kWallet: {
      _internal_mutable_wallet()->::com::elarian::hera::proto::PaymentWalletCounterParty::MergeFrom(from._internal_wallet());
      break;
    }
    case kPurse: {
      _internal_mutable_purse()->::com::elarian::hera::proto::PaymentPurseCounterParty::MergeFrom(from._internal_purse());
      break;
    }
    case DEBIT_PARTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
}

void SendChannelPaymentSimulatorNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SendChannelPaymentSimulatorNotification_simulator_5fsocket_2eproto.base);
  org_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destination_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&account_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&account_)) + sizeof(channel_));
  clear_has_debit_party();
}

SendChannelPaymentSimulatorNotification::~SendChannelPaymentSimulatorNotification() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendChannelPaymentSimulatorNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  org_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transaction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destination_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete account_;
  if (this != internal_default_instance()) delete value_;
  if (has_debit_party()) {
    clear_debit_party();
  }
}

void SendChannelPaymentSimulatorNotification::ArenaDtor(void* object) {
  SendChannelPaymentSimulatorNotification* _this = reinterpret_cast< SendChannelPaymentSimulatorNotification* >(object);
  (void)_this;
}
void SendChannelPaymentSimulatorNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendChannelPaymentSimulatorNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendChannelPaymentSimulatorNotification& SendChannelPaymentSimulatorNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendChannelPaymentSimulatorNotification_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void SendChannelPaymentSimulatorNotification::clear_debit_party() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
  switch (debit_party_case()) {
    case kWallet: {
      if (GetArena() == nullptr) {
        delete debit_party_.wallet_;
      }
      break;
    }
    case kPurse: {
      if (GetArena() == nullptr) {
        delete debit_party_.purse_;
      }
      break;
    }
    case DEBIT_PARTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DEBIT_PARTY_NOT_SET;
}


void SendChannelPaymentSimulatorNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  app_id_.ClearToEmpty();
  transaction_id_.ClearToEmpty();
  source_.ClearToEmpty();
  destination_.ClearToEmpty();
  if (GetArena() == nullptr && account_ != nullptr) {
    delete account_;
  }
  account_ = nullptr;
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  channel_ = 0;
  clear_debit_party();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendChannelPaymentSimulatorNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string org_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.org_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.app_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_wallet(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_purse(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string transaction_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_transaction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.transaction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentChannel channel = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_channel(static_cast<::com::elarian::hera::proto::PaymentChannel>(val));
        } else goto handle_unusual;
        continue;
      // string source = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.source"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string destination = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_destination();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.destination"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue account = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_account(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.Cash value = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendChannelPaymentSimulatorNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1;
  if (this->org_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string app_id = 2;
  if (this->app_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.app_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_app_id(), target);
  }

  // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 3;
  if (_internal_has_wallet()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::wallet(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 4;
  if (_internal_has_purse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::purse(this), target, stream);
  }

  // string transaction_id = 5;
  if (this->transaction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transaction_id().data(), static_cast<int>(this->_internal_transaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.transaction_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_transaction_id(), target);
  }

  // .com.elarian.hera.proto.PaymentChannel channel = 6;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_channel(), target);
  }

  // string source = 7;
  if (this->source().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.source");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_source(), target);
  }

  // string destination = 8;
  if (this->destination().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destination().data(), static_cast<int>(this->_internal_destination().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.destination");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_destination(), target);
  }

  // .google.protobuf.StringValue account = 9;
  if (this->has_account()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::account(this), target, stream);
  }

  // .com.elarian.hera.proto.Cash value = 10;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
  return target;
}

size_t SendChannelPaymentSimulatorNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1;
  if (this->org_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string app_id = 2;
  if (this->app_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string transaction_id = 5;
  if (this->transaction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transaction_id());
  }

  // string source = 7;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // string destination = 8;
  if (this->destination().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destination());
  }

  // .google.protobuf.StringValue account = 9;
  if (this->has_account()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_);
  }

  // .com.elarian.hera.proto.Cash value = 10;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .com.elarian.hera.proto.PaymentChannel channel = 6;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_channel());
  }

  switch (debit_party_case()) {
    // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 3;
    case kWallet: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *debit_party_.wallet_);
      break;
    }
    // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 4;
    case kPurse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *debit_party_.purse_);
      break;
    }
    case DEBIT_PARTY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendChannelPaymentSimulatorNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const SendChannelPaymentSimulatorNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendChannelPaymentSimulatorNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
    MergeFrom(*source);
  }
}

void SendChannelPaymentSimulatorNotification::MergeFrom(const SendChannelPaymentSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.org_id().size() > 0) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (from.app_id().size() > 0) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (from.transaction_id().size() > 0) {
    _internal_set_transaction_id(from._internal_transaction_id());
  }
  if (from.source().size() > 0) {
    _internal_set_source(from._internal_source());
  }
  if (from.destination().size() > 0) {
    _internal_set_destination(from._internal_destination());
  }
  if (from.has_account()) {
    _internal_mutable_account()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_account());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::com::elarian::hera::proto::Cash::MergeFrom(from._internal_value());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
  switch (from.debit_party_case()) {
    case kWallet: {
      _internal_mutable_wallet()->::com::elarian::hera::proto::PaymentWalletCounterParty::MergeFrom(from._internal_wallet());
      break;
    }
    case kPurse: {
      _internal_mutable_purse()->::com::elarian::hera::proto::PaymentPurseCounterParty::MergeFrom(from._internal_purse());
      break;
    }
    case DEBIT_PARTY_NOT_SET: {
      break;
    }
  }
}

void SendChannelPaymentSimulatorNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendChannelPaymentSimulatorNotification::CopyFrom(const SendChannelPaymentSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendChannelPaymentSimulatorNotification::IsInitialized() const {
  return true;
}

void SendChannelPaymentSimulatorNotification::InternalSwap(SendChannelPaymentSimulatorNotification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  org_id_.Swap(&other->org_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  app_id_.Swap(&other->app_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  transaction_id_.Swap(&other->transaction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_.Swap(&other->source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  destination_.Swap(&other->destination_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendChannelPaymentSimulatorNotification, channel_)
      + sizeof(SendChannelPaymentSimulatorNotification::channel_)
      - PROTOBUF_FIELD_OFFSET(SendChannelPaymentSimulatorNotification, account_)>(
          reinterpret_cast<char*>(&account_),
          reinterpret_cast<char*>(&other->account_));
  swap(debit_party_, other->debit_party_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendChannelPaymentSimulatorNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CheckoutPaymentSimulatorNotification::_Internal {
 public:
  static const ::com::elarian::hera::proto::PaymentWalletCounterParty& wallet(const CheckoutPaymentSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::PaymentPurseCounterParty& purse(const CheckoutPaymentSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::CustomerNumber& customer_number(const CheckoutPaymentSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::PaymentChannelNumber& channel_number(const CheckoutPaymentSimulatorNotification* msg);
  static const ::com::elarian::hera::proto::Cash& value(const CheckoutPaymentSimulatorNotification* msg);
};

const ::com::elarian::hera::proto::PaymentWalletCounterParty&
CheckoutPaymentSimulatorNotification::_Internal::wallet(const CheckoutPaymentSimulatorNotification* msg) {
  return *msg->credit_party_.wallet_;
}
const ::com::elarian::hera::proto::PaymentPurseCounterParty&
CheckoutPaymentSimulatorNotification::_Internal::purse(const CheckoutPaymentSimulatorNotification* msg) {
  return *msg->credit_party_.purse_;
}
const ::com::elarian::hera::proto::CustomerNumber&
CheckoutPaymentSimulatorNotification::_Internal::customer_number(const CheckoutPaymentSimulatorNotification* msg) {
  return *msg->customer_number_;
}
const ::com::elarian::hera::proto::PaymentChannelNumber&
CheckoutPaymentSimulatorNotification::_Internal::channel_number(const CheckoutPaymentSimulatorNotification* msg) {
  return *msg->channel_number_;
}
const ::com::elarian::hera::proto::Cash&
CheckoutPaymentSimulatorNotification::_Internal::value(const CheckoutPaymentSimulatorNotification* msg) {
  return *msg->value_;
}
void CheckoutPaymentSimulatorNotification::set_allocated_wallet(::com::elarian::hera::proto::PaymentWalletCounterParty* wallet) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_credit_party();
  if (wallet) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(wallet)->GetArena();
    if (message_arena != submessage_arena) {
      wallet = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wallet, submessage_arena);
    }
    set_has_wallet();
    credit_party_.wallet_ = wallet;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.wallet)
}
void CheckoutPaymentSimulatorNotification::clear_wallet() {
  if (_internal_has_wallet()) {
    if (GetArena() == nullptr) {
      delete credit_party_.wallet_;
    }
    clear_has_credit_party();
  }
}
void CheckoutPaymentSimulatorNotification::set_allocated_purse(::com::elarian::hera::proto::PaymentPurseCounterParty* purse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_credit_party();
  if (purse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(purse)->GetArena();
    if (message_arena != submessage_arena) {
      purse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, purse, submessage_arena);
    }
    set_has_purse();
    credit_party_.purse_ = purse;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.purse)
}
void CheckoutPaymentSimulatorNotification::clear_purse() {
  if (_internal_has_purse()) {
    if (GetArena() == nullptr) {
      delete credit_party_.purse_;
    }
    clear_has_credit_party();
  }
}
void CheckoutPaymentSimulatorNotification::clear_customer_number() {
  if (GetArena() == nullptr && customer_number_ != nullptr) {
    delete customer_number_;
  }
  customer_number_ = nullptr;
}
void CheckoutPaymentSimulatorNotification::clear_channel_number() {
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
}
void CheckoutPaymentSimulatorNotification::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
CheckoutPaymentSimulatorNotification::CheckoutPaymentSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
}
CheckoutPaymentSimulatorNotification::CheckoutPaymentSimulatorNotification(const CheckoutPaymentSimulatorNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_org_id().empty()) {
    org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_org_id(), 
      GetArena());
  }
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArena());
  }
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArena());
  }
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction_id().empty()) {
    transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transaction_id(), 
      GetArena());
  }
  if (from._internal_has_customer_number()) {
    customer_number_ = new ::com::elarian::hera::proto::CustomerNumber(*from.customer_number_);
  } else {
    customer_number_ = nullptr;
  }
  if (from._internal_has_channel_number()) {
    channel_number_ = new ::com::elarian::hera::proto::PaymentChannelNumber(*from.channel_number_);
  } else {
    channel_number_ = nullptr;
  }
  if (from._internal_has_value()) {
    value_ = new ::com::elarian::hera::proto::Cash(*from.value_);
  } else {
    value_ = nullptr;
  }
  clear_has_credit_party();
  switch (from.credit_party_case()) {
    case kWallet: {
      _internal_mutable_wallet()->::com::elarian::hera::proto::PaymentWalletCounterParty::MergeFrom(from._internal_wallet());
      break;
    }
    case kPurse: {
      _internal_mutable_purse()->::com::elarian::hera::proto::PaymentPurseCounterParty::MergeFrom(from._internal_purse());
      break;
    }
    case CREDIT_PARTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
}

void CheckoutPaymentSimulatorNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CheckoutPaymentSimulatorNotification_simulator_5fsocket_2eproto.base);
  org_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&customer_number_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&customer_number_)) + sizeof(value_));
  clear_has_credit_party();
}

CheckoutPaymentSimulatorNotification::~CheckoutPaymentSimulatorNotification() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckoutPaymentSimulatorNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  org_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transaction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete customer_number_;
  if (this != internal_default_instance()) delete channel_number_;
  if (this != internal_default_instance()) delete value_;
  if (has_credit_party()) {
    clear_credit_party();
  }
}

void CheckoutPaymentSimulatorNotification::ArenaDtor(void* object) {
  CheckoutPaymentSimulatorNotification* _this = reinterpret_cast< CheckoutPaymentSimulatorNotification* >(object);
  (void)_this;
}
void CheckoutPaymentSimulatorNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckoutPaymentSimulatorNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckoutPaymentSimulatorNotification& CheckoutPaymentSimulatorNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckoutPaymentSimulatorNotification_simulator_5fsocket_2eproto.base);
  return *internal_default_instance();
}


void CheckoutPaymentSimulatorNotification::clear_credit_party() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
  switch (credit_party_case()) {
    case kWallet: {
      if (GetArena() == nullptr) {
        delete credit_party_.wallet_;
      }
      break;
    }
    case kPurse: {
      if (GetArena() == nullptr) {
        delete credit_party_.purse_;
      }
      break;
    }
    case CREDIT_PARTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CREDIT_PARTY_NOT_SET;
}


void CheckoutPaymentSimulatorNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  customer_id_.ClearToEmpty();
  app_id_.ClearToEmpty();
  transaction_id_.ClearToEmpty();
  if (GetArena() == nullptr && customer_number_ != nullptr) {
    delete customer_number_;
  }
  customer_number_ = nullptr;
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  clear_credit_party();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckoutPaymentSimulatorNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string org_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.org_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string app_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.app_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_wallet(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_purse(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string transaction_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_transaction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.transaction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.CustomerNumber customer_number = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_channel_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.Cash value = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckoutPaymentSimulatorNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1;
  if (this->org_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string customer_id = 2;
  if (this->customer_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  // string app_id = 3;
  if (this->app_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.app_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_app_id(), target);
  }

  // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 4;
  if (_internal_has_wallet()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::wallet(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 5;
  if (_internal_has_purse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::purse(this), target, stream);
  }

  // string transaction_id = 6;
  if (this->transaction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transaction_id().data(), static_cast<int>(this->_internal_transaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.transaction_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_transaction_id(), target);
  }

  // .com.elarian.hera.proto.CustomerNumber customer_number = 7;
  if (this->has_customer_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::customer_number(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 8;
  if (this->has_channel_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::channel_number(this), target, stream);
  }

  // .com.elarian.hera.proto.Cash value = 9;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
  return target;
}

size_t CheckoutPaymentSimulatorNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1;
  if (this->org_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string customer_id = 2;
  if (this->customer_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // string app_id = 3;
  if (this->app_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string transaction_id = 6;
  if (this->transaction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transaction_id());
  }

  // .com.elarian.hera.proto.CustomerNumber customer_number = 7;
  if (this->has_customer_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *customer_number_);
  }

  // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 8;
  if (this->has_channel_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *channel_number_);
  }

  // .com.elarian.hera.proto.Cash value = 9;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  switch (credit_party_case()) {
    // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 4;
    case kWallet: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *credit_party_.wallet_);
      break;
    }
    // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 5;
    case kPurse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *credit_party_.purse_);
      break;
    }
    case CREDIT_PARTY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckoutPaymentSimulatorNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckoutPaymentSimulatorNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckoutPaymentSimulatorNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
    MergeFrom(*source);
  }
}

void CheckoutPaymentSimulatorNotification::MergeFrom(const CheckoutPaymentSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.org_id().size() > 0) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (from.customer_id().size() > 0) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from.app_id().size() > 0) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (from.transaction_id().size() > 0) {
    _internal_set_transaction_id(from._internal_transaction_id());
  }
  if (from.has_customer_number()) {
    _internal_mutable_customer_number()->::com::elarian::hera::proto::CustomerNumber::MergeFrom(from._internal_customer_number());
  }
  if (from.has_channel_number()) {
    _internal_mutable_channel_number()->::com::elarian::hera::proto::PaymentChannelNumber::MergeFrom(from._internal_channel_number());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::com::elarian::hera::proto::Cash::MergeFrom(from._internal_value());
  }
  switch (from.credit_party_case()) {
    case kWallet: {
      _internal_mutable_wallet()->::com::elarian::hera::proto::PaymentWalletCounterParty::MergeFrom(from._internal_wallet());
      break;
    }
    case kPurse: {
      _internal_mutable_purse()->::com::elarian::hera::proto::PaymentPurseCounterParty::MergeFrom(from._internal_purse());
      break;
    }
    case CREDIT_PARTY_NOT_SET: {
      break;
    }
  }
}

void CheckoutPaymentSimulatorNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckoutPaymentSimulatorNotification::CopyFrom(const CheckoutPaymentSimulatorNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckoutPaymentSimulatorNotification::IsInitialized() const {
  return true;
}

void CheckoutPaymentSimulatorNotification::InternalSwap(CheckoutPaymentSimulatorNotification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  org_id_.Swap(&other->org_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_id_.Swap(&other->customer_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  app_id_.Swap(&other->app_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  transaction_id_.Swap(&other->transaction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CheckoutPaymentSimulatorNotification, value_)
      + sizeof(CheckoutPaymentSimulatorNotification::value_)
      - PROTOBUF_FIELD_OFFSET(CheckoutPaymentSimulatorNotification, customer_number_)>(
          reinterpret_cast<char*>(&customer_number_),
          reinterpret_cast<char*>(&other->customer_number_));
  swap(credit_party_, other->credit_party_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckoutPaymentSimulatorNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::SimulatorToServerCommand* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::SimulatorToServerCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::SimulatorToServerCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::SimulatorToServerCommandReply* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::SimulatorToServerCommandReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::SimulatorToServerCommandReply >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::ServerToSimulatorNotification* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::ServerToSimulatorNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::ServerToSimulatorNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::ServerToSimulatorNotificationReply* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::ServerToSimulatorNotificationReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::ServerToSimulatorNotificationReply >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::SendMessageSimulatorNotification* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::SendMessageSimulatorNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::SendMessageSimulatorNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
