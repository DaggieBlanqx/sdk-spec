// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app_state.proto

#include "app_state.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_app_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CustomerReminder_app_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataMapValue_common_5fmodel_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class AppStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppState> _instance;
} _AppState_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
static void InitDefaultsscc_info_AppState_app_5fstate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_AppState_default_instance_;
    new (ptr) ::com::elarian::hera::proto::AppState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AppState_app_5fstate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_AppState_app_5fstate_2eproto}, {
      &scc_info_DataMapValue_common_5fmodel_2eproto.base,
      &scc_info_CustomerReminder_app_5fmodel_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_app_5fstate_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_app_5fstate_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_app_5fstate_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_app_5fstate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::AppState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::AppState, data_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::AppState, reminders_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::elarian::hera::proto::AppState)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_AppState_default_instance_),
};

const char descriptor_table_protodef_app_5fstate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017app_state.proto\022\026com.elarian.hera.prot"
  "o\032\022common_model.proto\032\017app_model.proto\"{"
  "\n\010AppState\0222\n\004data\030\001 \001(\0132$.com.elarian.h"
  "era.proto.DataMapValue\022;\n\treminders\030\002 \003("
  "\0132(.com.elarian.hera.proto.CustomerRemin"
  "derb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_app_5fstate_2eproto_deps[2] = {
  &::descriptor_table_app_5fmodel_2eproto,
  &::descriptor_table_common_5fmodel_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_app_5fstate_2eproto_sccs[1] = {
  &scc_info_AppState_app_5fstate_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_app_5fstate_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_app_5fstate_2eproto = {
  false, false, descriptor_table_protodef_app_5fstate_2eproto, "app_state.proto", 211,
  &descriptor_table_app_5fstate_2eproto_once, descriptor_table_app_5fstate_2eproto_sccs, descriptor_table_app_5fstate_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_app_5fstate_2eproto::offsets,
  file_level_metadata_app_5fstate_2eproto, 1, file_level_enum_descriptors_app_5fstate_2eproto, file_level_service_descriptors_app_5fstate_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_app_5fstate_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_app_5fstate_2eproto)), true);
namespace com {
namespace elarian {
namespace hera {
namespace proto {

// ===================================================================

class AppState::_Internal {
 public:
  static const ::com::elarian::hera::proto::DataMapValue& data(const AppState* msg);
};

const ::com::elarian::hera::proto::DataMapValue&
AppState::_Internal::data(const AppState* msg) {
  return *msg->data_;
}
void AppState::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
void AppState::clear_reminders() {
  reminders_.Clear();
}
AppState::AppState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  reminders_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.AppState)
}
AppState::AppState(const AppState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      reminders_(from.reminders_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    data_ = new ::com::elarian::hera::proto::DataMapValue(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.AppState)
}

void AppState::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AppState_app_5fstate_2eproto.base);
  data_ = nullptr;
}

AppState::~AppState() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.AppState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete data_;
}

void AppState::ArenaDtor(void* object) {
  AppState* _this = reinterpret_cast< AppState* >(object);
  (void)_this;
}
void AppState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppState& AppState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppState_app_5fstate_2eproto.base);
  return *internal_default_instance();
}


void AppState::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.AppState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reminders_.Clear();
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.DataMapValue data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.elarian.hera.proto.CustomerReminder reminders = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reminders(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.AppState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.DataMapValue data = 1;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::data(this), target, stream);
  }

  // repeated .com.elarian.hera.proto.CustomerReminder reminders = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reminders_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_reminders(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.AppState)
  return target;
}

size_t AppState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.AppState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.elarian.hera.proto.CustomerReminder reminders = 2;
  total_size += 1UL * this->_internal_reminders_size();
  for (const auto& msg : this->reminders_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .com.elarian.hera.proto.DataMapValue data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.AppState)
  GOOGLE_DCHECK_NE(&from, this);
  const AppState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.AppState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.AppState)
    MergeFrom(*source);
  }
}

void AppState::MergeFrom(const AppState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.AppState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reminders_.MergeFrom(from.reminders_);
  if (from.has_data()) {
    _internal_mutable_data()->::com::elarian::hera::proto::DataMapValue::MergeFrom(from._internal_data());
  }
}

void AppState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.AppState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppState::CopyFrom(const AppState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.AppState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppState::IsInitialized() const {
  return true;
}

void AppState::InternalSwap(AppState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reminders_.InternalSwap(&other->reminders_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppState::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::AppState* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::AppState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::AppState >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
