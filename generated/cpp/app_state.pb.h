// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app_state.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_app_5fstate_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_app_5fstate_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common_model.pb.h"
#include "app_model.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_app_5fstate_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_app_5fstate_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_app_5fstate_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class AppState;
class AppStateDefaultTypeInternal;
extern AppStateDefaultTypeInternal _AppState_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::elarian::hera::proto::AppState* Arena::CreateMaybeMessage<::com::elarian::hera::proto::AppState>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace elarian {
namespace hera {
namespace proto {

// ===================================================================

class AppState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.AppState) */ {
 public:
  inline AppState() : AppState(nullptr) {}
  virtual ~AppState();

  AppState(const AppState& from);
  AppState(AppState&& from) noexcept
    : AppState() {
    *this = ::std::move(from);
  }

  inline AppState& operator=(const AppState& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppState& operator=(AppState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppState& default_instance();

  static inline const AppState* internal_default_instance() {
    return reinterpret_cast<const AppState*>(
               &_AppState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AppState& a, AppState& b) {
    a.Swap(&b);
  }
  inline void Swap(AppState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppState* New() const final {
    return CreateMaybeMessage<AppState>(nullptr);
  }

  AppState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppState& from);
  void MergeFrom(const AppState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.AppState";
  }
  protected:
  explicit AppState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_app_5fstate_2eproto);
    return ::descriptor_table_app_5fstate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRemindersFieldNumber = 2,
    kDataFieldNumber = 1,
  };
  // repeated .com.elarian.hera.proto.CustomerReminder reminders = 2;
  int reminders_size() const;
  private:
  int _internal_reminders_size() const;
  public:
  void clear_reminders();
  ::com::elarian::hera::proto::CustomerReminder* mutable_reminders(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerReminder >*
      mutable_reminders();
  private:
  const ::com::elarian::hera::proto::CustomerReminder& _internal_reminders(int index) const;
  ::com::elarian::hera::proto::CustomerReminder* _internal_add_reminders();
  public:
  const ::com::elarian::hera::proto::CustomerReminder& reminders(int index) const;
  ::com::elarian::hera::proto::CustomerReminder* add_reminders();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerReminder >&
      reminders() const;

  // .com.elarian.hera.proto.DataMapValue data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::com::elarian::hera::proto::DataMapValue& data() const;
  ::com::elarian::hera::proto::DataMapValue* release_data();
  ::com::elarian::hera::proto::DataMapValue* mutable_data();
  void set_allocated_data(::com::elarian::hera::proto::DataMapValue* data);
  private:
  const ::com::elarian::hera::proto::DataMapValue& _internal_data() const;
  ::com::elarian::hera::proto::DataMapValue* _internal_mutable_data();
  public:
  void unsafe_arena_set_allocated_data(
      ::com::elarian::hera::proto::DataMapValue* data);
  ::com::elarian::hera::proto::DataMapValue* unsafe_arena_release_data();

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.AppState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerReminder > reminders_;
  ::com::elarian::hera::proto::DataMapValue* data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_app_5fstate_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AppState

// .com.elarian.hera.proto.DataMapValue data = 1;
inline bool AppState::_internal_has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline bool AppState::has_data() const {
  return _internal_has_data();
}
inline const ::com::elarian::hera::proto::DataMapValue& AppState::_internal_data() const {
  const ::com::elarian::hera::proto::DataMapValue* p = data_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::DataMapValue&>(
      ::com::elarian::hera::proto::_DataMapValue_default_instance_);
}
inline const ::com::elarian::hera::proto::DataMapValue& AppState::data() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.AppState.data)
  return _internal_data();
}
inline void AppState::unsafe_arena_set_allocated_data(
    ::com::elarian::hera::proto::DataMapValue* data) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.AppState.data)
}
inline ::com::elarian::hera::proto::DataMapValue* AppState::release_data() {
  
  ::com::elarian::hera::proto::DataMapValue* temp = data_;
  data_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::DataMapValue* AppState::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.AppState.data)
  
  ::com::elarian::hera::proto::DataMapValue* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::DataMapValue* AppState::_internal_mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::DataMapValue>(GetArena());
    data_ = p;
  }
  return data_;
}
inline ::com::elarian::hera::proto::DataMapValue* AppState::mutable_data() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.AppState.data)
  return _internal_mutable_data();
}
inline void AppState::set_allocated_data(::com::elarian::hera::proto::DataMapValue* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data)->GetArena();
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.AppState.data)
}

// repeated .com.elarian.hera.proto.CustomerReminder reminders = 2;
inline int AppState::_internal_reminders_size() const {
  return reminders_.size();
}
inline int AppState::reminders_size() const {
  return _internal_reminders_size();
}
inline ::com::elarian::hera::proto::CustomerReminder* AppState::mutable_reminders(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.AppState.reminders)
  return reminders_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerReminder >*
AppState::mutable_reminders() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.AppState.reminders)
  return &reminders_;
}
inline const ::com::elarian::hera::proto::CustomerReminder& AppState::_internal_reminders(int index) const {
  return reminders_.Get(index);
}
inline const ::com::elarian::hera::proto::CustomerReminder& AppState::reminders(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.AppState.reminders)
  return _internal_reminders(index);
}
inline ::com::elarian::hera::proto::CustomerReminder* AppState::_internal_add_reminders() {
  return reminders_.Add();
}
inline ::com::elarian::hera::proto::CustomerReminder* AppState::add_reminders() {
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.AppState.reminders)
  return _internal_add_reminders();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerReminder >&
AppState::reminders() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.AppState.reminders)
  return reminders_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_app_5fstate_2eproto
