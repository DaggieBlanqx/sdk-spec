// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: simulator_socket.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_simulator_5fsocket_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_simulator_5fsocket_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "common_model.pb.h"
#include "messaging_model.pb.h"
#include "payment_model.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_simulator_5fsocket_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_simulator_5fsocket_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_simulator_5fsocket_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class CheckoutPaymentSimulatorNotification;
class CheckoutPaymentSimulatorNotificationDefaultTypeInternal;
extern CheckoutPaymentSimulatorNotificationDefaultTypeInternal _CheckoutPaymentSimulatorNotification_default_instance_;
class MakeVoiceCallSimulatorNotification;
class MakeVoiceCallSimulatorNotificationDefaultTypeInternal;
extern MakeVoiceCallSimulatorNotificationDefaultTypeInternal _MakeVoiceCallSimulatorNotification_default_instance_;
class ReceiveMessageSimulatorCommand;
class ReceiveMessageSimulatorCommandDefaultTypeInternal;
extern ReceiveMessageSimulatorCommandDefaultTypeInternal _ReceiveMessageSimulatorCommand_default_instance_;
class ReceivePaymentSimulatorCommand;
class ReceivePaymentSimulatorCommandDefaultTypeInternal;
extern ReceivePaymentSimulatorCommandDefaultTypeInternal _ReceivePaymentSimulatorCommand_default_instance_;
class SendChannelPaymentSimulatorNotification;
class SendChannelPaymentSimulatorNotificationDefaultTypeInternal;
extern SendChannelPaymentSimulatorNotificationDefaultTypeInternal _SendChannelPaymentSimulatorNotification_default_instance_;
class SendCustomerPaymentSimulatorNotification;
class SendCustomerPaymentSimulatorNotificationDefaultTypeInternal;
extern SendCustomerPaymentSimulatorNotificationDefaultTypeInternal _SendCustomerPaymentSimulatorNotification_default_instance_;
class SendMessageSimulatorNotification;
class SendMessageSimulatorNotificationDefaultTypeInternal;
extern SendMessageSimulatorNotificationDefaultTypeInternal _SendMessageSimulatorNotification_default_instance_;
class ServerToSimulatorNotification;
class ServerToSimulatorNotificationDefaultTypeInternal;
extern ServerToSimulatorNotificationDefaultTypeInternal _ServerToSimulatorNotification_default_instance_;
class ServerToSimulatorNotificationReply;
class ServerToSimulatorNotificationReplyDefaultTypeInternal;
extern ServerToSimulatorNotificationReplyDefaultTypeInternal _ServerToSimulatorNotificationReply_default_instance_;
class SimulatorToServerCommand;
class SimulatorToServerCommandDefaultTypeInternal;
extern SimulatorToServerCommandDefaultTypeInternal _SimulatorToServerCommand_default_instance_;
class SimulatorToServerCommandReply;
class SimulatorToServerCommandReplyDefaultTypeInternal;
extern SimulatorToServerCommandReplyDefaultTypeInternal _SimulatorToServerCommandReply_default_instance_;
class UpdatePaymentStatusSimulatorCommand;
class UpdatePaymentStatusSimulatorCommandDefaultTypeInternal;
extern UpdatePaymentStatusSimulatorCommandDefaultTypeInternal _UpdatePaymentStatusSimulatorCommand_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* Arena::CreateMaybeMessage<::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification>(Arena*);
template<> ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* Arena::CreateMaybeMessage<::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification>(Arena*);
template<> ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* Arena::CreateMaybeMessage<::com::elarian::hera::proto::ReceiveMessageSimulatorCommand>(Arena*);
template<> ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* Arena::CreateMaybeMessage<::com::elarian::hera::proto::ReceivePaymentSimulatorCommand>(Arena*);
template<> ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* Arena::CreateMaybeMessage<::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification>(Arena*);
template<> ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* Arena::CreateMaybeMessage<::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification>(Arena*);
template<> ::com::elarian::hera::proto::SendMessageSimulatorNotification* Arena::CreateMaybeMessage<::com::elarian::hera::proto::SendMessageSimulatorNotification>(Arena*);
template<> ::com::elarian::hera::proto::ServerToSimulatorNotification* Arena::CreateMaybeMessage<::com::elarian::hera::proto::ServerToSimulatorNotification>(Arena*);
template<> ::com::elarian::hera::proto::ServerToSimulatorNotificationReply* Arena::CreateMaybeMessage<::com::elarian::hera::proto::ServerToSimulatorNotificationReply>(Arena*);
template<> ::com::elarian::hera::proto::SimulatorToServerCommand* Arena::CreateMaybeMessage<::com::elarian::hera::proto::SimulatorToServerCommand>(Arena*);
template<> ::com::elarian::hera::proto::SimulatorToServerCommandReply* Arena::CreateMaybeMessage<::com::elarian::hera::proto::SimulatorToServerCommandReply>(Arena*);
template<> ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* Arena::CreateMaybeMessage<::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace elarian {
namespace hera {
namespace proto {

// ===================================================================

class SimulatorToServerCommand PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.SimulatorToServerCommand) */ {
 public:
  inline SimulatorToServerCommand() : SimulatorToServerCommand(nullptr) {}
  virtual ~SimulatorToServerCommand();

  SimulatorToServerCommand(const SimulatorToServerCommand& from);
  SimulatorToServerCommand(SimulatorToServerCommand&& from) noexcept
    : SimulatorToServerCommand() {
    *this = ::std::move(from);
  }

  inline SimulatorToServerCommand& operator=(const SimulatorToServerCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimulatorToServerCommand& operator=(SimulatorToServerCommand&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SimulatorToServerCommand& default_instance();

  enum EntryCase {
    kReceiveMessage = 1,
    kReceivePayment = 2,
    kUpdatePaymentStatus = 3,
    ENTRY_NOT_SET = 0,
  };

  static inline const SimulatorToServerCommand* internal_default_instance() {
    return reinterpret_cast<const SimulatorToServerCommand*>(
               &_SimulatorToServerCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SimulatorToServerCommand& a, SimulatorToServerCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(SimulatorToServerCommand* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SimulatorToServerCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SimulatorToServerCommand* New() const final {
    return CreateMaybeMessage<SimulatorToServerCommand>(nullptr);
  }

  SimulatorToServerCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SimulatorToServerCommand>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SimulatorToServerCommand& from);
  void MergeFrom(const SimulatorToServerCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SimulatorToServerCommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.SimulatorToServerCommand";
  }
  protected:
  explicit SimulatorToServerCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReceiveMessageFieldNumber = 1,
    kReceivePaymentFieldNumber = 2,
    kUpdatePaymentStatusFieldNumber = 3,
  };
  // .com.elarian.hera.proto.ReceiveMessageSimulatorCommand receive_message = 1;
  bool has_receive_message() const;
  private:
  bool _internal_has_receive_message() const;
  public:
  void clear_receive_message();
  const ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand& receive_message() const;
  ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* release_receive_message();
  ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* mutable_receive_message();
  void set_allocated_receive_message(::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* receive_message);
  private:
  const ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand& _internal_receive_message() const;
  ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* _internal_mutable_receive_message();
  public:
  void unsafe_arena_set_allocated_receive_message(
      ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* receive_message);
  ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* unsafe_arena_release_receive_message();

  // .com.elarian.hera.proto.ReceivePaymentSimulatorCommand receive_payment = 2;
  bool has_receive_payment() const;
  private:
  bool _internal_has_receive_payment() const;
  public:
  void clear_receive_payment();
  const ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand& receive_payment() const;
  ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* release_receive_payment();
  ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* mutable_receive_payment();
  void set_allocated_receive_payment(::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* receive_payment);
  private:
  const ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand& _internal_receive_payment() const;
  ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* _internal_mutable_receive_payment();
  public:
  void unsafe_arena_set_allocated_receive_payment(
      ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* receive_payment);
  ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* unsafe_arena_release_receive_payment();

  // .com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand update_payment_status = 3;
  bool has_update_payment_status() const;
  private:
  bool _internal_has_update_payment_status() const;
  public:
  void clear_update_payment_status();
  const ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand& update_payment_status() const;
  ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* release_update_payment_status();
  ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* mutable_update_payment_status();
  void set_allocated_update_payment_status(::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* update_payment_status);
  private:
  const ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand& _internal_update_payment_status() const;
  ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* _internal_mutable_update_payment_status();
  public:
  void unsafe_arena_set_allocated_update_payment_status(
      ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* update_payment_status);
  ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* unsafe_arena_release_update_payment_status();

  void clear_entry();
  EntryCase entry_case() const;
  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.SimulatorToServerCommand)
 private:
  class _Internal;
  void set_has_receive_message();
  void set_has_receive_payment();
  void set_has_update_payment_status();

  inline bool has_entry() const;
  inline void clear_has_entry();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union EntryUnion {
    EntryUnion() {}
    ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* receive_message_;
    ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* receive_payment_;
    ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* update_payment_status_;
  } entry_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// -------------------------------------------------------------------

class ReceiveMessageSimulatorCommand PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.ReceiveMessageSimulatorCommand) */ {
 public:
  inline ReceiveMessageSimulatorCommand() : ReceiveMessageSimulatorCommand(nullptr) {}
  virtual ~ReceiveMessageSimulatorCommand();

  ReceiveMessageSimulatorCommand(const ReceiveMessageSimulatorCommand& from);
  ReceiveMessageSimulatorCommand(ReceiveMessageSimulatorCommand&& from) noexcept
    : ReceiveMessageSimulatorCommand() {
    *this = ::std::move(from);
  }

  inline ReceiveMessageSimulatorCommand& operator=(const ReceiveMessageSimulatorCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReceiveMessageSimulatorCommand& operator=(ReceiveMessageSimulatorCommand&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReceiveMessageSimulatorCommand& default_instance();

  static inline const ReceiveMessageSimulatorCommand* internal_default_instance() {
    return reinterpret_cast<const ReceiveMessageSimulatorCommand*>(
               &_ReceiveMessageSimulatorCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ReceiveMessageSimulatorCommand& a, ReceiveMessageSimulatorCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(ReceiveMessageSimulatorCommand* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReceiveMessageSimulatorCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReceiveMessageSimulatorCommand* New() const final {
    return CreateMaybeMessage<ReceiveMessageSimulatorCommand>(nullptr);
  }

  ReceiveMessageSimulatorCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReceiveMessageSimulatorCommand>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReceiveMessageSimulatorCommand& from);
  void MergeFrom(const ReceiveMessageSimulatorCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReceiveMessageSimulatorCommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.ReceiveMessageSimulatorCommand";
  }
  protected:
  explicit ReceiveMessageSimulatorCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartsFieldNumber = 3,
    kCustomerNumberFieldNumber = 1,
    kChannelNumberFieldNumber = 2,
    kSessionIdFieldNumber = 4,
    kCostFieldNumber = 5,
    kDurationFieldNumber = 6,
  };
  // repeated .com.elarian.hera.proto.InboundMessageBody parts = 3;
  int parts_size() const;
  private:
  int _internal_parts_size() const;
  public:
  void clear_parts();
  ::com::elarian::hera::proto::InboundMessageBody* mutable_parts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::InboundMessageBody >*
      mutable_parts();
  private:
  const ::com::elarian::hera::proto::InboundMessageBody& _internal_parts(int index) const;
  ::com::elarian::hera::proto::InboundMessageBody* _internal_add_parts();
  public:
  const ::com::elarian::hera::proto::InboundMessageBody& parts(int index) const;
  ::com::elarian::hera::proto::InboundMessageBody* add_parts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::InboundMessageBody >&
      parts() const;

  // string customer_number = 1;
  void clear_customer_number();
  const std::string& customer_number() const;
  void set_customer_number(const std::string& value);
  void set_customer_number(std::string&& value);
  void set_customer_number(const char* value);
  void set_customer_number(const char* value, size_t size);
  std::string* mutable_customer_number();
  std::string* release_customer_number();
  void set_allocated_customer_number(std::string* customer_number);
  private:
  const std::string& _internal_customer_number() const;
  void _internal_set_customer_number(const std::string& value);
  std::string* _internal_mutable_customer_number();
  public:

  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 2;
  bool has_channel_number() const;
  private:
  bool _internal_has_channel_number() const;
  public:
  void clear_channel_number();
  const ::com::elarian::hera::proto::MessagingChannelNumber& channel_number() const;
  ::com::elarian::hera::proto::MessagingChannelNumber* release_channel_number();
  ::com::elarian::hera::proto::MessagingChannelNumber* mutable_channel_number();
  void set_allocated_channel_number(::com::elarian::hera::proto::MessagingChannelNumber* channel_number);
  private:
  const ::com::elarian::hera::proto::MessagingChannelNumber& _internal_channel_number() const;
  ::com::elarian::hera::proto::MessagingChannelNumber* _internal_mutable_channel_number();
  public:
  void unsafe_arena_set_allocated_channel_number(
      ::com::elarian::hera::proto::MessagingChannelNumber* channel_number);
  ::com::elarian::hera::proto::MessagingChannelNumber* unsafe_arena_release_channel_number();

  // .google.protobuf.StringValue session_id = 4;
  bool has_session_id() const;
  private:
  bool _internal_has_session_id() const;
  public:
  void clear_session_id();
  const PROTOBUF_NAMESPACE_ID::StringValue& session_id() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_session_id();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_session_id();
  void set_allocated_session_id(PROTOBUF_NAMESPACE_ID::StringValue* session_id);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_session_id() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_session_id();
  public:
  void unsafe_arena_set_allocated_session_id(
      PROTOBUF_NAMESPACE_ID::StringValue* session_id);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_session_id();

  // .com.elarian.hera.proto.Cash cost = 5;
  bool has_cost() const;
  private:
  bool _internal_has_cost() const;
  public:
  void clear_cost();
  const ::com::elarian::hera::proto::Cash& cost() const;
  ::com::elarian::hera::proto::Cash* release_cost();
  ::com::elarian::hera::proto::Cash* mutable_cost();
  void set_allocated_cost(::com::elarian::hera::proto::Cash* cost);
  private:
  const ::com::elarian::hera::proto::Cash& _internal_cost() const;
  ::com::elarian::hera::proto::Cash* _internal_mutable_cost();
  public:
  void unsafe_arena_set_allocated_cost(
      ::com::elarian::hera::proto::Cash* cost);
  ::com::elarian::hera::proto::Cash* unsafe_arena_release_cost();

  // .google.protobuf.Duration duration = 6;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  const PROTOBUF_NAMESPACE_ID::Duration& duration() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_duration();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_duration();
  void set_allocated_duration(PROTOBUF_NAMESPACE_ID::Duration* duration);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_duration() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_duration();
  public:
  void unsafe_arena_set_allocated_duration(
      PROTOBUF_NAMESPACE_ID::Duration* duration);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_duration();

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.ReceiveMessageSimulatorCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::InboundMessageBody > parts_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr customer_number_;
  ::com::elarian::hera::proto::MessagingChannelNumber* channel_number_;
  PROTOBUF_NAMESPACE_ID::StringValue* session_id_;
  ::com::elarian::hera::proto::Cash* cost_;
  PROTOBUF_NAMESPACE_ID::Duration* duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// -------------------------------------------------------------------

class ReceivePaymentSimulatorCommand PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.ReceivePaymentSimulatorCommand) */ {
 public:
  inline ReceivePaymentSimulatorCommand() : ReceivePaymentSimulatorCommand(nullptr) {}
  virtual ~ReceivePaymentSimulatorCommand();

  ReceivePaymentSimulatorCommand(const ReceivePaymentSimulatorCommand& from);
  ReceivePaymentSimulatorCommand(ReceivePaymentSimulatorCommand&& from) noexcept
    : ReceivePaymentSimulatorCommand() {
    *this = ::std::move(from);
  }

  inline ReceivePaymentSimulatorCommand& operator=(const ReceivePaymentSimulatorCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReceivePaymentSimulatorCommand& operator=(ReceivePaymentSimulatorCommand&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReceivePaymentSimulatorCommand& default_instance();

  static inline const ReceivePaymentSimulatorCommand* internal_default_instance() {
    return reinterpret_cast<const ReceivePaymentSimulatorCommand*>(
               &_ReceivePaymentSimulatorCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ReceivePaymentSimulatorCommand& a, ReceivePaymentSimulatorCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(ReceivePaymentSimulatorCommand* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReceivePaymentSimulatorCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReceivePaymentSimulatorCommand* New() const final {
    return CreateMaybeMessage<ReceivePaymentSimulatorCommand>(nullptr);
  }

  ReceivePaymentSimulatorCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReceivePaymentSimulatorCommand>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReceivePaymentSimulatorCommand& from);
  void MergeFrom(const ReceivePaymentSimulatorCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReceivePaymentSimulatorCommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.ReceivePaymentSimulatorCommand";
  }
  protected:
  explicit ReceivePaymentSimulatorCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionIdFieldNumber = 1,
    kCustomerNumberFieldNumber = 3,
    kChannelNumberFieldNumber = 2,
    kValueFieldNumber = 4,
    kStatusFieldNumber = 5,
  };
  // string transaction_id = 1;
  void clear_transaction_id();
  const std::string& transaction_id() const;
  void set_transaction_id(const std::string& value);
  void set_transaction_id(std::string&& value);
  void set_transaction_id(const char* value);
  void set_transaction_id(const char* value, size_t size);
  std::string* mutable_transaction_id();
  std::string* release_transaction_id();
  void set_allocated_transaction_id(std::string* transaction_id);
  private:
  const std::string& _internal_transaction_id() const;
  void _internal_set_transaction_id(const std::string& value);
  std::string* _internal_mutable_transaction_id();
  public:

  // string customer_number = 3;
  void clear_customer_number();
  const std::string& customer_number() const;
  void set_customer_number(const std::string& value);
  void set_customer_number(std::string&& value);
  void set_customer_number(const char* value);
  void set_customer_number(const char* value, size_t size);
  std::string* mutable_customer_number();
  std::string* release_customer_number();
  void set_allocated_customer_number(std::string* customer_number);
  private:
  const std::string& _internal_customer_number() const;
  void _internal_set_customer_number(const std::string& value);
  std::string* _internal_mutable_customer_number();
  public:

  // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 2;
  bool has_channel_number() const;
  private:
  bool _internal_has_channel_number() const;
  public:
  void clear_channel_number();
  const ::com::elarian::hera::proto::PaymentChannelNumber& channel_number() const;
  ::com::elarian::hera::proto::PaymentChannelNumber* release_channel_number();
  ::com::elarian::hera::proto::PaymentChannelNumber* mutable_channel_number();
  void set_allocated_channel_number(::com::elarian::hera::proto::PaymentChannelNumber* channel_number);
  private:
  const ::com::elarian::hera::proto::PaymentChannelNumber& _internal_channel_number() const;
  ::com::elarian::hera::proto::PaymentChannelNumber* _internal_mutable_channel_number();
  public:
  void unsafe_arena_set_allocated_channel_number(
      ::com::elarian::hera::proto::PaymentChannelNumber* channel_number);
  ::com::elarian::hera::proto::PaymentChannelNumber* unsafe_arena_release_channel_number();

  // .com.elarian.hera.proto.Cash value = 4;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::com::elarian::hera::proto::Cash& value() const;
  ::com::elarian::hera::proto::Cash* release_value();
  ::com::elarian::hera::proto::Cash* mutable_value();
  void set_allocated_value(::com::elarian::hera::proto::Cash* value);
  private:
  const ::com::elarian::hera::proto::Cash& _internal_value() const;
  ::com::elarian::hera::proto::Cash* _internal_mutable_value();
  public:
  void unsafe_arena_set_allocated_value(
      ::com::elarian::hera::proto::Cash* value);
  ::com::elarian::hera::proto::Cash* unsafe_arena_release_value();

  // .com.elarian.hera.proto.PaymentStatus status = 5;
  void clear_status();
  ::com::elarian::hera::proto::PaymentStatus status() const;
  void set_status(::com::elarian::hera::proto::PaymentStatus value);
  private:
  ::com::elarian::hera::proto::PaymentStatus _internal_status() const;
  void _internal_set_status(::com::elarian::hera::proto::PaymentStatus value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.ReceivePaymentSimulatorCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transaction_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr customer_number_;
  ::com::elarian::hera::proto::PaymentChannelNumber* channel_number_;
  ::com::elarian::hera::proto::Cash* value_;
  int status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// -------------------------------------------------------------------

class UpdatePaymentStatusSimulatorCommand PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand) */ {
 public:
  inline UpdatePaymentStatusSimulatorCommand() : UpdatePaymentStatusSimulatorCommand(nullptr) {}
  virtual ~UpdatePaymentStatusSimulatorCommand();

  UpdatePaymentStatusSimulatorCommand(const UpdatePaymentStatusSimulatorCommand& from);
  UpdatePaymentStatusSimulatorCommand(UpdatePaymentStatusSimulatorCommand&& from) noexcept
    : UpdatePaymentStatusSimulatorCommand() {
    *this = ::std::move(from);
  }

  inline UpdatePaymentStatusSimulatorCommand& operator=(const UpdatePaymentStatusSimulatorCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdatePaymentStatusSimulatorCommand& operator=(UpdatePaymentStatusSimulatorCommand&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdatePaymentStatusSimulatorCommand& default_instance();

  static inline const UpdatePaymentStatusSimulatorCommand* internal_default_instance() {
    return reinterpret_cast<const UpdatePaymentStatusSimulatorCommand*>(
               &_UpdatePaymentStatusSimulatorCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(UpdatePaymentStatusSimulatorCommand& a, UpdatePaymentStatusSimulatorCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdatePaymentStatusSimulatorCommand* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdatePaymentStatusSimulatorCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdatePaymentStatusSimulatorCommand* New() const final {
    return CreateMaybeMessage<UpdatePaymentStatusSimulatorCommand>(nullptr);
  }

  UpdatePaymentStatusSimulatorCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdatePaymentStatusSimulatorCommand>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdatePaymentStatusSimulatorCommand& from);
  void MergeFrom(const UpdatePaymentStatusSimulatorCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdatePaymentStatusSimulatorCommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand";
  }
  protected:
  explicit UpdatePaymentStatusSimulatorCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionIdFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // string transaction_id = 1;
  void clear_transaction_id();
  const std::string& transaction_id() const;
  void set_transaction_id(const std::string& value);
  void set_transaction_id(std::string&& value);
  void set_transaction_id(const char* value);
  void set_transaction_id(const char* value, size_t size);
  std::string* mutable_transaction_id();
  std::string* release_transaction_id();
  void set_allocated_transaction_id(std::string* transaction_id);
  private:
  const std::string& _internal_transaction_id() const;
  void _internal_set_transaction_id(const std::string& value);
  std::string* _internal_mutable_transaction_id();
  public:

  // .com.elarian.hera.proto.PaymentStatus status = 2;
  void clear_status();
  ::com::elarian::hera::proto::PaymentStatus status() const;
  void set_status(::com::elarian::hera::proto::PaymentStatus value);
  private:
  ::com::elarian::hera::proto::PaymentStatus _internal_status() const;
  void _internal_set_status(::com::elarian::hera::proto::PaymentStatus value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transaction_id_;
  int status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// -------------------------------------------------------------------

class SimulatorToServerCommandReply PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.SimulatorToServerCommandReply) */ {
 public:
  inline SimulatorToServerCommandReply() : SimulatorToServerCommandReply(nullptr) {}
  virtual ~SimulatorToServerCommandReply();

  SimulatorToServerCommandReply(const SimulatorToServerCommandReply& from);
  SimulatorToServerCommandReply(SimulatorToServerCommandReply&& from) noexcept
    : SimulatorToServerCommandReply() {
    *this = ::std::move(from);
  }

  inline SimulatorToServerCommandReply& operator=(const SimulatorToServerCommandReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimulatorToServerCommandReply& operator=(SimulatorToServerCommandReply&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SimulatorToServerCommandReply& default_instance();

  static inline const SimulatorToServerCommandReply* internal_default_instance() {
    return reinterpret_cast<const SimulatorToServerCommandReply*>(
               &_SimulatorToServerCommandReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SimulatorToServerCommandReply& a, SimulatorToServerCommandReply& b) {
    a.Swap(&b);
  }
  inline void Swap(SimulatorToServerCommandReply* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SimulatorToServerCommandReply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SimulatorToServerCommandReply* New() const final {
    return CreateMaybeMessage<SimulatorToServerCommandReply>(nullptr);
  }

  SimulatorToServerCommandReply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SimulatorToServerCommandReply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SimulatorToServerCommandReply& from);
  void MergeFrom(const SimulatorToServerCommandReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SimulatorToServerCommandReply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.SimulatorToServerCommandReply";
  }
  protected:
  explicit SimulatorToServerCommandReply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDescriptionFieldNumber = 2,
    kMessageFieldNumber = 3,
    kStatusFieldNumber = 1,
  };
  // string description = 2;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // .com.elarian.hera.proto.OutboundMessage message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const ::com::elarian::hera::proto::OutboundMessage& message() const;
  ::com::elarian::hera::proto::OutboundMessage* release_message();
  ::com::elarian::hera::proto::OutboundMessage* mutable_message();
  void set_allocated_message(::com::elarian::hera::proto::OutboundMessage* message);
  private:
  const ::com::elarian::hera::proto::OutboundMessage& _internal_message() const;
  ::com::elarian::hera::proto::OutboundMessage* _internal_mutable_message();
  public:
  void unsafe_arena_set_allocated_message(
      ::com::elarian::hera::proto::OutboundMessage* message);
  ::com::elarian::hera::proto::OutboundMessage* unsafe_arena_release_message();

  // bool status = 1;
  void clear_status();
  bool status() const;
  void set_status(bool value);
  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.SimulatorToServerCommandReply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::com::elarian::hera::proto::OutboundMessage* message_;
  bool status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// -------------------------------------------------------------------

class ServerToSimulatorNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.ServerToSimulatorNotification) */ {
 public:
  inline ServerToSimulatorNotification() : ServerToSimulatorNotification(nullptr) {}
  virtual ~ServerToSimulatorNotification();

  ServerToSimulatorNotification(const ServerToSimulatorNotification& from);
  ServerToSimulatorNotification(ServerToSimulatorNotification&& from) noexcept
    : ServerToSimulatorNotification() {
    *this = ::std::move(from);
  }

  inline ServerToSimulatorNotification& operator=(const ServerToSimulatorNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerToSimulatorNotification& operator=(ServerToSimulatorNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServerToSimulatorNotification& default_instance();

  enum EntryCase {
    kSendMessage = 1,
    kMakeVoiceCall = 2,
    kSendCustomerPayment = 3,
    kSendChannelPayment = 4,
    kCheckoutPayment = 5,
    ENTRY_NOT_SET = 0,
  };

  static inline const ServerToSimulatorNotification* internal_default_instance() {
    return reinterpret_cast<const ServerToSimulatorNotification*>(
               &_ServerToSimulatorNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ServerToSimulatorNotification& a, ServerToSimulatorNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerToSimulatorNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerToSimulatorNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServerToSimulatorNotification* New() const final {
    return CreateMaybeMessage<ServerToSimulatorNotification>(nullptr);
  }

  ServerToSimulatorNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServerToSimulatorNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServerToSimulatorNotification& from);
  void MergeFrom(const ServerToSimulatorNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerToSimulatorNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.ServerToSimulatorNotification";
  }
  protected:
  explicit ServerToSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSendMessageFieldNumber = 1,
    kMakeVoiceCallFieldNumber = 2,
    kSendCustomerPaymentFieldNumber = 3,
    kSendChannelPaymentFieldNumber = 4,
    kCheckoutPaymentFieldNumber = 5,
  };
  // .com.elarian.hera.proto.SendMessageSimulatorNotification send_message = 1;
  bool has_send_message() const;
  private:
  bool _internal_has_send_message() const;
  public:
  void clear_send_message();
  const ::com::elarian::hera::proto::SendMessageSimulatorNotification& send_message() const;
  ::com::elarian::hera::proto::SendMessageSimulatorNotification* release_send_message();
  ::com::elarian::hera::proto::SendMessageSimulatorNotification* mutable_send_message();
  void set_allocated_send_message(::com::elarian::hera::proto::SendMessageSimulatorNotification* send_message);
  private:
  const ::com::elarian::hera::proto::SendMessageSimulatorNotification& _internal_send_message() const;
  ::com::elarian::hera::proto::SendMessageSimulatorNotification* _internal_mutable_send_message();
  public:
  void unsafe_arena_set_allocated_send_message(
      ::com::elarian::hera::proto::SendMessageSimulatorNotification* send_message);
  ::com::elarian::hera::proto::SendMessageSimulatorNotification* unsafe_arena_release_send_message();

  // .com.elarian.hera.proto.MakeVoiceCallSimulatorNotification make_voice_call = 2;
  bool has_make_voice_call() const;
  private:
  bool _internal_has_make_voice_call() const;
  public:
  void clear_make_voice_call();
  const ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification& make_voice_call() const;
  ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* release_make_voice_call();
  ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* mutable_make_voice_call();
  void set_allocated_make_voice_call(::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* make_voice_call);
  private:
  const ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification& _internal_make_voice_call() const;
  ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* _internal_mutable_make_voice_call();
  public:
  void unsafe_arena_set_allocated_make_voice_call(
      ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* make_voice_call);
  ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* unsafe_arena_release_make_voice_call();

  // .com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification send_customer_payment = 3;
  bool has_send_customer_payment() const;
  private:
  bool _internal_has_send_customer_payment() const;
  public:
  void clear_send_customer_payment();
  const ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification& send_customer_payment() const;
  ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* release_send_customer_payment();
  ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* mutable_send_customer_payment();
  void set_allocated_send_customer_payment(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* send_customer_payment);
  private:
  const ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification& _internal_send_customer_payment() const;
  ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* _internal_mutable_send_customer_payment();
  public:
  void unsafe_arena_set_allocated_send_customer_payment(
      ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* send_customer_payment);
  ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* unsafe_arena_release_send_customer_payment();

  // .com.elarian.hera.proto.SendChannelPaymentSimulatorNotification send_channel_payment = 4;
  bool has_send_channel_payment() const;
  private:
  bool _internal_has_send_channel_payment() const;
  public:
  void clear_send_channel_payment();
  const ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification& send_channel_payment() const;
  ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* release_send_channel_payment();
  ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* mutable_send_channel_payment();
  void set_allocated_send_channel_payment(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* send_channel_payment);
  private:
  const ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification& _internal_send_channel_payment() const;
  ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* _internal_mutable_send_channel_payment();
  public:
  void unsafe_arena_set_allocated_send_channel_payment(
      ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* send_channel_payment);
  ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* unsafe_arena_release_send_channel_payment();

  // .com.elarian.hera.proto.CheckoutPaymentSimulatorNotification checkout_payment = 5;
  bool has_checkout_payment() const;
  private:
  bool _internal_has_checkout_payment() const;
  public:
  void clear_checkout_payment();
  const ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification& checkout_payment() const;
  ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* release_checkout_payment();
  ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* mutable_checkout_payment();
  void set_allocated_checkout_payment(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* checkout_payment);
  private:
  const ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification& _internal_checkout_payment() const;
  ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* _internal_mutable_checkout_payment();
  public:
  void unsafe_arena_set_allocated_checkout_payment(
      ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* checkout_payment);
  ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* unsafe_arena_release_checkout_payment();

  void clear_entry();
  EntryCase entry_case() const;
  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.ServerToSimulatorNotification)
 private:
  class _Internal;
  void set_has_send_message();
  void set_has_make_voice_call();
  void set_has_send_customer_payment();
  void set_has_send_channel_payment();
  void set_has_checkout_payment();

  inline bool has_entry() const;
  inline void clear_has_entry();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union EntryUnion {
    EntryUnion() {}
    ::com::elarian::hera::proto::SendMessageSimulatorNotification* send_message_;
    ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* make_voice_call_;
    ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* send_customer_payment_;
    ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* send_channel_payment_;
    ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* checkout_payment_;
  } entry_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// -------------------------------------------------------------------

class ServerToSimulatorNotificationReply PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.ServerToSimulatorNotificationReply) */ {
 public:
  inline ServerToSimulatorNotificationReply() : ServerToSimulatorNotificationReply(nullptr) {}
  virtual ~ServerToSimulatorNotificationReply();

  ServerToSimulatorNotificationReply(const ServerToSimulatorNotificationReply& from);
  ServerToSimulatorNotificationReply(ServerToSimulatorNotificationReply&& from) noexcept
    : ServerToSimulatorNotificationReply() {
    *this = ::std::move(from);
  }

  inline ServerToSimulatorNotificationReply& operator=(const ServerToSimulatorNotificationReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerToSimulatorNotificationReply& operator=(ServerToSimulatorNotificationReply&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServerToSimulatorNotificationReply& default_instance();

  static inline const ServerToSimulatorNotificationReply* internal_default_instance() {
    return reinterpret_cast<const ServerToSimulatorNotificationReply*>(
               &_ServerToSimulatorNotificationReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ServerToSimulatorNotificationReply& a, ServerToSimulatorNotificationReply& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerToSimulatorNotificationReply* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerToSimulatorNotificationReply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServerToSimulatorNotificationReply* New() const final {
    return CreateMaybeMessage<ServerToSimulatorNotificationReply>(nullptr);
  }

  ServerToSimulatorNotificationReply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServerToSimulatorNotificationReply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServerToSimulatorNotificationReply& from);
  void MergeFrom(const ServerToSimulatorNotificationReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerToSimulatorNotificationReply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.ServerToSimulatorNotificationReply";
  }
  protected:
  explicit ServerToSimulatorNotificationReply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.ServerToSimulatorNotificationReply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// -------------------------------------------------------------------

class SendMessageSimulatorNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.SendMessageSimulatorNotification) */ {
 public:
  inline SendMessageSimulatorNotification() : SendMessageSimulatorNotification(nullptr) {}
  virtual ~SendMessageSimulatorNotification();

  SendMessageSimulatorNotification(const SendMessageSimulatorNotification& from);
  SendMessageSimulatorNotification(SendMessageSimulatorNotification&& from) noexcept
    : SendMessageSimulatorNotification() {
    *this = ::std::move(from);
  }

  inline SendMessageSimulatorNotification& operator=(const SendMessageSimulatorNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMessageSimulatorNotification& operator=(SendMessageSimulatorNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SendMessageSimulatorNotification& default_instance();

  static inline const SendMessageSimulatorNotification* internal_default_instance() {
    return reinterpret_cast<const SendMessageSimulatorNotification*>(
               &_SendMessageSimulatorNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SendMessageSimulatorNotification& a, SendMessageSimulatorNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(SendMessageSimulatorNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendMessageSimulatorNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SendMessageSimulatorNotification* New() const final {
    return CreateMaybeMessage<SendMessageSimulatorNotification>(nullptr);
  }

  SendMessageSimulatorNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SendMessageSimulatorNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SendMessageSimulatorNotification& from);
  void MergeFrom(const SendMessageSimulatorNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendMessageSimulatorNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.SendMessageSimulatorNotification";
  }
  protected:
  explicit SendMessageSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgIdFieldNumber = 1,
    kCustomerIdFieldNumber = 2,
    kMessageIdFieldNumber = 3,
    kCustomerNumberFieldNumber = 4,
    kChannelNumberFieldNumber = 5,
    kMessageFieldNumber = 6,
  };
  // string org_id = 1;
  void clear_org_id();
  const std::string& org_id() const;
  void set_org_id(const std::string& value);
  void set_org_id(std::string&& value);
  void set_org_id(const char* value);
  void set_org_id(const char* value, size_t size);
  std::string* mutable_org_id();
  std::string* release_org_id();
  void set_allocated_org_id(std::string* org_id);
  private:
  const std::string& _internal_org_id() const;
  void _internal_set_org_id(const std::string& value);
  std::string* _internal_mutable_org_id();
  public:

  // string customer_id = 2;
  void clear_customer_id();
  const std::string& customer_id() const;
  void set_customer_id(const std::string& value);
  void set_customer_id(std::string&& value);
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  std::string* mutable_customer_id();
  std::string* release_customer_id();
  void set_allocated_customer_id(std::string* customer_id);
  private:
  const std::string& _internal_customer_id() const;
  void _internal_set_customer_id(const std::string& value);
  std::string* _internal_mutable_customer_id();
  public:

  // string message_id = 3;
  void clear_message_id();
  const std::string& message_id() const;
  void set_message_id(const std::string& value);
  void set_message_id(std::string&& value);
  void set_message_id(const char* value);
  void set_message_id(const char* value, size_t size);
  std::string* mutable_message_id();
  std::string* release_message_id();
  void set_allocated_message_id(std::string* message_id);
  private:
  const std::string& _internal_message_id() const;
  void _internal_set_message_id(const std::string& value);
  std::string* _internal_mutable_message_id();
  public:

  // .com.elarian.hera.proto.CustomerNumber customer_number = 4;
  bool has_customer_number() const;
  private:
  bool _internal_has_customer_number() const;
  public:
  void clear_customer_number();
  const ::com::elarian::hera::proto::CustomerNumber& customer_number() const;
  ::com::elarian::hera::proto::CustomerNumber* release_customer_number();
  ::com::elarian::hera::proto::CustomerNumber* mutable_customer_number();
  void set_allocated_customer_number(::com::elarian::hera::proto::CustomerNumber* customer_number);
  private:
  const ::com::elarian::hera::proto::CustomerNumber& _internal_customer_number() const;
  ::com::elarian::hera::proto::CustomerNumber* _internal_mutable_customer_number();
  public:
  void unsafe_arena_set_allocated_customer_number(
      ::com::elarian::hera::proto::CustomerNumber* customer_number);
  ::com::elarian::hera::proto::CustomerNumber* unsafe_arena_release_customer_number();

  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 5;
  bool has_channel_number() const;
  private:
  bool _internal_has_channel_number() const;
  public:
  void clear_channel_number();
  const ::com::elarian::hera::proto::MessagingChannelNumber& channel_number() const;
  ::com::elarian::hera::proto::MessagingChannelNumber* release_channel_number();
  ::com::elarian::hera::proto::MessagingChannelNumber* mutable_channel_number();
  void set_allocated_channel_number(::com::elarian::hera::proto::MessagingChannelNumber* channel_number);
  private:
  const ::com::elarian::hera::proto::MessagingChannelNumber& _internal_channel_number() const;
  ::com::elarian::hera::proto::MessagingChannelNumber* _internal_mutable_channel_number();
  public:
  void unsafe_arena_set_allocated_channel_number(
      ::com::elarian::hera::proto::MessagingChannelNumber* channel_number);
  ::com::elarian::hera::proto::MessagingChannelNumber* unsafe_arena_release_channel_number();

  // .com.elarian.hera.proto.OutboundMessage message = 6;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const ::com::elarian::hera::proto::OutboundMessage& message() const;
  ::com::elarian::hera::proto::OutboundMessage* release_message();
  ::com::elarian::hera::proto::OutboundMessage* mutable_message();
  void set_allocated_message(::com::elarian::hera::proto::OutboundMessage* message);
  private:
  const ::com::elarian::hera::proto::OutboundMessage& _internal_message() const;
  ::com::elarian::hera::proto::OutboundMessage* _internal_mutable_message();
  public:
  void unsafe_arena_set_allocated_message(
      ::com::elarian::hera::proto::OutboundMessage* message);
  ::com::elarian::hera::proto::OutboundMessage* unsafe_arena_release_message();

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.SendMessageSimulatorNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr org_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr customer_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_id_;
  ::com::elarian::hera::proto::CustomerNumber* customer_number_;
  ::com::elarian::hera::proto::MessagingChannelNumber* channel_number_;
  ::com::elarian::hera::proto::OutboundMessage* message_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// -------------------------------------------------------------------

class MakeVoiceCallSimulatorNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification) */ {
 public:
  inline MakeVoiceCallSimulatorNotification() : MakeVoiceCallSimulatorNotification(nullptr) {}
  virtual ~MakeVoiceCallSimulatorNotification();

  MakeVoiceCallSimulatorNotification(const MakeVoiceCallSimulatorNotification& from);
  MakeVoiceCallSimulatorNotification(MakeVoiceCallSimulatorNotification&& from) noexcept
    : MakeVoiceCallSimulatorNotification() {
    *this = ::std::move(from);
  }

  inline MakeVoiceCallSimulatorNotification& operator=(const MakeVoiceCallSimulatorNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline MakeVoiceCallSimulatorNotification& operator=(MakeVoiceCallSimulatorNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MakeVoiceCallSimulatorNotification& default_instance();

  static inline const MakeVoiceCallSimulatorNotification* internal_default_instance() {
    return reinterpret_cast<const MakeVoiceCallSimulatorNotification*>(
               &_MakeVoiceCallSimulatorNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MakeVoiceCallSimulatorNotification& a, MakeVoiceCallSimulatorNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(MakeVoiceCallSimulatorNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MakeVoiceCallSimulatorNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MakeVoiceCallSimulatorNotification* New() const final {
    return CreateMaybeMessage<MakeVoiceCallSimulatorNotification>(nullptr);
  }

  MakeVoiceCallSimulatorNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MakeVoiceCallSimulatorNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MakeVoiceCallSimulatorNotification& from);
  void MergeFrom(const MakeVoiceCallSimulatorNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MakeVoiceCallSimulatorNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.MakeVoiceCallSimulatorNotification";
  }
  protected:
  explicit MakeVoiceCallSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgIdFieldNumber = 1,
    kCustomerIdFieldNumber = 2,
    kSessionIdFieldNumber = 3,
    kCustomerNumberFieldNumber = 4,
    kChannelNumberFieldNumber = 5,
  };
  // string org_id = 1;
  void clear_org_id();
  const std::string& org_id() const;
  void set_org_id(const std::string& value);
  void set_org_id(std::string&& value);
  void set_org_id(const char* value);
  void set_org_id(const char* value, size_t size);
  std::string* mutable_org_id();
  std::string* release_org_id();
  void set_allocated_org_id(std::string* org_id);
  private:
  const std::string& _internal_org_id() const;
  void _internal_set_org_id(const std::string& value);
  std::string* _internal_mutable_org_id();
  public:

  // string customer_id = 2;
  void clear_customer_id();
  const std::string& customer_id() const;
  void set_customer_id(const std::string& value);
  void set_customer_id(std::string&& value);
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  std::string* mutable_customer_id();
  std::string* release_customer_id();
  void set_allocated_customer_id(std::string* customer_id);
  private:
  const std::string& _internal_customer_id() const;
  void _internal_set_customer_id(const std::string& value);
  std::string* _internal_mutable_customer_id();
  public:

  // string session_id = 3;
  void clear_session_id();
  const std::string& session_id() const;
  void set_session_id(const std::string& value);
  void set_session_id(std::string&& value);
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  std::string* mutable_session_id();
  std::string* release_session_id();
  void set_allocated_session_id(std::string* session_id);
  private:
  const std::string& _internal_session_id() const;
  void _internal_set_session_id(const std::string& value);
  std::string* _internal_mutable_session_id();
  public:

  // .com.elarian.hera.proto.CustomerNumber customer_number = 4;
  bool has_customer_number() const;
  private:
  bool _internal_has_customer_number() const;
  public:
  void clear_customer_number();
  const ::com::elarian::hera::proto::CustomerNumber& customer_number() const;
  ::com::elarian::hera::proto::CustomerNumber* release_customer_number();
  ::com::elarian::hera::proto::CustomerNumber* mutable_customer_number();
  void set_allocated_customer_number(::com::elarian::hera::proto::CustomerNumber* customer_number);
  private:
  const ::com::elarian::hera::proto::CustomerNumber& _internal_customer_number() const;
  ::com::elarian::hera::proto::CustomerNumber* _internal_mutable_customer_number();
  public:
  void unsafe_arena_set_allocated_customer_number(
      ::com::elarian::hera::proto::CustomerNumber* customer_number);
  ::com::elarian::hera::proto::CustomerNumber* unsafe_arena_release_customer_number();

  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 5;
  bool has_channel_number() const;
  private:
  bool _internal_has_channel_number() const;
  public:
  void clear_channel_number();
  const ::com::elarian::hera::proto::MessagingChannelNumber& channel_number() const;
  ::com::elarian::hera::proto::MessagingChannelNumber* release_channel_number();
  ::com::elarian::hera::proto::MessagingChannelNumber* mutable_channel_number();
  void set_allocated_channel_number(::com::elarian::hera::proto::MessagingChannelNumber* channel_number);
  private:
  const ::com::elarian::hera::proto::MessagingChannelNumber& _internal_channel_number() const;
  ::com::elarian::hera::proto::MessagingChannelNumber* _internal_mutable_channel_number();
  public:
  void unsafe_arena_set_allocated_channel_number(
      ::com::elarian::hera::proto::MessagingChannelNumber* channel_number);
  ::com::elarian::hera::proto::MessagingChannelNumber* unsafe_arena_release_channel_number();

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr org_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr customer_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr session_id_;
  ::com::elarian::hera::proto::CustomerNumber* customer_number_;
  ::com::elarian::hera::proto::MessagingChannelNumber* channel_number_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// -------------------------------------------------------------------

class SendCustomerPaymentSimulatorNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification) */ {
 public:
  inline SendCustomerPaymentSimulatorNotification() : SendCustomerPaymentSimulatorNotification(nullptr) {}
  virtual ~SendCustomerPaymentSimulatorNotification();

  SendCustomerPaymentSimulatorNotification(const SendCustomerPaymentSimulatorNotification& from);
  SendCustomerPaymentSimulatorNotification(SendCustomerPaymentSimulatorNotification&& from) noexcept
    : SendCustomerPaymentSimulatorNotification() {
    *this = ::std::move(from);
  }

  inline SendCustomerPaymentSimulatorNotification& operator=(const SendCustomerPaymentSimulatorNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendCustomerPaymentSimulatorNotification& operator=(SendCustomerPaymentSimulatorNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SendCustomerPaymentSimulatorNotification& default_instance();

  enum DebitPartyCase {
    kWallet = 4,
    kPurse = 5,
    DEBIT_PARTY_NOT_SET = 0,
  };

  static inline const SendCustomerPaymentSimulatorNotification* internal_default_instance() {
    return reinterpret_cast<const SendCustomerPaymentSimulatorNotification*>(
               &_SendCustomerPaymentSimulatorNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SendCustomerPaymentSimulatorNotification& a, SendCustomerPaymentSimulatorNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(SendCustomerPaymentSimulatorNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendCustomerPaymentSimulatorNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SendCustomerPaymentSimulatorNotification* New() const final {
    return CreateMaybeMessage<SendCustomerPaymentSimulatorNotification>(nullptr);
  }

  SendCustomerPaymentSimulatorNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SendCustomerPaymentSimulatorNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SendCustomerPaymentSimulatorNotification& from);
  void MergeFrom(const SendCustomerPaymentSimulatorNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendCustomerPaymentSimulatorNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification";
  }
  protected:
  explicit SendCustomerPaymentSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgIdFieldNumber = 1,
    kCustomerIdFieldNumber = 2,
    kAppIdFieldNumber = 3,
    kTransactionIdFieldNumber = 6,
    kCustomerNumberFieldNumber = 7,
    kChannelNumberFieldNumber = 8,
    kValueFieldNumber = 9,
    kWalletFieldNumber = 4,
    kPurseFieldNumber = 5,
  };
  // string org_id = 1;
  void clear_org_id();
  const std::string& org_id() const;
  void set_org_id(const std::string& value);
  void set_org_id(std::string&& value);
  void set_org_id(const char* value);
  void set_org_id(const char* value, size_t size);
  std::string* mutable_org_id();
  std::string* release_org_id();
  void set_allocated_org_id(std::string* org_id);
  private:
  const std::string& _internal_org_id() const;
  void _internal_set_org_id(const std::string& value);
  std::string* _internal_mutable_org_id();
  public:

  // string customer_id = 2;
  void clear_customer_id();
  const std::string& customer_id() const;
  void set_customer_id(const std::string& value);
  void set_customer_id(std::string&& value);
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  std::string* mutable_customer_id();
  std::string* release_customer_id();
  void set_allocated_customer_id(std::string* customer_id);
  private:
  const std::string& _internal_customer_id() const;
  void _internal_set_customer_id(const std::string& value);
  std::string* _internal_mutable_customer_id();
  public:

  // string app_id = 3;
  void clear_app_id();
  const std::string& app_id() const;
  void set_app_id(const std::string& value);
  void set_app_id(std::string&& value);
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  std::string* mutable_app_id();
  std::string* release_app_id();
  void set_allocated_app_id(std::string* app_id);
  private:
  const std::string& _internal_app_id() const;
  void _internal_set_app_id(const std::string& value);
  std::string* _internal_mutable_app_id();
  public:

  // string transaction_id = 6;
  void clear_transaction_id();
  const std::string& transaction_id() const;
  void set_transaction_id(const std::string& value);
  void set_transaction_id(std::string&& value);
  void set_transaction_id(const char* value);
  void set_transaction_id(const char* value, size_t size);
  std::string* mutable_transaction_id();
  std::string* release_transaction_id();
  void set_allocated_transaction_id(std::string* transaction_id);
  private:
  const std::string& _internal_transaction_id() const;
  void _internal_set_transaction_id(const std::string& value);
  std::string* _internal_mutable_transaction_id();
  public:

  // .com.elarian.hera.proto.CustomerNumber customer_number = 7;
  bool has_customer_number() const;
  private:
  bool _internal_has_customer_number() const;
  public:
  void clear_customer_number();
  const ::com::elarian::hera::proto::CustomerNumber& customer_number() const;
  ::com::elarian::hera::proto::CustomerNumber* release_customer_number();
  ::com::elarian::hera::proto::CustomerNumber* mutable_customer_number();
  void set_allocated_customer_number(::com::elarian::hera::proto::CustomerNumber* customer_number);
  private:
  const ::com::elarian::hera::proto::CustomerNumber& _internal_customer_number() const;
  ::com::elarian::hera::proto::CustomerNumber* _internal_mutable_customer_number();
  public:
  void unsafe_arena_set_allocated_customer_number(
      ::com::elarian::hera::proto::CustomerNumber* customer_number);
  ::com::elarian::hera::proto::CustomerNumber* unsafe_arena_release_customer_number();

  // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 8;
  bool has_channel_number() const;
  private:
  bool _internal_has_channel_number() const;
  public:
  void clear_channel_number();
  const ::com::elarian::hera::proto::PaymentChannelNumber& channel_number() const;
  ::com::elarian::hera::proto::PaymentChannelNumber* release_channel_number();
  ::com::elarian::hera::proto::PaymentChannelNumber* mutable_channel_number();
  void set_allocated_channel_number(::com::elarian::hera::proto::PaymentChannelNumber* channel_number);
  private:
  const ::com::elarian::hera::proto::PaymentChannelNumber& _internal_channel_number() const;
  ::com::elarian::hera::proto::PaymentChannelNumber* _internal_mutable_channel_number();
  public:
  void unsafe_arena_set_allocated_channel_number(
      ::com::elarian::hera::proto::PaymentChannelNumber* channel_number);
  ::com::elarian::hera::proto::PaymentChannelNumber* unsafe_arena_release_channel_number();

  // .com.elarian.hera.proto.Cash value = 9;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::com::elarian::hera::proto::Cash& value() const;
  ::com::elarian::hera::proto::Cash* release_value();
  ::com::elarian::hera::proto::Cash* mutable_value();
  void set_allocated_value(::com::elarian::hera::proto::Cash* value);
  private:
  const ::com::elarian::hera::proto::Cash& _internal_value() const;
  ::com::elarian::hera::proto::Cash* _internal_mutable_value();
  public:
  void unsafe_arena_set_allocated_value(
      ::com::elarian::hera::proto::Cash* value);
  ::com::elarian::hera::proto::Cash* unsafe_arena_release_value();

  // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 4;
  bool has_wallet() const;
  private:
  bool _internal_has_wallet() const;
  public:
  void clear_wallet();
  const ::com::elarian::hera::proto::PaymentWalletCounterParty& wallet() const;
  ::com::elarian::hera::proto::PaymentWalletCounterParty* release_wallet();
  ::com::elarian::hera::proto::PaymentWalletCounterParty* mutable_wallet();
  void set_allocated_wallet(::com::elarian::hera::proto::PaymentWalletCounterParty* wallet);
  private:
  const ::com::elarian::hera::proto::PaymentWalletCounterParty& _internal_wallet() const;
  ::com::elarian::hera::proto::PaymentWalletCounterParty* _internal_mutable_wallet();
  public:
  void unsafe_arena_set_allocated_wallet(
      ::com::elarian::hera::proto::PaymentWalletCounterParty* wallet);
  ::com::elarian::hera::proto::PaymentWalletCounterParty* unsafe_arena_release_wallet();

  // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 5;
  bool has_purse() const;
  private:
  bool _internal_has_purse() const;
  public:
  void clear_purse();
  const ::com::elarian::hera::proto::PaymentPurseCounterParty& purse() const;
  ::com::elarian::hera::proto::PaymentPurseCounterParty* release_purse();
  ::com::elarian::hera::proto::PaymentPurseCounterParty* mutable_purse();
  void set_allocated_purse(::com::elarian::hera::proto::PaymentPurseCounterParty* purse);
  private:
  const ::com::elarian::hera::proto::PaymentPurseCounterParty& _internal_purse() const;
  ::com::elarian::hera::proto::PaymentPurseCounterParty* _internal_mutable_purse();
  public:
  void unsafe_arena_set_allocated_purse(
      ::com::elarian::hera::proto::PaymentPurseCounterParty* purse);
  ::com::elarian::hera::proto::PaymentPurseCounterParty* unsafe_arena_release_purse();

  void clear_debit_party();
  DebitPartyCase debit_party_case() const;
  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification)
 private:
  class _Internal;
  void set_has_wallet();
  void set_has_purse();

  inline bool has_debit_party() const;
  inline void clear_has_debit_party();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr org_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr customer_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr app_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transaction_id_;
  ::com::elarian::hera::proto::CustomerNumber* customer_number_;
  ::com::elarian::hera::proto::PaymentChannelNumber* channel_number_;
  ::com::elarian::hera::proto::Cash* value_;
  union DebitPartyUnion {
    DebitPartyUnion() {}
    ::com::elarian::hera::proto::PaymentWalletCounterParty* wallet_;
    ::com::elarian::hera::proto::PaymentPurseCounterParty* purse_;
  } debit_party_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// -------------------------------------------------------------------

class SendChannelPaymentSimulatorNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification) */ {
 public:
  inline SendChannelPaymentSimulatorNotification() : SendChannelPaymentSimulatorNotification(nullptr) {}
  virtual ~SendChannelPaymentSimulatorNotification();

  SendChannelPaymentSimulatorNotification(const SendChannelPaymentSimulatorNotification& from);
  SendChannelPaymentSimulatorNotification(SendChannelPaymentSimulatorNotification&& from) noexcept
    : SendChannelPaymentSimulatorNotification() {
    *this = ::std::move(from);
  }

  inline SendChannelPaymentSimulatorNotification& operator=(const SendChannelPaymentSimulatorNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendChannelPaymentSimulatorNotification& operator=(SendChannelPaymentSimulatorNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SendChannelPaymentSimulatorNotification& default_instance();

  enum DebitPartyCase {
    kWallet = 3,
    kPurse = 4,
    DEBIT_PARTY_NOT_SET = 0,
  };

  static inline const SendChannelPaymentSimulatorNotification* internal_default_instance() {
    return reinterpret_cast<const SendChannelPaymentSimulatorNotification*>(
               &_SendChannelPaymentSimulatorNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SendChannelPaymentSimulatorNotification& a, SendChannelPaymentSimulatorNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(SendChannelPaymentSimulatorNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendChannelPaymentSimulatorNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SendChannelPaymentSimulatorNotification* New() const final {
    return CreateMaybeMessage<SendChannelPaymentSimulatorNotification>(nullptr);
  }

  SendChannelPaymentSimulatorNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SendChannelPaymentSimulatorNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SendChannelPaymentSimulatorNotification& from);
  void MergeFrom(const SendChannelPaymentSimulatorNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendChannelPaymentSimulatorNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.SendChannelPaymentSimulatorNotification";
  }
  protected:
  explicit SendChannelPaymentSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgIdFieldNumber = 1,
    kAppIdFieldNumber = 2,
    kTransactionIdFieldNumber = 5,
    kSourceFieldNumber = 7,
    kDestinationFieldNumber = 8,
    kAccountFieldNumber = 9,
    kValueFieldNumber = 10,
    kChannelFieldNumber = 6,
    kWalletFieldNumber = 3,
    kPurseFieldNumber = 4,
  };
  // string org_id = 1;
  void clear_org_id();
  const std::string& org_id() const;
  void set_org_id(const std::string& value);
  void set_org_id(std::string&& value);
  void set_org_id(const char* value);
  void set_org_id(const char* value, size_t size);
  std::string* mutable_org_id();
  std::string* release_org_id();
  void set_allocated_org_id(std::string* org_id);
  private:
  const std::string& _internal_org_id() const;
  void _internal_set_org_id(const std::string& value);
  std::string* _internal_mutable_org_id();
  public:

  // string app_id = 2;
  void clear_app_id();
  const std::string& app_id() const;
  void set_app_id(const std::string& value);
  void set_app_id(std::string&& value);
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  std::string* mutable_app_id();
  std::string* release_app_id();
  void set_allocated_app_id(std::string* app_id);
  private:
  const std::string& _internal_app_id() const;
  void _internal_set_app_id(const std::string& value);
  std::string* _internal_mutable_app_id();
  public:

  // string transaction_id = 5;
  void clear_transaction_id();
  const std::string& transaction_id() const;
  void set_transaction_id(const std::string& value);
  void set_transaction_id(std::string&& value);
  void set_transaction_id(const char* value);
  void set_transaction_id(const char* value, size_t size);
  std::string* mutable_transaction_id();
  std::string* release_transaction_id();
  void set_allocated_transaction_id(std::string* transaction_id);
  private:
  const std::string& _internal_transaction_id() const;
  void _internal_set_transaction_id(const std::string& value);
  std::string* _internal_mutable_transaction_id();
  public:

  // string source = 7;
  void clear_source();
  const std::string& source() const;
  void set_source(const std::string& value);
  void set_source(std::string&& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  std::string* mutable_source();
  std::string* release_source();
  void set_allocated_source(std::string* source);
  private:
  const std::string& _internal_source() const;
  void _internal_set_source(const std::string& value);
  std::string* _internal_mutable_source();
  public:

  // string destination = 8;
  void clear_destination();
  const std::string& destination() const;
  void set_destination(const std::string& value);
  void set_destination(std::string&& value);
  void set_destination(const char* value);
  void set_destination(const char* value, size_t size);
  std::string* mutable_destination();
  std::string* release_destination();
  void set_allocated_destination(std::string* destination);
  private:
  const std::string& _internal_destination() const;
  void _internal_set_destination(const std::string& value);
  std::string* _internal_mutable_destination();
  public:

  // .google.protobuf.StringValue account = 9;
  bool has_account() const;
  private:
  bool _internal_has_account() const;
  public:
  void clear_account();
  const PROTOBUF_NAMESPACE_ID::StringValue& account() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_account();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_account();
  void set_allocated_account(PROTOBUF_NAMESPACE_ID::StringValue* account);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_account() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_account();
  public:
  void unsafe_arena_set_allocated_account(
      PROTOBUF_NAMESPACE_ID::StringValue* account);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_account();

  // .com.elarian.hera.proto.Cash value = 10;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::com::elarian::hera::proto::Cash& value() const;
  ::com::elarian::hera::proto::Cash* release_value();
  ::com::elarian::hera::proto::Cash* mutable_value();
  void set_allocated_value(::com::elarian::hera::proto::Cash* value);
  private:
  const ::com::elarian::hera::proto::Cash& _internal_value() const;
  ::com::elarian::hera::proto::Cash* _internal_mutable_value();
  public:
  void unsafe_arena_set_allocated_value(
      ::com::elarian::hera::proto::Cash* value);
  ::com::elarian::hera::proto::Cash* unsafe_arena_release_value();

  // .com.elarian.hera.proto.PaymentChannel channel = 6;
  void clear_channel();
  ::com::elarian::hera::proto::PaymentChannel channel() const;
  void set_channel(::com::elarian::hera::proto::PaymentChannel value);
  private:
  ::com::elarian::hera::proto::PaymentChannel _internal_channel() const;
  void _internal_set_channel(::com::elarian::hera::proto::PaymentChannel value);
  public:

  // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 3;
  bool has_wallet() const;
  private:
  bool _internal_has_wallet() const;
  public:
  void clear_wallet();
  const ::com::elarian::hera::proto::PaymentWalletCounterParty& wallet() const;
  ::com::elarian::hera::proto::PaymentWalletCounterParty* release_wallet();
  ::com::elarian::hera::proto::PaymentWalletCounterParty* mutable_wallet();
  void set_allocated_wallet(::com::elarian::hera::proto::PaymentWalletCounterParty* wallet);
  private:
  const ::com::elarian::hera::proto::PaymentWalletCounterParty& _internal_wallet() const;
  ::com::elarian::hera::proto::PaymentWalletCounterParty* _internal_mutable_wallet();
  public:
  void unsafe_arena_set_allocated_wallet(
      ::com::elarian::hera::proto::PaymentWalletCounterParty* wallet);
  ::com::elarian::hera::proto::PaymentWalletCounterParty* unsafe_arena_release_wallet();

  // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 4;
  bool has_purse() const;
  private:
  bool _internal_has_purse() const;
  public:
  void clear_purse();
  const ::com::elarian::hera::proto::PaymentPurseCounterParty& purse() const;
  ::com::elarian::hera::proto::PaymentPurseCounterParty* release_purse();
  ::com::elarian::hera::proto::PaymentPurseCounterParty* mutable_purse();
  void set_allocated_purse(::com::elarian::hera::proto::PaymentPurseCounterParty* purse);
  private:
  const ::com::elarian::hera::proto::PaymentPurseCounterParty& _internal_purse() const;
  ::com::elarian::hera::proto::PaymentPurseCounterParty* _internal_mutable_purse();
  public:
  void unsafe_arena_set_allocated_purse(
      ::com::elarian::hera::proto::PaymentPurseCounterParty* purse);
  ::com::elarian::hera::proto::PaymentPurseCounterParty* unsafe_arena_release_purse();

  void clear_debit_party();
  DebitPartyCase debit_party_case() const;
  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification)
 private:
  class _Internal;
  void set_has_wallet();
  void set_has_purse();

  inline bool has_debit_party() const;
  inline void clear_has_debit_party();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr org_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr app_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transaction_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr source_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr destination_;
  PROTOBUF_NAMESPACE_ID::StringValue* account_;
  ::com::elarian::hera::proto::Cash* value_;
  int channel_;
  union DebitPartyUnion {
    DebitPartyUnion() {}
    ::com::elarian::hera::proto::PaymentWalletCounterParty* wallet_;
    ::com::elarian::hera::proto::PaymentPurseCounterParty* purse_;
  } debit_party_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// -------------------------------------------------------------------

class CheckoutPaymentSimulatorNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification) */ {
 public:
  inline CheckoutPaymentSimulatorNotification() : CheckoutPaymentSimulatorNotification(nullptr) {}
  virtual ~CheckoutPaymentSimulatorNotification();

  CheckoutPaymentSimulatorNotification(const CheckoutPaymentSimulatorNotification& from);
  CheckoutPaymentSimulatorNotification(CheckoutPaymentSimulatorNotification&& from) noexcept
    : CheckoutPaymentSimulatorNotification() {
    *this = ::std::move(from);
  }

  inline CheckoutPaymentSimulatorNotification& operator=(const CheckoutPaymentSimulatorNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckoutPaymentSimulatorNotification& operator=(CheckoutPaymentSimulatorNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CheckoutPaymentSimulatorNotification& default_instance();

  enum CreditPartyCase {
    kWallet = 4,
    kPurse = 5,
    CREDIT_PARTY_NOT_SET = 0,
  };

  static inline const CheckoutPaymentSimulatorNotification* internal_default_instance() {
    return reinterpret_cast<const CheckoutPaymentSimulatorNotification*>(
               &_CheckoutPaymentSimulatorNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CheckoutPaymentSimulatorNotification& a, CheckoutPaymentSimulatorNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CheckoutPaymentSimulatorNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckoutPaymentSimulatorNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CheckoutPaymentSimulatorNotification* New() const final {
    return CreateMaybeMessage<CheckoutPaymentSimulatorNotification>(nullptr);
  }

  CheckoutPaymentSimulatorNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CheckoutPaymentSimulatorNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CheckoutPaymentSimulatorNotification& from);
  void MergeFrom(const CheckoutPaymentSimulatorNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckoutPaymentSimulatorNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.CheckoutPaymentSimulatorNotification";
  }
  protected:
  explicit CheckoutPaymentSimulatorNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_simulator_5fsocket_2eproto);
    return ::descriptor_table_simulator_5fsocket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgIdFieldNumber = 1,
    kCustomerIdFieldNumber = 2,
    kAppIdFieldNumber = 3,
    kTransactionIdFieldNumber = 6,
    kCustomerNumberFieldNumber = 7,
    kChannelNumberFieldNumber = 8,
    kValueFieldNumber = 9,
    kWalletFieldNumber = 4,
    kPurseFieldNumber = 5,
  };
  // string org_id = 1;
  void clear_org_id();
  const std::string& org_id() const;
  void set_org_id(const std::string& value);
  void set_org_id(std::string&& value);
  void set_org_id(const char* value);
  void set_org_id(const char* value, size_t size);
  std::string* mutable_org_id();
  std::string* release_org_id();
  void set_allocated_org_id(std::string* org_id);
  private:
  const std::string& _internal_org_id() const;
  void _internal_set_org_id(const std::string& value);
  std::string* _internal_mutable_org_id();
  public:

  // string customer_id = 2;
  void clear_customer_id();
  const std::string& customer_id() const;
  void set_customer_id(const std::string& value);
  void set_customer_id(std::string&& value);
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  std::string* mutable_customer_id();
  std::string* release_customer_id();
  void set_allocated_customer_id(std::string* customer_id);
  private:
  const std::string& _internal_customer_id() const;
  void _internal_set_customer_id(const std::string& value);
  std::string* _internal_mutable_customer_id();
  public:

  // string app_id = 3;
  void clear_app_id();
  const std::string& app_id() const;
  void set_app_id(const std::string& value);
  void set_app_id(std::string&& value);
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  std::string* mutable_app_id();
  std::string* release_app_id();
  void set_allocated_app_id(std::string* app_id);
  private:
  const std::string& _internal_app_id() const;
  void _internal_set_app_id(const std::string& value);
  std::string* _internal_mutable_app_id();
  public:

  // string transaction_id = 6;
  void clear_transaction_id();
  const std::string& transaction_id() const;
  void set_transaction_id(const std::string& value);
  void set_transaction_id(std::string&& value);
  void set_transaction_id(const char* value);
  void set_transaction_id(const char* value, size_t size);
  std::string* mutable_transaction_id();
  std::string* release_transaction_id();
  void set_allocated_transaction_id(std::string* transaction_id);
  private:
  const std::string& _internal_transaction_id() const;
  void _internal_set_transaction_id(const std::string& value);
  std::string* _internal_mutable_transaction_id();
  public:

  // .com.elarian.hera.proto.CustomerNumber customer_number = 7;
  bool has_customer_number() const;
  private:
  bool _internal_has_customer_number() const;
  public:
  void clear_customer_number();
  const ::com::elarian::hera::proto::CustomerNumber& customer_number() const;
  ::com::elarian::hera::proto::CustomerNumber* release_customer_number();
  ::com::elarian::hera::proto::CustomerNumber* mutable_customer_number();
  void set_allocated_customer_number(::com::elarian::hera::proto::CustomerNumber* customer_number);
  private:
  const ::com::elarian::hera::proto::CustomerNumber& _internal_customer_number() const;
  ::com::elarian::hera::proto::CustomerNumber* _internal_mutable_customer_number();
  public:
  void unsafe_arena_set_allocated_customer_number(
      ::com::elarian::hera::proto::CustomerNumber* customer_number);
  ::com::elarian::hera::proto::CustomerNumber* unsafe_arena_release_customer_number();

  // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 8;
  bool has_channel_number() const;
  private:
  bool _internal_has_channel_number() const;
  public:
  void clear_channel_number();
  const ::com::elarian::hera::proto::PaymentChannelNumber& channel_number() const;
  ::com::elarian::hera::proto::PaymentChannelNumber* release_channel_number();
  ::com::elarian::hera::proto::PaymentChannelNumber* mutable_channel_number();
  void set_allocated_channel_number(::com::elarian::hera::proto::PaymentChannelNumber* channel_number);
  private:
  const ::com::elarian::hera::proto::PaymentChannelNumber& _internal_channel_number() const;
  ::com::elarian::hera::proto::PaymentChannelNumber* _internal_mutable_channel_number();
  public:
  void unsafe_arena_set_allocated_channel_number(
      ::com::elarian::hera::proto::PaymentChannelNumber* channel_number);
  ::com::elarian::hera::proto::PaymentChannelNumber* unsafe_arena_release_channel_number();

  // .com.elarian.hera.proto.Cash value = 9;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::com::elarian::hera::proto::Cash& value() const;
  ::com::elarian::hera::proto::Cash* release_value();
  ::com::elarian::hera::proto::Cash* mutable_value();
  void set_allocated_value(::com::elarian::hera::proto::Cash* value);
  private:
  const ::com::elarian::hera::proto::Cash& _internal_value() const;
  ::com::elarian::hera::proto::Cash* _internal_mutable_value();
  public:
  void unsafe_arena_set_allocated_value(
      ::com::elarian::hera::proto::Cash* value);
  ::com::elarian::hera::proto::Cash* unsafe_arena_release_value();

  // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 4;
  bool has_wallet() const;
  private:
  bool _internal_has_wallet() const;
  public:
  void clear_wallet();
  const ::com::elarian::hera::proto::PaymentWalletCounterParty& wallet() const;
  ::com::elarian::hera::proto::PaymentWalletCounterParty* release_wallet();
  ::com::elarian::hera::proto::PaymentWalletCounterParty* mutable_wallet();
  void set_allocated_wallet(::com::elarian::hera::proto::PaymentWalletCounterParty* wallet);
  private:
  const ::com::elarian::hera::proto::PaymentWalletCounterParty& _internal_wallet() const;
  ::com::elarian::hera::proto::PaymentWalletCounterParty* _internal_mutable_wallet();
  public:
  void unsafe_arena_set_allocated_wallet(
      ::com::elarian::hera::proto::PaymentWalletCounterParty* wallet);
  ::com::elarian::hera::proto::PaymentWalletCounterParty* unsafe_arena_release_wallet();

  // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 5;
  bool has_purse() const;
  private:
  bool _internal_has_purse() const;
  public:
  void clear_purse();
  const ::com::elarian::hera::proto::PaymentPurseCounterParty& purse() const;
  ::com::elarian::hera::proto::PaymentPurseCounterParty* release_purse();
  ::com::elarian::hera::proto::PaymentPurseCounterParty* mutable_purse();
  void set_allocated_purse(::com::elarian::hera::proto::PaymentPurseCounterParty* purse);
  private:
  const ::com::elarian::hera::proto::PaymentPurseCounterParty& _internal_purse() const;
  ::com::elarian::hera::proto::PaymentPurseCounterParty* _internal_mutable_purse();
  public:
  void unsafe_arena_set_allocated_purse(
      ::com::elarian::hera::proto::PaymentPurseCounterParty* purse);
  ::com::elarian::hera::proto::PaymentPurseCounterParty* unsafe_arena_release_purse();

  void clear_credit_party();
  CreditPartyCase credit_party_case() const;
  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification)
 private:
  class _Internal;
  void set_has_wallet();
  void set_has_purse();

  inline bool has_credit_party() const;
  inline void clear_has_credit_party();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr org_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr customer_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr app_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transaction_id_;
  ::com::elarian::hera::proto::CustomerNumber* customer_number_;
  ::com::elarian::hera::proto::PaymentChannelNumber* channel_number_;
  ::com::elarian::hera::proto::Cash* value_;
  union CreditPartyUnion {
    CreditPartyUnion() {}
    ::com::elarian::hera::proto::PaymentWalletCounterParty* wallet_;
    ::com::elarian::hera::proto::PaymentPurseCounterParty* purse_;
  } credit_party_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_simulator_5fsocket_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SimulatorToServerCommand

// .com.elarian.hera.proto.ReceiveMessageSimulatorCommand receive_message = 1;
inline bool SimulatorToServerCommand::_internal_has_receive_message() const {
  return entry_case() == kReceiveMessage;
}
inline bool SimulatorToServerCommand::has_receive_message() const {
  return _internal_has_receive_message();
}
inline void SimulatorToServerCommand::set_has_receive_message() {
  _oneof_case_[0] = kReceiveMessage;
}
inline void SimulatorToServerCommand::clear_receive_message() {
  if (_internal_has_receive_message()) {
    if (GetArena() == nullptr) {
      delete entry_.receive_message_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* SimulatorToServerCommand::release_receive_message() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SimulatorToServerCommand.receive_message)
  if (_internal_has_receive_message()) {
    clear_has_entry();
      ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* temp = entry_.receive_message_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.receive_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand& SimulatorToServerCommand::_internal_receive_message() const {
  return _internal_has_receive_message()
      ? *entry_.receive_message_
      : reinterpret_cast< ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand&>(::com::elarian::hera::proto::_ReceiveMessageSimulatorCommand_default_instance_);
}
inline const ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand& SimulatorToServerCommand::receive_message() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SimulatorToServerCommand.receive_message)
  return _internal_receive_message();
}
inline ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* SimulatorToServerCommand::unsafe_arena_release_receive_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.SimulatorToServerCommand.receive_message)
  if (_internal_has_receive_message()) {
    clear_has_entry();
    ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* temp = entry_.receive_message_;
    entry_.receive_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SimulatorToServerCommand::unsafe_arena_set_allocated_receive_message(::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* receive_message) {
  clear_entry();
  if (receive_message) {
    set_has_receive_message();
    entry_.receive_message_ = receive_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SimulatorToServerCommand.receive_message)
}
inline ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* SimulatorToServerCommand::_internal_mutable_receive_message() {
  if (!_internal_has_receive_message()) {
    clear_entry();
    set_has_receive_message();
    entry_.receive_message_ = CreateMaybeMessage< ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand >(GetArena());
  }
  return entry_.receive_message_;
}
inline ::com::elarian::hera::proto::ReceiveMessageSimulatorCommand* SimulatorToServerCommand::mutable_receive_message() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SimulatorToServerCommand.receive_message)
  return _internal_mutable_receive_message();
}

// .com.elarian.hera.proto.ReceivePaymentSimulatorCommand receive_payment = 2;
inline bool SimulatorToServerCommand::_internal_has_receive_payment() const {
  return entry_case() == kReceivePayment;
}
inline bool SimulatorToServerCommand::has_receive_payment() const {
  return _internal_has_receive_payment();
}
inline void SimulatorToServerCommand::set_has_receive_payment() {
  _oneof_case_[0] = kReceivePayment;
}
inline void SimulatorToServerCommand::clear_receive_payment() {
  if (_internal_has_receive_payment()) {
    if (GetArena() == nullptr) {
      delete entry_.receive_payment_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* SimulatorToServerCommand::release_receive_payment() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SimulatorToServerCommand.receive_payment)
  if (_internal_has_receive_payment()) {
    clear_has_entry();
      ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* temp = entry_.receive_payment_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.receive_payment_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand& SimulatorToServerCommand::_internal_receive_payment() const {
  return _internal_has_receive_payment()
      ? *entry_.receive_payment_
      : reinterpret_cast< ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand&>(::com::elarian::hera::proto::_ReceivePaymentSimulatorCommand_default_instance_);
}
inline const ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand& SimulatorToServerCommand::receive_payment() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SimulatorToServerCommand.receive_payment)
  return _internal_receive_payment();
}
inline ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* SimulatorToServerCommand::unsafe_arena_release_receive_payment() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.SimulatorToServerCommand.receive_payment)
  if (_internal_has_receive_payment()) {
    clear_has_entry();
    ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* temp = entry_.receive_payment_;
    entry_.receive_payment_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SimulatorToServerCommand::unsafe_arena_set_allocated_receive_payment(::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* receive_payment) {
  clear_entry();
  if (receive_payment) {
    set_has_receive_payment();
    entry_.receive_payment_ = receive_payment;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SimulatorToServerCommand.receive_payment)
}
inline ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* SimulatorToServerCommand::_internal_mutable_receive_payment() {
  if (!_internal_has_receive_payment()) {
    clear_entry();
    set_has_receive_payment();
    entry_.receive_payment_ = CreateMaybeMessage< ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand >(GetArena());
  }
  return entry_.receive_payment_;
}
inline ::com::elarian::hera::proto::ReceivePaymentSimulatorCommand* SimulatorToServerCommand::mutable_receive_payment() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SimulatorToServerCommand.receive_payment)
  return _internal_mutable_receive_payment();
}

// .com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand update_payment_status = 3;
inline bool SimulatorToServerCommand::_internal_has_update_payment_status() const {
  return entry_case() == kUpdatePaymentStatus;
}
inline bool SimulatorToServerCommand::has_update_payment_status() const {
  return _internal_has_update_payment_status();
}
inline void SimulatorToServerCommand::set_has_update_payment_status() {
  _oneof_case_[0] = kUpdatePaymentStatus;
}
inline void SimulatorToServerCommand::clear_update_payment_status() {
  if (_internal_has_update_payment_status()) {
    if (GetArena() == nullptr) {
      delete entry_.update_payment_status_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* SimulatorToServerCommand::release_update_payment_status() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SimulatorToServerCommand.update_payment_status)
  if (_internal_has_update_payment_status()) {
    clear_has_entry();
      ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* temp = entry_.update_payment_status_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.update_payment_status_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand& SimulatorToServerCommand::_internal_update_payment_status() const {
  return _internal_has_update_payment_status()
      ? *entry_.update_payment_status_
      : reinterpret_cast< ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand&>(::com::elarian::hera::proto::_UpdatePaymentStatusSimulatorCommand_default_instance_);
}
inline const ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand& SimulatorToServerCommand::update_payment_status() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SimulatorToServerCommand.update_payment_status)
  return _internal_update_payment_status();
}
inline ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* SimulatorToServerCommand::unsafe_arena_release_update_payment_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.SimulatorToServerCommand.update_payment_status)
  if (_internal_has_update_payment_status()) {
    clear_has_entry();
    ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* temp = entry_.update_payment_status_;
    entry_.update_payment_status_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SimulatorToServerCommand::unsafe_arena_set_allocated_update_payment_status(::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* update_payment_status) {
  clear_entry();
  if (update_payment_status) {
    set_has_update_payment_status();
    entry_.update_payment_status_ = update_payment_status;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SimulatorToServerCommand.update_payment_status)
}
inline ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* SimulatorToServerCommand::_internal_mutable_update_payment_status() {
  if (!_internal_has_update_payment_status()) {
    clear_entry();
    set_has_update_payment_status();
    entry_.update_payment_status_ = CreateMaybeMessage< ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand >(GetArena());
  }
  return entry_.update_payment_status_;
}
inline ::com::elarian::hera::proto::UpdatePaymentStatusSimulatorCommand* SimulatorToServerCommand::mutable_update_payment_status() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SimulatorToServerCommand.update_payment_status)
  return _internal_mutable_update_payment_status();
}

inline bool SimulatorToServerCommand::has_entry() const {
  return entry_case() != ENTRY_NOT_SET;
}
inline void SimulatorToServerCommand::clear_has_entry() {
  _oneof_case_[0] = ENTRY_NOT_SET;
}
inline SimulatorToServerCommand::EntryCase SimulatorToServerCommand::entry_case() const {
  return SimulatorToServerCommand::EntryCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ReceiveMessageSimulatorCommand

// string customer_number = 1;
inline void ReceiveMessageSimulatorCommand::clear_customer_number() {
  customer_number_.ClearToEmpty();
}
inline const std::string& ReceiveMessageSimulatorCommand::customer_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.customer_number)
  return _internal_customer_number();
}
inline void ReceiveMessageSimulatorCommand::set_customer_number(const std::string& value) {
  _internal_set_customer_number(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.customer_number)
}
inline std::string* ReceiveMessageSimulatorCommand::mutable_customer_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.customer_number)
  return _internal_mutable_customer_number();
}
inline const std::string& ReceiveMessageSimulatorCommand::_internal_customer_number() const {
  return customer_number_.Get();
}
inline void ReceiveMessageSimulatorCommand::_internal_set_customer_number(const std::string& value) {
  
  customer_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ReceiveMessageSimulatorCommand::set_customer_number(std::string&& value) {
  
  customer_number_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.customer_number)
}
inline void ReceiveMessageSimulatorCommand::set_customer_number(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.customer_number)
}
inline void ReceiveMessageSimulatorCommand::set_customer_number(const char* value,
    size_t size) {
  
  customer_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.customer_number)
}
inline std::string* ReceiveMessageSimulatorCommand::_internal_mutable_customer_number() {
  
  return customer_number_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ReceiveMessageSimulatorCommand::release_customer_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.customer_number)
  return customer_number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ReceiveMessageSimulatorCommand::set_allocated_customer_number(std::string* customer_number) {
  if (customer_number != nullptr) {
    
  } else {
    
  }
  customer_number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), customer_number,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.customer_number)
}

// .com.elarian.hera.proto.MessagingChannelNumber channel_number = 2;
inline bool ReceiveMessageSimulatorCommand::_internal_has_channel_number() const {
  return this != internal_default_instance() && channel_number_ != nullptr;
}
inline bool ReceiveMessageSimulatorCommand::has_channel_number() const {
  return _internal_has_channel_number();
}
inline const ::com::elarian::hera::proto::MessagingChannelNumber& ReceiveMessageSimulatorCommand::_internal_channel_number() const {
  const ::com::elarian::hera::proto::MessagingChannelNumber* p = channel_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::MessagingChannelNumber&>(
      ::com::elarian::hera::proto::_MessagingChannelNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::MessagingChannelNumber& ReceiveMessageSimulatorCommand::channel_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.channel_number)
  return _internal_channel_number();
}
inline void ReceiveMessageSimulatorCommand::unsafe_arena_set_allocated_channel_number(
    ::com::elarian::hera::proto::MessagingChannelNumber* channel_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  channel_number_ = channel_number;
  if (channel_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.channel_number)
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* ReceiveMessageSimulatorCommand::release_channel_number() {
  
  ::com::elarian::hera::proto::MessagingChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* ReceiveMessageSimulatorCommand::unsafe_arena_release_channel_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.channel_number)
  
  ::com::elarian::hera::proto::MessagingChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* ReceiveMessageSimulatorCommand::_internal_mutable_channel_number() {
  
  if (channel_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::MessagingChannelNumber>(GetArena());
    channel_number_ = p;
  }
  return channel_number_;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* ReceiveMessageSimulatorCommand::mutable_channel_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.channel_number)
  return _internal_mutable_channel_number();
}
inline void ReceiveMessageSimulatorCommand::set_allocated_channel_number(::com::elarian::hera::proto::MessagingChannelNumber* channel_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  if (channel_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number)->GetArena();
    if (message_arena != submessage_arena) {
      channel_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel_number, submessage_arena);
    }
    
  } else {
    
  }
  channel_number_ = channel_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.channel_number)
}

// repeated .com.elarian.hera.proto.InboundMessageBody parts = 3;
inline int ReceiveMessageSimulatorCommand::_internal_parts_size() const {
  return parts_.size();
}
inline int ReceiveMessageSimulatorCommand::parts_size() const {
  return _internal_parts_size();
}
inline ::com::elarian::hera::proto::InboundMessageBody* ReceiveMessageSimulatorCommand::mutable_parts(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.parts)
  return parts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::InboundMessageBody >*
ReceiveMessageSimulatorCommand::mutable_parts() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.parts)
  return &parts_;
}
inline const ::com::elarian::hera::proto::InboundMessageBody& ReceiveMessageSimulatorCommand::_internal_parts(int index) const {
  return parts_.Get(index);
}
inline const ::com::elarian::hera::proto::InboundMessageBody& ReceiveMessageSimulatorCommand::parts(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.parts)
  return _internal_parts(index);
}
inline ::com::elarian::hera::proto::InboundMessageBody* ReceiveMessageSimulatorCommand::_internal_add_parts() {
  return parts_.Add();
}
inline ::com::elarian::hera::proto::InboundMessageBody* ReceiveMessageSimulatorCommand::add_parts() {
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.parts)
  return _internal_add_parts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::InboundMessageBody >&
ReceiveMessageSimulatorCommand::parts() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.parts)
  return parts_;
}

// .google.protobuf.StringValue session_id = 4;
inline bool ReceiveMessageSimulatorCommand::_internal_has_session_id() const {
  return this != internal_default_instance() && session_id_ != nullptr;
}
inline bool ReceiveMessageSimulatorCommand::has_session_id() const {
  return _internal_has_session_id();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& ReceiveMessageSimulatorCommand::_internal_session_id() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = session_id_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& ReceiveMessageSimulatorCommand::session_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.session_id)
  return _internal_session_id();
}
inline void ReceiveMessageSimulatorCommand::unsafe_arena_set_allocated_session_id(
    PROTOBUF_NAMESPACE_ID::StringValue* session_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(session_id_);
  }
  session_id_ = session_id;
  if (session_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.session_id)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ReceiveMessageSimulatorCommand::release_session_id() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = session_id_;
  session_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ReceiveMessageSimulatorCommand::unsafe_arena_release_session_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.session_id)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = session_id_;
  session_id_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ReceiveMessageSimulatorCommand::_internal_mutable_session_id() {
  
  if (session_id_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    session_id_ = p;
  }
  return session_id_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ReceiveMessageSimulatorCommand::mutable_session_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.session_id)
  return _internal_mutable_session_id();
}
inline void ReceiveMessageSimulatorCommand::set_allocated_session_id(PROTOBUF_NAMESPACE_ID::StringValue* session_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(session_id_);
  }
  if (session_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(session_id)->GetArena();
    if (message_arena != submessage_arena) {
      session_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, session_id, submessage_arena);
    }
    
  } else {
    
  }
  session_id_ = session_id;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.session_id)
}

// .com.elarian.hera.proto.Cash cost = 5;
inline bool ReceiveMessageSimulatorCommand::_internal_has_cost() const {
  return this != internal_default_instance() && cost_ != nullptr;
}
inline bool ReceiveMessageSimulatorCommand::has_cost() const {
  return _internal_has_cost();
}
inline const ::com::elarian::hera::proto::Cash& ReceiveMessageSimulatorCommand::_internal_cost() const {
  const ::com::elarian::hera::proto::Cash* p = cost_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::Cash&>(
      ::com::elarian::hera::proto::_Cash_default_instance_);
}
inline const ::com::elarian::hera::proto::Cash& ReceiveMessageSimulatorCommand::cost() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.cost)
  return _internal_cost();
}
inline void ReceiveMessageSimulatorCommand::unsafe_arena_set_allocated_cost(
    ::com::elarian::hera::proto::Cash* cost) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cost_);
  }
  cost_ = cost;
  if (cost) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.cost)
}
inline ::com::elarian::hera::proto::Cash* ReceiveMessageSimulatorCommand::release_cost() {
  
  ::com::elarian::hera::proto::Cash* temp = cost_;
  cost_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::Cash* ReceiveMessageSimulatorCommand::unsafe_arena_release_cost() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.cost)
  
  ::com::elarian::hera::proto::Cash* temp = cost_;
  cost_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::Cash* ReceiveMessageSimulatorCommand::_internal_mutable_cost() {
  
  if (cost_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::Cash>(GetArena());
    cost_ = p;
  }
  return cost_;
}
inline ::com::elarian::hera::proto::Cash* ReceiveMessageSimulatorCommand::mutable_cost() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.cost)
  return _internal_mutable_cost();
}
inline void ReceiveMessageSimulatorCommand::set_allocated_cost(::com::elarian::hera::proto::Cash* cost) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cost_);
  }
  if (cost) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cost)->GetArena();
    if (message_arena != submessage_arena) {
      cost = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cost, submessage_arena);
    }
    
  } else {
    
  }
  cost_ = cost;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.cost)
}

// .google.protobuf.Duration duration = 6;
inline bool ReceiveMessageSimulatorCommand::_internal_has_duration() const {
  return this != internal_default_instance() && duration_ != nullptr;
}
inline bool ReceiveMessageSimulatorCommand::has_duration() const {
  return _internal_has_duration();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& ReceiveMessageSimulatorCommand::_internal_duration() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = duration_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& ReceiveMessageSimulatorCommand::duration() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.duration)
  return _internal_duration();
}
inline void ReceiveMessageSimulatorCommand::unsafe_arena_set_allocated_duration(
    PROTOBUF_NAMESPACE_ID::Duration* duration) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(duration_);
  }
  duration_ = duration;
  if (duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.duration)
}
inline PROTOBUF_NAMESPACE_ID::Duration* ReceiveMessageSimulatorCommand::release_duration() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = duration_;
  duration_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* ReceiveMessageSimulatorCommand::unsafe_arena_release_duration() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.duration)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = duration_;
  duration_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* ReceiveMessageSimulatorCommand::_internal_mutable_duration() {
  
  if (duration_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    duration_ = p;
  }
  return duration_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* ReceiveMessageSimulatorCommand::mutable_duration() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.duration)
  return _internal_mutable_duration();
}
inline void ReceiveMessageSimulatorCommand::set_allocated_duration(PROTOBUF_NAMESPACE_ID::Duration* duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(duration_);
  }
  if (duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(duration)->GetArena();
    if (message_arena != submessage_arena) {
      duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    
  } else {
    
  }
  duration_ = duration;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ReceiveMessageSimulatorCommand.duration)
}

// -------------------------------------------------------------------

// ReceivePaymentSimulatorCommand

// string transaction_id = 1;
inline void ReceivePaymentSimulatorCommand::clear_transaction_id() {
  transaction_id_.ClearToEmpty();
}
inline const std::string& ReceivePaymentSimulatorCommand::transaction_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.transaction_id)
  return _internal_transaction_id();
}
inline void ReceivePaymentSimulatorCommand::set_transaction_id(const std::string& value) {
  _internal_set_transaction_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.transaction_id)
}
inline std::string* ReceivePaymentSimulatorCommand::mutable_transaction_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.transaction_id)
  return _internal_mutable_transaction_id();
}
inline const std::string& ReceivePaymentSimulatorCommand::_internal_transaction_id() const {
  return transaction_id_.Get();
}
inline void ReceivePaymentSimulatorCommand::_internal_set_transaction_id(const std::string& value) {
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ReceivePaymentSimulatorCommand::set_transaction_id(std::string&& value) {
  
  transaction_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.transaction_id)
}
inline void ReceivePaymentSimulatorCommand::set_transaction_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.transaction_id)
}
inline void ReceivePaymentSimulatorCommand::set_transaction_id(const char* value,
    size_t size) {
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.transaction_id)
}
inline std::string* ReceivePaymentSimulatorCommand::_internal_mutable_transaction_id() {
  
  return transaction_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ReceivePaymentSimulatorCommand::release_transaction_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.transaction_id)
  return transaction_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ReceivePaymentSimulatorCommand::set_allocated_transaction_id(std::string* transaction_id) {
  if (transaction_id != nullptr) {
    
  } else {
    
  }
  transaction_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transaction_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.transaction_id)
}

// .com.elarian.hera.proto.PaymentChannelNumber channel_number = 2;
inline bool ReceivePaymentSimulatorCommand::_internal_has_channel_number() const {
  return this != internal_default_instance() && channel_number_ != nullptr;
}
inline bool ReceivePaymentSimulatorCommand::has_channel_number() const {
  return _internal_has_channel_number();
}
inline const ::com::elarian::hera::proto::PaymentChannelNumber& ReceivePaymentSimulatorCommand::_internal_channel_number() const {
  const ::com::elarian::hera::proto::PaymentChannelNumber* p = channel_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::PaymentChannelNumber&>(
      ::com::elarian::hera::proto::_PaymentChannelNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::PaymentChannelNumber& ReceivePaymentSimulatorCommand::channel_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.channel_number)
  return _internal_channel_number();
}
inline void ReceivePaymentSimulatorCommand::unsafe_arena_set_allocated_channel_number(
    ::com::elarian::hera::proto::PaymentChannelNumber* channel_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  channel_number_ = channel_number;
  if (channel_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.channel_number)
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* ReceivePaymentSimulatorCommand::release_channel_number() {
  
  ::com::elarian::hera::proto::PaymentChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* ReceivePaymentSimulatorCommand::unsafe_arena_release_channel_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.channel_number)
  
  ::com::elarian::hera::proto::PaymentChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* ReceivePaymentSimulatorCommand::_internal_mutable_channel_number() {
  
  if (channel_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::PaymentChannelNumber>(GetArena());
    channel_number_ = p;
  }
  return channel_number_;
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* ReceivePaymentSimulatorCommand::mutable_channel_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.channel_number)
  return _internal_mutable_channel_number();
}
inline void ReceivePaymentSimulatorCommand::set_allocated_channel_number(::com::elarian::hera::proto::PaymentChannelNumber* channel_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  if (channel_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number)->GetArena();
    if (message_arena != submessage_arena) {
      channel_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel_number, submessage_arena);
    }
    
  } else {
    
  }
  channel_number_ = channel_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.channel_number)
}

// string customer_number = 3;
inline void ReceivePaymentSimulatorCommand::clear_customer_number() {
  customer_number_.ClearToEmpty();
}
inline const std::string& ReceivePaymentSimulatorCommand::customer_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.customer_number)
  return _internal_customer_number();
}
inline void ReceivePaymentSimulatorCommand::set_customer_number(const std::string& value) {
  _internal_set_customer_number(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.customer_number)
}
inline std::string* ReceivePaymentSimulatorCommand::mutable_customer_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.customer_number)
  return _internal_mutable_customer_number();
}
inline const std::string& ReceivePaymentSimulatorCommand::_internal_customer_number() const {
  return customer_number_.Get();
}
inline void ReceivePaymentSimulatorCommand::_internal_set_customer_number(const std::string& value) {
  
  customer_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ReceivePaymentSimulatorCommand::set_customer_number(std::string&& value) {
  
  customer_number_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.customer_number)
}
inline void ReceivePaymentSimulatorCommand::set_customer_number(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.customer_number)
}
inline void ReceivePaymentSimulatorCommand::set_customer_number(const char* value,
    size_t size) {
  
  customer_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.customer_number)
}
inline std::string* ReceivePaymentSimulatorCommand::_internal_mutable_customer_number() {
  
  return customer_number_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ReceivePaymentSimulatorCommand::release_customer_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.customer_number)
  return customer_number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ReceivePaymentSimulatorCommand::set_allocated_customer_number(std::string* customer_number) {
  if (customer_number != nullptr) {
    
  } else {
    
  }
  customer_number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), customer_number,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.customer_number)
}

// .com.elarian.hera.proto.Cash value = 4;
inline bool ReceivePaymentSimulatorCommand::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool ReceivePaymentSimulatorCommand::has_value() const {
  return _internal_has_value();
}
inline const ::com::elarian::hera::proto::Cash& ReceivePaymentSimulatorCommand::_internal_value() const {
  const ::com::elarian::hera::proto::Cash* p = value_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::Cash&>(
      ::com::elarian::hera::proto::_Cash_default_instance_);
}
inline const ::com::elarian::hera::proto::Cash& ReceivePaymentSimulatorCommand::value() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.value)
  return _internal_value();
}
inline void ReceivePaymentSimulatorCommand::unsafe_arena_set_allocated_value(
    ::com::elarian::hera::proto::Cash* value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.value)
}
inline ::com::elarian::hera::proto::Cash* ReceivePaymentSimulatorCommand::release_value() {
  
  ::com::elarian::hera::proto::Cash* temp = value_;
  value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::Cash* ReceivePaymentSimulatorCommand::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.value)
  
  ::com::elarian::hera::proto::Cash* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::Cash* ReceivePaymentSimulatorCommand::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::Cash>(GetArena());
    value_ = p;
  }
  return value_;
}
inline ::com::elarian::hera::proto::Cash* ReceivePaymentSimulatorCommand::mutable_value() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.value)
  return _internal_mutable_value();
}
inline void ReceivePaymentSimulatorCommand::set_allocated_value(::com::elarian::hera::proto::Cash* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.value)
}

// .com.elarian.hera.proto.PaymentStatus status = 5;
inline void ReceivePaymentSimulatorCommand::clear_status() {
  status_ = 0;
}
inline ::com::elarian::hera::proto::PaymentStatus ReceivePaymentSimulatorCommand::_internal_status() const {
  return static_cast< ::com::elarian::hera::proto::PaymentStatus >(status_);
}
inline ::com::elarian::hera::proto::PaymentStatus ReceivePaymentSimulatorCommand::status() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.status)
  return _internal_status();
}
inline void ReceivePaymentSimulatorCommand::_internal_set_status(::com::elarian::hera::proto::PaymentStatus value) {
  
  status_ = value;
}
inline void ReceivePaymentSimulatorCommand::set_status(::com::elarian::hera::proto::PaymentStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.ReceivePaymentSimulatorCommand.status)
}

// -------------------------------------------------------------------

// UpdatePaymentStatusSimulatorCommand

// string transaction_id = 1;
inline void UpdatePaymentStatusSimulatorCommand::clear_transaction_id() {
  transaction_id_.ClearToEmpty();
}
inline const std::string& UpdatePaymentStatusSimulatorCommand::transaction_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.transaction_id)
  return _internal_transaction_id();
}
inline void UpdatePaymentStatusSimulatorCommand::set_transaction_id(const std::string& value) {
  _internal_set_transaction_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.transaction_id)
}
inline std::string* UpdatePaymentStatusSimulatorCommand::mutable_transaction_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.transaction_id)
  return _internal_mutable_transaction_id();
}
inline const std::string& UpdatePaymentStatusSimulatorCommand::_internal_transaction_id() const {
  return transaction_id_.Get();
}
inline void UpdatePaymentStatusSimulatorCommand::_internal_set_transaction_id(const std::string& value) {
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UpdatePaymentStatusSimulatorCommand::set_transaction_id(std::string&& value) {
  
  transaction_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.transaction_id)
}
inline void UpdatePaymentStatusSimulatorCommand::set_transaction_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.transaction_id)
}
inline void UpdatePaymentStatusSimulatorCommand::set_transaction_id(const char* value,
    size_t size) {
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.transaction_id)
}
inline std::string* UpdatePaymentStatusSimulatorCommand::_internal_mutable_transaction_id() {
  
  return transaction_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UpdatePaymentStatusSimulatorCommand::release_transaction_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.transaction_id)
  return transaction_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UpdatePaymentStatusSimulatorCommand::set_allocated_transaction_id(std::string* transaction_id) {
  if (transaction_id != nullptr) {
    
  } else {
    
  }
  transaction_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transaction_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.transaction_id)
}

// .com.elarian.hera.proto.PaymentStatus status = 2;
inline void UpdatePaymentStatusSimulatorCommand::clear_status() {
  status_ = 0;
}
inline ::com::elarian::hera::proto::PaymentStatus UpdatePaymentStatusSimulatorCommand::_internal_status() const {
  return static_cast< ::com::elarian::hera::proto::PaymentStatus >(status_);
}
inline ::com::elarian::hera::proto::PaymentStatus UpdatePaymentStatusSimulatorCommand::status() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.status)
  return _internal_status();
}
inline void UpdatePaymentStatusSimulatorCommand::_internal_set_status(::com::elarian::hera::proto::PaymentStatus value) {
  
  status_ = value;
}
inline void UpdatePaymentStatusSimulatorCommand::set_status(::com::elarian::hera::proto::PaymentStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.status)
}

// -------------------------------------------------------------------

// SimulatorToServerCommandReply

// bool status = 1;
inline void SimulatorToServerCommandReply::clear_status() {
  status_ = false;
}
inline bool SimulatorToServerCommandReply::_internal_status() const {
  return status_;
}
inline bool SimulatorToServerCommandReply::status() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SimulatorToServerCommandReply.status)
  return _internal_status();
}
inline void SimulatorToServerCommandReply::_internal_set_status(bool value) {
  
  status_ = value;
}
inline void SimulatorToServerCommandReply::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SimulatorToServerCommandReply.status)
}

// string description = 2;
inline void SimulatorToServerCommandReply::clear_description() {
  description_.ClearToEmpty();
}
inline const std::string& SimulatorToServerCommandReply::description() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SimulatorToServerCommandReply.description)
  return _internal_description();
}
inline void SimulatorToServerCommandReply::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SimulatorToServerCommandReply.description)
}
inline std::string* SimulatorToServerCommandReply::mutable_description() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SimulatorToServerCommandReply.description)
  return _internal_mutable_description();
}
inline const std::string& SimulatorToServerCommandReply::_internal_description() const {
  return description_.Get();
}
inline void SimulatorToServerCommandReply::_internal_set_description(const std::string& value) {
  
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SimulatorToServerCommandReply::set_description(std::string&& value) {
  
  description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SimulatorToServerCommandReply.description)
}
inline void SimulatorToServerCommandReply::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SimulatorToServerCommandReply.description)
}
inline void SimulatorToServerCommandReply::set_description(const char* value,
    size_t size) {
  
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SimulatorToServerCommandReply.description)
}
inline std::string* SimulatorToServerCommandReply::_internal_mutable_description() {
  
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SimulatorToServerCommandReply::release_description() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SimulatorToServerCommandReply.description)
  return description_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SimulatorToServerCommandReply::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SimulatorToServerCommandReply.description)
}

// .com.elarian.hera.proto.OutboundMessage message = 3;
inline bool SimulatorToServerCommandReply::_internal_has_message() const {
  return this != internal_default_instance() && message_ != nullptr;
}
inline bool SimulatorToServerCommandReply::has_message() const {
  return _internal_has_message();
}
inline const ::com::elarian::hera::proto::OutboundMessage& SimulatorToServerCommandReply::_internal_message() const {
  const ::com::elarian::hera::proto::OutboundMessage* p = message_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::OutboundMessage&>(
      ::com::elarian::hera::proto::_OutboundMessage_default_instance_);
}
inline const ::com::elarian::hera::proto::OutboundMessage& SimulatorToServerCommandReply::message() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SimulatorToServerCommandReply.message)
  return _internal_message();
}
inline void SimulatorToServerCommandReply::unsafe_arena_set_allocated_message(
    ::com::elarian::hera::proto::OutboundMessage* message) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(message_);
  }
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SimulatorToServerCommandReply.message)
}
inline ::com::elarian::hera::proto::OutboundMessage* SimulatorToServerCommandReply::release_message() {
  
  ::com::elarian::hera::proto::OutboundMessage* temp = message_;
  message_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::OutboundMessage* SimulatorToServerCommandReply::unsafe_arena_release_message() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SimulatorToServerCommandReply.message)
  
  ::com::elarian::hera::proto::OutboundMessage* temp = message_;
  message_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::OutboundMessage* SimulatorToServerCommandReply::_internal_mutable_message() {
  
  if (message_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::OutboundMessage>(GetArena());
    message_ = p;
  }
  return message_;
}
inline ::com::elarian::hera::proto::OutboundMessage* SimulatorToServerCommandReply::mutable_message() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SimulatorToServerCommandReply.message)
  return _internal_mutable_message();
}
inline void SimulatorToServerCommandReply::set_allocated_message(::com::elarian::hera::proto::OutboundMessage* message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(message_);
  }
  if (message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(message)->GetArena();
    if (message_arena != submessage_arena) {
      message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    
  } else {
    
  }
  message_ = message;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SimulatorToServerCommandReply.message)
}

// -------------------------------------------------------------------

// ServerToSimulatorNotification

// .com.elarian.hera.proto.SendMessageSimulatorNotification send_message = 1;
inline bool ServerToSimulatorNotification::_internal_has_send_message() const {
  return entry_case() == kSendMessage;
}
inline bool ServerToSimulatorNotification::has_send_message() const {
  return _internal_has_send_message();
}
inline void ServerToSimulatorNotification::set_has_send_message() {
  _oneof_case_[0] = kSendMessage;
}
inline void ServerToSimulatorNotification::clear_send_message() {
  if (_internal_has_send_message()) {
    if (GetArena() == nullptr) {
      delete entry_.send_message_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::SendMessageSimulatorNotification* ServerToSimulatorNotification::release_send_message() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ServerToSimulatorNotification.send_message)
  if (_internal_has_send_message()) {
    clear_has_entry();
      ::com::elarian::hera::proto::SendMessageSimulatorNotification* temp = entry_.send_message_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.send_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::SendMessageSimulatorNotification& ServerToSimulatorNotification::_internal_send_message() const {
  return _internal_has_send_message()
      ? *entry_.send_message_
      : reinterpret_cast< ::com::elarian::hera::proto::SendMessageSimulatorNotification&>(::com::elarian::hera::proto::_SendMessageSimulatorNotification_default_instance_);
}
inline const ::com::elarian::hera::proto::SendMessageSimulatorNotification& ServerToSimulatorNotification::send_message() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ServerToSimulatorNotification.send_message)
  return _internal_send_message();
}
inline ::com::elarian::hera::proto::SendMessageSimulatorNotification* ServerToSimulatorNotification::unsafe_arena_release_send_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.ServerToSimulatorNotification.send_message)
  if (_internal_has_send_message()) {
    clear_has_entry();
    ::com::elarian::hera::proto::SendMessageSimulatorNotification* temp = entry_.send_message_;
    entry_.send_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ServerToSimulatorNotification::unsafe_arena_set_allocated_send_message(::com::elarian::hera::proto::SendMessageSimulatorNotification* send_message) {
  clear_entry();
  if (send_message) {
    set_has_send_message();
    entry_.send_message_ = send_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ServerToSimulatorNotification.send_message)
}
inline ::com::elarian::hera::proto::SendMessageSimulatorNotification* ServerToSimulatorNotification::_internal_mutable_send_message() {
  if (!_internal_has_send_message()) {
    clear_entry();
    set_has_send_message();
    entry_.send_message_ = CreateMaybeMessage< ::com::elarian::hera::proto::SendMessageSimulatorNotification >(GetArena());
  }
  return entry_.send_message_;
}
inline ::com::elarian::hera::proto::SendMessageSimulatorNotification* ServerToSimulatorNotification::mutable_send_message() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ServerToSimulatorNotification.send_message)
  return _internal_mutable_send_message();
}

// .com.elarian.hera.proto.MakeVoiceCallSimulatorNotification make_voice_call = 2;
inline bool ServerToSimulatorNotification::_internal_has_make_voice_call() const {
  return entry_case() == kMakeVoiceCall;
}
inline bool ServerToSimulatorNotification::has_make_voice_call() const {
  return _internal_has_make_voice_call();
}
inline void ServerToSimulatorNotification::set_has_make_voice_call() {
  _oneof_case_[0] = kMakeVoiceCall;
}
inline void ServerToSimulatorNotification::clear_make_voice_call() {
  if (_internal_has_make_voice_call()) {
    if (GetArena() == nullptr) {
      delete entry_.make_voice_call_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* ServerToSimulatorNotification::release_make_voice_call() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ServerToSimulatorNotification.make_voice_call)
  if (_internal_has_make_voice_call()) {
    clear_has_entry();
      ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* temp = entry_.make_voice_call_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.make_voice_call_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification& ServerToSimulatorNotification::_internal_make_voice_call() const {
  return _internal_has_make_voice_call()
      ? *entry_.make_voice_call_
      : reinterpret_cast< ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification&>(::com::elarian::hera::proto::_MakeVoiceCallSimulatorNotification_default_instance_);
}
inline const ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification& ServerToSimulatorNotification::make_voice_call() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ServerToSimulatorNotification.make_voice_call)
  return _internal_make_voice_call();
}
inline ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* ServerToSimulatorNotification::unsafe_arena_release_make_voice_call() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.ServerToSimulatorNotification.make_voice_call)
  if (_internal_has_make_voice_call()) {
    clear_has_entry();
    ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* temp = entry_.make_voice_call_;
    entry_.make_voice_call_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ServerToSimulatorNotification::unsafe_arena_set_allocated_make_voice_call(::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* make_voice_call) {
  clear_entry();
  if (make_voice_call) {
    set_has_make_voice_call();
    entry_.make_voice_call_ = make_voice_call;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ServerToSimulatorNotification.make_voice_call)
}
inline ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* ServerToSimulatorNotification::_internal_mutable_make_voice_call() {
  if (!_internal_has_make_voice_call()) {
    clear_entry();
    set_has_make_voice_call();
    entry_.make_voice_call_ = CreateMaybeMessage< ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification >(GetArena());
  }
  return entry_.make_voice_call_;
}
inline ::com::elarian::hera::proto::MakeVoiceCallSimulatorNotification* ServerToSimulatorNotification::mutable_make_voice_call() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ServerToSimulatorNotification.make_voice_call)
  return _internal_mutable_make_voice_call();
}

// .com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification send_customer_payment = 3;
inline bool ServerToSimulatorNotification::_internal_has_send_customer_payment() const {
  return entry_case() == kSendCustomerPayment;
}
inline bool ServerToSimulatorNotification::has_send_customer_payment() const {
  return _internal_has_send_customer_payment();
}
inline void ServerToSimulatorNotification::set_has_send_customer_payment() {
  _oneof_case_[0] = kSendCustomerPayment;
}
inline void ServerToSimulatorNotification::clear_send_customer_payment() {
  if (_internal_has_send_customer_payment()) {
    if (GetArena() == nullptr) {
      delete entry_.send_customer_payment_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* ServerToSimulatorNotification::release_send_customer_payment() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ServerToSimulatorNotification.send_customer_payment)
  if (_internal_has_send_customer_payment()) {
    clear_has_entry();
      ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* temp = entry_.send_customer_payment_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.send_customer_payment_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification& ServerToSimulatorNotification::_internal_send_customer_payment() const {
  return _internal_has_send_customer_payment()
      ? *entry_.send_customer_payment_
      : reinterpret_cast< ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification&>(::com::elarian::hera::proto::_SendCustomerPaymentSimulatorNotification_default_instance_);
}
inline const ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification& ServerToSimulatorNotification::send_customer_payment() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ServerToSimulatorNotification.send_customer_payment)
  return _internal_send_customer_payment();
}
inline ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* ServerToSimulatorNotification::unsafe_arena_release_send_customer_payment() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.ServerToSimulatorNotification.send_customer_payment)
  if (_internal_has_send_customer_payment()) {
    clear_has_entry();
    ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* temp = entry_.send_customer_payment_;
    entry_.send_customer_payment_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ServerToSimulatorNotification::unsafe_arena_set_allocated_send_customer_payment(::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* send_customer_payment) {
  clear_entry();
  if (send_customer_payment) {
    set_has_send_customer_payment();
    entry_.send_customer_payment_ = send_customer_payment;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ServerToSimulatorNotification.send_customer_payment)
}
inline ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* ServerToSimulatorNotification::_internal_mutable_send_customer_payment() {
  if (!_internal_has_send_customer_payment()) {
    clear_entry();
    set_has_send_customer_payment();
    entry_.send_customer_payment_ = CreateMaybeMessage< ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification >(GetArena());
  }
  return entry_.send_customer_payment_;
}
inline ::com::elarian::hera::proto::SendCustomerPaymentSimulatorNotification* ServerToSimulatorNotification::mutable_send_customer_payment() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ServerToSimulatorNotification.send_customer_payment)
  return _internal_mutable_send_customer_payment();
}

// .com.elarian.hera.proto.SendChannelPaymentSimulatorNotification send_channel_payment = 4;
inline bool ServerToSimulatorNotification::_internal_has_send_channel_payment() const {
  return entry_case() == kSendChannelPayment;
}
inline bool ServerToSimulatorNotification::has_send_channel_payment() const {
  return _internal_has_send_channel_payment();
}
inline void ServerToSimulatorNotification::set_has_send_channel_payment() {
  _oneof_case_[0] = kSendChannelPayment;
}
inline void ServerToSimulatorNotification::clear_send_channel_payment() {
  if (_internal_has_send_channel_payment()) {
    if (GetArena() == nullptr) {
      delete entry_.send_channel_payment_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* ServerToSimulatorNotification::release_send_channel_payment() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ServerToSimulatorNotification.send_channel_payment)
  if (_internal_has_send_channel_payment()) {
    clear_has_entry();
      ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* temp = entry_.send_channel_payment_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.send_channel_payment_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification& ServerToSimulatorNotification::_internal_send_channel_payment() const {
  return _internal_has_send_channel_payment()
      ? *entry_.send_channel_payment_
      : reinterpret_cast< ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification&>(::com::elarian::hera::proto::_SendChannelPaymentSimulatorNotification_default_instance_);
}
inline const ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification& ServerToSimulatorNotification::send_channel_payment() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ServerToSimulatorNotification.send_channel_payment)
  return _internal_send_channel_payment();
}
inline ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* ServerToSimulatorNotification::unsafe_arena_release_send_channel_payment() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.ServerToSimulatorNotification.send_channel_payment)
  if (_internal_has_send_channel_payment()) {
    clear_has_entry();
    ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* temp = entry_.send_channel_payment_;
    entry_.send_channel_payment_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ServerToSimulatorNotification::unsafe_arena_set_allocated_send_channel_payment(::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* send_channel_payment) {
  clear_entry();
  if (send_channel_payment) {
    set_has_send_channel_payment();
    entry_.send_channel_payment_ = send_channel_payment;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ServerToSimulatorNotification.send_channel_payment)
}
inline ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* ServerToSimulatorNotification::_internal_mutable_send_channel_payment() {
  if (!_internal_has_send_channel_payment()) {
    clear_entry();
    set_has_send_channel_payment();
    entry_.send_channel_payment_ = CreateMaybeMessage< ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification >(GetArena());
  }
  return entry_.send_channel_payment_;
}
inline ::com::elarian::hera::proto::SendChannelPaymentSimulatorNotification* ServerToSimulatorNotification::mutable_send_channel_payment() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ServerToSimulatorNotification.send_channel_payment)
  return _internal_mutable_send_channel_payment();
}

// .com.elarian.hera.proto.CheckoutPaymentSimulatorNotification checkout_payment = 5;
inline bool ServerToSimulatorNotification::_internal_has_checkout_payment() const {
  return entry_case() == kCheckoutPayment;
}
inline bool ServerToSimulatorNotification::has_checkout_payment() const {
  return _internal_has_checkout_payment();
}
inline void ServerToSimulatorNotification::set_has_checkout_payment() {
  _oneof_case_[0] = kCheckoutPayment;
}
inline void ServerToSimulatorNotification::clear_checkout_payment() {
  if (_internal_has_checkout_payment()) {
    if (GetArena() == nullptr) {
      delete entry_.checkout_payment_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* ServerToSimulatorNotification::release_checkout_payment() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ServerToSimulatorNotification.checkout_payment)
  if (_internal_has_checkout_payment()) {
    clear_has_entry();
      ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* temp = entry_.checkout_payment_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.checkout_payment_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification& ServerToSimulatorNotification::_internal_checkout_payment() const {
  return _internal_has_checkout_payment()
      ? *entry_.checkout_payment_
      : reinterpret_cast< ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification&>(::com::elarian::hera::proto::_CheckoutPaymentSimulatorNotification_default_instance_);
}
inline const ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification& ServerToSimulatorNotification::checkout_payment() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ServerToSimulatorNotification.checkout_payment)
  return _internal_checkout_payment();
}
inline ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* ServerToSimulatorNotification::unsafe_arena_release_checkout_payment() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.ServerToSimulatorNotification.checkout_payment)
  if (_internal_has_checkout_payment()) {
    clear_has_entry();
    ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* temp = entry_.checkout_payment_;
    entry_.checkout_payment_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ServerToSimulatorNotification::unsafe_arena_set_allocated_checkout_payment(::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* checkout_payment) {
  clear_entry();
  if (checkout_payment) {
    set_has_checkout_payment();
    entry_.checkout_payment_ = checkout_payment;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ServerToSimulatorNotification.checkout_payment)
}
inline ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* ServerToSimulatorNotification::_internal_mutable_checkout_payment() {
  if (!_internal_has_checkout_payment()) {
    clear_entry();
    set_has_checkout_payment();
    entry_.checkout_payment_ = CreateMaybeMessage< ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification >(GetArena());
  }
  return entry_.checkout_payment_;
}
inline ::com::elarian::hera::proto::CheckoutPaymentSimulatorNotification* ServerToSimulatorNotification::mutable_checkout_payment() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ServerToSimulatorNotification.checkout_payment)
  return _internal_mutable_checkout_payment();
}

inline bool ServerToSimulatorNotification::has_entry() const {
  return entry_case() != ENTRY_NOT_SET;
}
inline void ServerToSimulatorNotification::clear_has_entry() {
  _oneof_case_[0] = ENTRY_NOT_SET;
}
inline ServerToSimulatorNotification::EntryCase ServerToSimulatorNotification::entry_case() const {
  return ServerToSimulatorNotification::EntryCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ServerToSimulatorNotificationReply

// -------------------------------------------------------------------

// SendMessageSimulatorNotification

// string org_id = 1;
inline void SendMessageSimulatorNotification::clear_org_id() {
  org_id_.ClearToEmpty();
}
inline const std::string& SendMessageSimulatorNotification::org_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendMessageSimulatorNotification.org_id)
  return _internal_org_id();
}
inline void SendMessageSimulatorNotification::set_org_id(const std::string& value) {
  _internal_set_org_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendMessageSimulatorNotification.org_id)
}
inline std::string* SendMessageSimulatorNotification::mutable_org_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendMessageSimulatorNotification.org_id)
  return _internal_mutable_org_id();
}
inline const std::string& SendMessageSimulatorNotification::_internal_org_id() const {
  return org_id_.Get();
}
inline void SendMessageSimulatorNotification::_internal_set_org_id(const std::string& value) {
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendMessageSimulatorNotification::set_org_id(std::string&& value) {
  
  org_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendMessageSimulatorNotification.org_id)
}
inline void SendMessageSimulatorNotification::set_org_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendMessageSimulatorNotification.org_id)
}
inline void SendMessageSimulatorNotification::set_org_id(const char* value,
    size_t size) {
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendMessageSimulatorNotification.org_id)
}
inline std::string* SendMessageSimulatorNotification::_internal_mutable_org_id() {
  
  return org_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendMessageSimulatorNotification::release_org_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendMessageSimulatorNotification.org_id)
  return org_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendMessageSimulatorNotification::set_allocated_org_id(std::string* org_id) {
  if (org_id != nullptr) {
    
  } else {
    
  }
  org_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), org_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendMessageSimulatorNotification.org_id)
}

// string customer_id = 2;
inline void SendMessageSimulatorNotification::clear_customer_id() {
  customer_id_.ClearToEmpty();
}
inline const std::string& SendMessageSimulatorNotification::customer_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_id)
  return _internal_customer_id();
}
inline void SendMessageSimulatorNotification::set_customer_id(const std::string& value) {
  _internal_set_customer_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_id)
}
inline std::string* SendMessageSimulatorNotification::mutable_customer_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_id)
  return _internal_mutable_customer_id();
}
inline const std::string& SendMessageSimulatorNotification::_internal_customer_id() const {
  return customer_id_.Get();
}
inline void SendMessageSimulatorNotification::_internal_set_customer_id(const std::string& value) {
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendMessageSimulatorNotification::set_customer_id(std::string&& value) {
  
  customer_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_id)
}
inline void SendMessageSimulatorNotification::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_id)
}
inline void SendMessageSimulatorNotification::set_customer_id(const char* value,
    size_t size) {
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_id)
}
inline std::string* SendMessageSimulatorNotification::_internal_mutable_customer_id() {
  
  return customer_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendMessageSimulatorNotification::release_customer_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_id)
  return customer_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendMessageSimulatorNotification::set_allocated_customer_id(std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), customer_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_id)
}

// string message_id = 3;
inline void SendMessageSimulatorNotification::clear_message_id() {
  message_id_.ClearToEmpty();
}
inline const std::string& SendMessageSimulatorNotification::message_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendMessageSimulatorNotification.message_id)
  return _internal_message_id();
}
inline void SendMessageSimulatorNotification::set_message_id(const std::string& value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendMessageSimulatorNotification.message_id)
}
inline std::string* SendMessageSimulatorNotification::mutable_message_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendMessageSimulatorNotification.message_id)
  return _internal_mutable_message_id();
}
inline const std::string& SendMessageSimulatorNotification::_internal_message_id() const {
  return message_id_.Get();
}
inline void SendMessageSimulatorNotification::_internal_set_message_id(const std::string& value) {
  
  message_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendMessageSimulatorNotification::set_message_id(std::string&& value) {
  
  message_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendMessageSimulatorNotification.message_id)
}
inline void SendMessageSimulatorNotification::set_message_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendMessageSimulatorNotification.message_id)
}
inline void SendMessageSimulatorNotification::set_message_id(const char* value,
    size_t size) {
  
  message_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendMessageSimulatorNotification.message_id)
}
inline std::string* SendMessageSimulatorNotification::_internal_mutable_message_id() {
  
  return message_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendMessageSimulatorNotification::release_message_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendMessageSimulatorNotification.message_id)
  return message_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendMessageSimulatorNotification::set_allocated_message_id(std::string* message_id) {
  if (message_id != nullptr) {
    
  } else {
    
  }
  message_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendMessageSimulatorNotification.message_id)
}

// .com.elarian.hera.proto.CustomerNumber customer_number = 4;
inline bool SendMessageSimulatorNotification::_internal_has_customer_number() const {
  return this != internal_default_instance() && customer_number_ != nullptr;
}
inline bool SendMessageSimulatorNotification::has_customer_number() const {
  return _internal_has_customer_number();
}
inline const ::com::elarian::hera::proto::CustomerNumber& SendMessageSimulatorNotification::_internal_customer_number() const {
  const ::com::elarian::hera::proto::CustomerNumber* p = customer_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::CustomerNumber&>(
      ::com::elarian::hera::proto::_CustomerNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::CustomerNumber& SendMessageSimulatorNotification::customer_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_number)
  return _internal_customer_number();
}
inline void SendMessageSimulatorNotification::unsafe_arena_set_allocated_customer_number(
    ::com::elarian::hera::proto::CustomerNumber* customer_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number_);
  }
  customer_number_ = customer_number;
  if (customer_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_number)
}
inline ::com::elarian::hera::proto::CustomerNumber* SendMessageSimulatorNotification::release_customer_number() {
  
  ::com::elarian::hera::proto::CustomerNumber* temp = customer_number_;
  customer_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::CustomerNumber* SendMessageSimulatorNotification::unsafe_arena_release_customer_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_number)
  
  ::com::elarian::hera::proto::CustomerNumber* temp = customer_number_;
  customer_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::CustomerNumber* SendMessageSimulatorNotification::_internal_mutable_customer_number() {
  
  if (customer_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::CustomerNumber>(GetArena());
    customer_number_ = p;
  }
  return customer_number_;
}
inline ::com::elarian::hera::proto::CustomerNumber* SendMessageSimulatorNotification::mutable_customer_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_number)
  return _internal_mutable_customer_number();
}
inline void SendMessageSimulatorNotification::set_allocated_customer_number(::com::elarian::hera::proto::CustomerNumber* customer_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number_);
  }
  if (customer_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number)->GetArena();
    if (message_arena != submessage_arena) {
      customer_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, customer_number, submessage_arena);
    }
    
  } else {
    
  }
  customer_number_ = customer_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendMessageSimulatorNotification.customer_number)
}

// .com.elarian.hera.proto.MessagingChannelNumber channel_number = 5;
inline bool SendMessageSimulatorNotification::_internal_has_channel_number() const {
  return this != internal_default_instance() && channel_number_ != nullptr;
}
inline bool SendMessageSimulatorNotification::has_channel_number() const {
  return _internal_has_channel_number();
}
inline const ::com::elarian::hera::proto::MessagingChannelNumber& SendMessageSimulatorNotification::_internal_channel_number() const {
  const ::com::elarian::hera::proto::MessagingChannelNumber* p = channel_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::MessagingChannelNumber&>(
      ::com::elarian::hera::proto::_MessagingChannelNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::MessagingChannelNumber& SendMessageSimulatorNotification::channel_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendMessageSimulatorNotification.channel_number)
  return _internal_channel_number();
}
inline void SendMessageSimulatorNotification::unsafe_arena_set_allocated_channel_number(
    ::com::elarian::hera::proto::MessagingChannelNumber* channel_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  channel_number_ = channel_number;
  if (channel_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendMessageSimulatorNotification.channel_number)
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* SendMessageSimulatorNotification::release_channel_number() {
  
  ::com::elarian::hera::proto::MessagingChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* SendMessageSimulatorNotification::unsafe_arena_release_channel_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendMessageSimulatorNotification.channel_number)
  
  ::com::elarian::hera::proto::MessagingChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* SendMessageSimulatorNotification::_internal_mutable_channel_number() {
  
  if (channel_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::MessagingChannelNumber>(GetArena());
    channel_number_ = p;
  }
  return channel_number_;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* SendMessageSimulatorNotification::mutable_channel_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendMessageSimulatorNotification.channel_number)
  return _internal_mutable_channel_number();
}
inline void SendMessageSimulatorNotification::set_allocated_channel_number(::com::elarian::hera::proto::MessagingChannelNumber* channel_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  if (channel_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number)->GetArena();
    if (message_arena != submessage_arena) {
      channel_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel_number, submessage_arena);
    }
    
  } else {
    
  }
  channel_number_ = channel_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendMessageSimulatorNotification.channel_number)
}

// .com.elarian.hera.proto.OutboundMessage message = 6;
inline bool SendMessageSimulatorNotification::_internal_has_message() const {
  return this != internal_default_instance() && message_ != nullptr;
}
inline bool SendMessageSimulatorNotification::has_message() const {
  return _internal_has_message();
}
inline const ::com::elarian::hera::proto::OutboundMessage& SendMessageSimulatorNotification::_internal_message() const {
  const ::com::elarian::hera::proto::OutboundMessage* p = message_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::OutboundMessage&>(
      ::com::elarian::hera::proto::_OutboundMessage_default_instance_);
}
inline const ::com::elarian::hera::proto::OutboundMessage& SendMessageSimulatorNotification::message() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendMessageSimulatorNotification.message)
  return _internal_message();
}
inline void SendMessageSimulatorNotification::unsafe_arena_set_allocated_message(
    ::com::elarian::hera::proto::OutboundMessage* message) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(message_);
  }
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendMessageSimulatorNotification.message)
}
inline ::com::elarian::hera::proto::OutboundMessage* SendMessageSimulatorNotification::release_message() {
  
  ::com::elarian::hera::proto::OutboundMessage* temp = message_;
  message_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::OutboundMessage* SendMessageSimulatorNotification::unsafe_arena_release_message() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendMessageSimulatorNotification.message)
  
  ::com::elarian::hera::proto::OutboundMessage* temp = message_;
  message_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::OutboundMessage* SendMessageSimulatorNotification::_internal_mutable_message() {
  
  if (message_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::OutboundMessage>(GetArena());
    message_ = p;
  }
  return message_;
}
inline ::com::elarian::hera::proto::OutboundMessage* SendMessageSimulatorNotification::mutable_message() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendMessageSimulatorNotification.message)
  return _internal_mutable_message();
}
inline void SendMessageSimulatorNotification::set_allocated_message(::com::elarian::hera::proto::OutboundMessage* message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(message_);
  }
  if (message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(message)->GetArena();
    if (message_arena != submessage_arena) {
      message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    
  } else {
    
  }
  message_ = message;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendMessageSimulatorNotification.message)
}

// -------------------------------------------------------------------

// MakeVoiceCallSimulatorNotification

// string org_id = 1;
inline void MakeVoiceCallSimulatorNotification::clear_org_id() {
  org_id_.ClearToEmpty();
}
inline const std::string& MakeVoiceCallSimulatorNotification::org_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.org_id)
  return _internal_org_id();
}
inline void MakeVoiceCallSimulatorNotification::set_org_id(const std::string& value) {
  _internal_set_org_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.org_id)
}
inline std::string* MakeVoiceCallSimulatorNotification::mutable_org_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.org_id)
  return _internal_mutable_org_id();
}
inline const std::string& MakeVoiceCallSimulatorNotification::_internal_org_id() const {
  return org_id_.Get();
}
inline void MakeVoiceCallSimulatorNotification::_internal_set_org_id(const std::string& value) {
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MakeVoiceCallSimulatorNotification::set_org_id(std::string&& value) {
  
  org_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.org_id)
}
inline void MakeVoiceCallSimulatorNotification::set_org_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.org_id)
}
inline void MakeVoiceCallSimulatorNotification::set_org_id(const char* value,
    size_t size) {
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.org_id)
}
inline std::string* MakeVoiceCallSimulatorNotification::_internal_mutable_org_id() {
  
  return org_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MakeVoiceCallSimulatorNotification::release_org_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.org_id)
  return org_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MakeVoiceCallSimulatorNotification::set_allocated_org_id(std::string* org_id) {
  if (org_id != nullptr) {
    
  } else {
    
  }
  org_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), org_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.org_id)
}

// string customer_id = 2;
inline void MakeVoiceCallSimulatorNotification::clear_customer_id() {
  customer_id_.ClearToEmpty();
}
inline const std::string& MakeVoiceCallSimulatorNotification::customer_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_id)
  return _internal_customer_id();
}
inline void MakeVoiceCallSimulatorNotification::set_customer_id(const std::string& value) {
  _internal_set_customer_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_id)
}
inline std::string* MakeVoiceCallSimulatorNotification::mutable_customer_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_id)
  return _internal_mutable_customer_id();
}
inline const std::string& MakeVoiceCallSimulatorNotification::_internal_customer_id() const {
  return customer_id_.Get();
}
inline void MakeVoiceCallSimulatorNotification::_internal_set_customer_id(const std::string& value) {
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MakeVoiceCallSimulatorNotification::set_customer_id(std::string&& value) {
  
  customer_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_id)
}
inline void MakeVoiceCallSimulatorNotification::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_id)
}
inline void MakeVoiceCallSimulatorNotification::set_customer_id(const char* value,
    size_t size) {
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_id)
}
inline std::string* MakeVoiceCallSimulatorNotification::_internal_mutable_customer_id() {
  
  return customer_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MakeVoiceCallSimulatorNotification::release_customer_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_id)
  return customer_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MakeVoiceCallSimulatorNotification::set_allocated_customer_id(std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), customer_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_id)
}

// string session_id = 3;
inline void MakeVoiceCallSimulatorNotification::clear_session_id() {
  session_id_.ClearToEmpty();
}
inline const std::string& MakeVoiceCallSimulatorNotification::session_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.session_id)
  return _internal_session_id();
}
inline void MakeVoiceCallSimulatorNotification::set_session_id(const std::string& value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.session_id)
}
inline std::string* MakeVoiceCallSimulatorNotification::mutable_session_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.session_id)
  return _internal_mutable_session_id();
}
inline const std::string& MakeVoiceCallSimulatorNotification::_internal_session_id() const {
  return session_id_.Get();
}
inline void MakeVoiceCallSimulatorNotification::_internal_set_session_id(const std::string& value) {
  
  session_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MakeVoiceCallSimulatorNotification::set_session_id(std::string&& value) {
  
  session_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.session_id)
}
inline void MakeVoiceCallSimulatorNotification::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  session_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.session_id)
}
inline void MakeVoiceCallSimulatorNotification::set_session_id(const char* value,
    size_t size) {
  
  session_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.session_id)
}
inline std::string* MakeVoiceCallSimulatorNotification::_internal_mutable_session_id() {
  
  return session_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MakeVoiceCallSimulatorNotification::release_session_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.session_id)
  return session_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MakeVoiceCallSimulatorNotification::set_allocated_session_id(std::string* session_id) {
  if (session_id != nullptr) {
    
  } else {
    
  }
  session_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), session_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.session_id)
}

// .com.elarian.hera.proto.CustomerNumber customer_number = 4;
inline bool MakeVoiceCallSimulatorNotification::_internal_has_customer_number() const {
  return this != internal_default_instance() && customer_number_ != nullptr;
}
inline bool MakeVoiceCallSimulatorNotification::has_customer_number() const {
  return _internal_has_customer_number();
}
inline const ::com::elarian::hera::proto::CustomerNumber& MakeVoiceCallSimulatorNotification::_internal_customer_number() const {
  const ::com::elarian::hera::proto::CustomerNumber* p = customer_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::CustomerNumber&>(
      ::com::elarian::hera::proto::_CustomerNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::CustomerNumber& MakeVoiceCallSimulatorNotification::customer_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_number)
  return _internal_customer_number();
}
inline void MakeVoiceCallSimulatorNotification::unsafe_arena_set_allocated_customer_number(
    ::com::elarian::hera::proto::CustomerNumber* customer_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number_);
  }
  customer_number_ = customer_number;
  if (customer_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_number)
}
inline ::com::elarian::hera::proto::CustomerNumber* MakeVoiceCallSimulatorNotification::release_customer_number() {
  
  ::com::elarian::hera::proto::CustomerNumber* temp = customer_number_;
  customer_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::CustomerNumber* MakeVoiceCallSimulatorNotification::unsafe_arena_release_customer_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_number)
  
  ::com::elarian::hera::proto::CustomerNumber* temp = customer_number_;
  customer_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::CustomerNumber* MakeVoiceCallSimulatorNotification::_internal_mutable_customer_number() {
  
  if (customer_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::CustomerNumber>(GetArena());
    customer_number_ = p;
  }
  return customer_number_;
}
inline ::com::elarian::hera::proto::CustomerNumber* MakeVoiceCallSimulatorNotification::mutable_customer_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_number)
  return _internal_mutable_customer_number();
}
inline void MakeVoiceCallSimulatorNotification::set_allocated_customer_number(::com::elarian::hera::proto::CustomerNumber* customer_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number_);
  }
  if (customer_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number)->GetArena();
    if (message_arena != submessage_arena) {
      customer_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, customer_number, submessage_arena);
    }
    
  } else {
    
  }
  customer_number_ = customer_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_number)
}

// .com.elarian.hera.proto.MessagingChannelNumber channel_number = 5;
inline bool MakeVoiceCallSimulatorNotification::_internal_has_channel_number() const {
  return this != internal_default_instance() && channel_number_ != nullptr;
}
inline bool MakeVoiceCallSimulatorNotification::has_channel_number() const {
  return _internal_has_channel_number();
}
inline const ::com::elarian::hera::proto::MessagingChannelNumber& MakeVoiceCallSimulatorNotification::_internal_channel_number() const {
  const ::com::elarian::hera::proto::MessagingChannelNumber* p = channel_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::MessagingChannelNumber&>(
      ::com::elarian::hera::proto::_MessagingChannelNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::MessagingChannelNumber& MakeVoiceCallSimulatorNotification::channel_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.channel_number)
  return _internal_channel_number();
}
inline void MakeVoiceCallSimulatorNotification::unsafe_arena_set_allocated_channel_number(
    ::com::elarian::hera::proto::MessagingChannelNumber* channel_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  channel_number_ = channel_number;
  if (channel_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.channel_number)
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* MakeVoiceCallSimulatorNotification::release_channel_number() {
  
  ::com::elarian::hera::proto::MessagingChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* MakeVoiceCallSimulatorNotification::unsafe_arena_release_channel_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.channel_number)
  
  ::com::elarian::hera::proto::MessagingChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* MakeVoiceCallSimulatorNotification::_internal_mutable_channel_number() {
  
  if (channel_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::MessagingChannelNumber>(GetArena());
    channel_number_ = p;
  }
  return channel_number_;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* MakeVoiceCallSimulatorNotification::mutable_channel_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.channel_number)
  return _internal_mutable_channel_number();
}
inline void MakeVoiceCallSimulatorNotification::set_allocated_channel_number(::com::elarian::hera::proto::MessagingChannelNumber* channel_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  if (channel_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number)->GetArena();
    if (message_arena != submessage_arena) {
      channel_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel_number, submessage_arena);
    }
    
  } else {
    
  }
  channel_number_ = channel_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.channel_number)
}

// -------------------------------------------------------------------

// SendCustomerPaymentSimulatorNotification

// string org_id = 1;
inline void SendCustomerPaymentSimulatorNotification::clear_org_id() {
  org_id_.ClearToEmpty();
}
inline const std::string& SendCustomerPaymentSimulatorNotification::org_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.org_id)
  return _internal_org_id();
}
inline void SendCustomerPaymentSimulatorNotification::set_org_id(const std::string& value) {
  _internal_set_org_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.org_id)
}
inline std::string* SendCustomerPaymentSimulatorNotification::mutable_org_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.org_id)
  return _internal_mutable_org_id();
}
inline const std::string& SendCustomerPaymentSimulatorNotification::_internal_org_id() const {
  return org_id_.Get();
}
inline void SendCustomerPaymentSimulatorNotification::_internal_set_org_id(const std::string& value) {
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendCustomerPaymentSimulatorNotification::set_org_id(std::string&& value) {
  
  org_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.org_id)
}
inline void SendCustomerPaymentSimulatorNotification::set_org_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.org_id)
}
inline void SendCustomerPaymentSimulatorNotification::set_org_id(const char* value,
    size_t size) {
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.org_id)
}
inline std::string* SendCustomerPaymentSimulatorNotification::_internal_mutable_org_id() {
  
  return org_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendCustomerPaymentSimulatorNotification::release_org_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.org_id)
  return org_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendCustomerPaymentSimulatorNotification::set_allocated_org_id(std::string* org_id) {
  if (org_id != nullptr) {
    
  } else {
    
  }
  org_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), org_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.org_id)
}

// string customer_id = 2;
inline void SendCustomerPaymentSimulatorNotification::clear_customer_id() {
  customer_id_.ClearToEmpty();
}
inline const std::string& SendCustomerPaymentSimulatorNotification::customer_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_id)
  return _internal_customer_id();
}
inline void SendCustomerPaymentSimulatorNotification::set_customer_id(const std::string& value) {
  _internal_set_customer_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_id)
}
inline std::string* SendCustomerPaymentSimulatorNotification::mutable_customer_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_id)
  return _internal_mutable_customer_id();
}
inline const std::string& SendCustomerPaymentSimulatorNotification::_internal_customer_id() const {
  return customer_id_.Get();
}
inline void SendCustomerPaymentSimulatorNotification::_internal_set_customer_id(const std::string& value) {
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendCustomerPaymentSimulatorNotification::set_customer_id(std::string&& value) {
  
  customer_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_id)
}
inline void SendCustomerPaymentSimulatorNotification::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_id)
}
inline void SendCustomerPaymentSimulatorNotification::set_customer_id(const char* value,
    size_t size) {
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_id)
}
inline std::string* SendCustomerPaymentSimulatorNotification::_internal_mutable_customer_id() {
  
  return customer_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendCustomerPaymentSimulatorNotification::release_customer_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_id)
  return customer_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendCustomerPaymentSimulatorNotification::set_allocated_customer_id(std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), customer_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_id)
}

// string app_id = 3;
inline void SendCustomerPaymentSimulatorNotification::clear_app_id() {
  app_id_.ClearToEmpty();
}
inline const std::string& SendCustomerPaymentSimulatorNotification::app_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.app_id)
  return _internal_app_id();
}
inline void SendCustomerPaymentSimulatorNotification::set_app_id(const std::string& value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.app_id)
}
inline std::string* SendCustomerPaymentSimulatorNotification::mutable_app_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.app_id)
  return _internal_mutable_app_id();
}
inline const std::string& SendCustomerPaymentSimulatorNotification::_internal_app_id() const {
  return app_id_.Get();
}
inline void SendCustomerPaymentSimulatorNotification::_internal_set_app_id(const std::string& value) {
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendCustomerPaymentSimulatorNotification::set_app_id(std::string&& value) {
  
  app_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.app_id)
}
inline void SendCustomerPaymentSimulatorNotification::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.app_id)
}
inline void SendCustomerPaymentSimulatorNotification::set_app_id(const char* value,
    size_t size) {
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.app_id)
}
inline std::string* SendCustomerPaymentSimulatorNotification::_internal_mutable_app_id() {
  
  return app_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendCustomerPaymentSimulatorNotification::release_app_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.app_id)
  return app_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendCustomerPaymentSimulatorNotification::set_allocated_app_id(std::string* app_id) {
  if (app_id != nullptr) {
    
  } else {
    
  }
  app_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), app_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.app_id)
}

// .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 4;
inline bool SendCustomerPaymentSimulatorNotification::_internal_has_wallet() const {
  return debit_party_case() == kWallet;
}
inline bool SendCustomerPaymentSimulatorNotification::has_wallet() const {
  return _internal_has_wallet();
}
inline void SendCustomerPaymentSimulatorNotification::set_has_wallet() {
  _oneof_case_[0] = kWallet;
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* SendCustomerPaymentSimulatorNotification::release_wallet() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.wallet)
  if (_internal_has_wallet()) {
    clear_has_debit_party();
      ::com::elarian::hera::proto::PaymentWalletCounterParty* temp = debit_party_.wallet_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    debit_party_.wallet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::PaymentWalletCounterParty& SendCustomerPaymentSimulatorNotification::_internal_wallet() const {
  return _internal_has_wallet()
      ? *debit_party_.wallet_
      : reinterpret_cast< ::com::elarian::hera::proto::PaymentWalletCounterParty&>(::com::elarian::hera::proto::_PaymentWalletCounterParty_default_instance_);
}
inline const ::com::elarian::hera::proto::PaymentWalletCounterParty& SendCustomerPaymentSimulatorNotification::wallet() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.wallet)
  return _internal_wallet();
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* SendCustomerPaymentSimulatorNotification::unsafe_arena_release_wallet() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.wallet)
  if (_internal_has_wallet()) {
    clear_has_debit_party();
    ::com::elarian::hera::proto::PaymentWalletCounterParty* temp = debit_party_.wallet_;
    debit_party_.wallet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SendCustomerPaymentSimulatorNotification::unsafe_arena_set_allocated_wallet(::com::elarian::hera::proto::PaymentWalletCounterParty* wallet) {
  clear_debit_party();
  if (wallet) {
    set_has_wallet();
    debit_party_.wallet_ = wallet;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.wallet)
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* SendCustomerPaymentSimulatorNotification::_internal_mutable_wallet() {
  if (!_internal_has_wallet()) {
    clear_debit_party();
    set_has_wallet();
    debit_party_.wallet_ = CreateMaybeMessage< ::com::elarian::hera::proto::PaymentWalletCounterParty >(GetArena());
  }
  return debit_party_.wallet_;
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* SendCustomerPaymentSimulatorNotification::mutable_wallet() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.wallet)
  return _internal_mutable_wallet();
}

// .com.elarian.hera.proto.PaymentPurseCounterParty purse = 5;
inline bool SendCustomerPaymentSimulatorNotification::_internal_has_purse() const {
  return debit_party_case() == kPurse;
}
inline bool SendCustomerPaymentSimulatorNotification::has_purse() const {
  return _internal_has_purse();
}
inline void SendCustomerPaymentSimulatorNotification::set_has_purse() {
  _oneof_case_[0] = kPurse;
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* SendCustomerPaymentSimulatorNotification::release_purse() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.purse)
  if (_internal_has_purse()) {
    clear_has_debit_party();
      ::com::elarian::hera::proto::PaymentPurseCounterParty* temp = debit_party_.purse_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    debit_party_.purse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::PaymentPurseCounterParty& SendCustomerPaymentSimulatorNotification::_internal_purse() const {
  return _internal_has_purse()
      ? *debit_party_.purse_
      : reinterpret_cast< ::com::elarian::hera::proto::PaymentPurseCounterParty&>(::com::elarian::hera::proto::_PaymentPurseCounterParty_default_instance_);
}
inline const ::com::elarian::hera::proto::PaymentPurseCounterParty& SendCustomerPaymentSimulatorNotification::purse() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.purse)
  return _internal_purse();
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* SendCustomerPaymentSimulatorNotification::unsafe_arena_release_purse() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.purse)
  if (_internal_has_purse()) {
    clear_has_debit_party();
    ::com::elarian::hera::proto::PaymentPurseCounterParty* temp = debit_party_.purse_;
    debit_party_.purse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SendCustomerPaymentSimulatorNotification::unsafe_arena_set_allocated_purse(::com::elarian::hera::proto::PaymentPurseCounterParty* purse) {
  clear_debit_party();
  if (purse) {
    set_has_purse();
    debit_party_.purse_ = purse;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.purse)
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* SendCustomerPaymentSimulatorNotification::_internal_mutable_purse() {
  if (!_internal_has_purse()) {
    clear_debit_party();
    set_has_purse();
    debit_party_.purse_ = CreateMaybeMessage< ::com::elarian::hera::proto::PaymentPurseCounterParty >(GetArena());
  }
  return debit_party_.purse_;
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* SendCustomerPaymentSimulatorNotification::mutable_purse() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.purse)
  return _internal_mutable_purse();
}

// string transaction_id = 6;
inline void SendCustomerPaymentSimulatorNotification::clear_transaction_id() {
  transaction_id_.ClearToEmpty();
}
inline const std::string& SendCustomerPaymentSimulatorNotification::transaction_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.transaction_id)
  return _internal_transaction_id();
}
inline void SendCustomerPaymentSimulatorNotification::set_transaction_id(const std::string& value) {
  _internal_set_transaction_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.transaction_id)
}
inline std::string* SendCustomerPaymentSimulatorNotification::mutable_transaction_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.transaction_id)
  return _internal_mutable_transaction_id();
}
inline const std::string& SendCustomerPaymentSimulatorNotification::_internal_transaction_id() const {
  return transaction_id_.Get();
}
inline void SendCustomerPaymentSimulatorNotification::_internal_set_transaction_id(const std::string& value) {
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendCustomerPaymentSimulatorNotification::set_transaction_id(std::string&& value) {
  
  transaction_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.transaction_id)
}
inline void SendCustomerPaymentSimulatorNotification::set_transaction_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.transaction_id)
}
inline void SendCustomerPaymentSimulatorNotification::set_transaction_id(const char* value,
    size_t size) {
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.transaction_id)
}
inline std::string* SendCustomerPaymentSimulatorNotification::_internal_mutable_transaction_id() {
  
  return transaction_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendCustomerPaymentSimulatorNotification::release_transaction_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.transaction_id)
  return transaction_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendCustomerPaymentSimulatorNotification::set_allocated_transaction_id(std::string* transaction_id) {
  if (transaction_id != nullptr) {
    
  } else {
    
  }
  transaction_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transaction_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.transaction_id)
}

// .com.elarian.hera.proto.CustomerNumber customer_number = 7;
inline bool SendCustomerPaymentSimulatorNotification::_internal_has_customer_number() const {
  return this != internal_default_instance() && customer_number_ != nullptr;
}
inline bool SendCustomerPaymentSimulatorNotification::has_customer_number() const {
  return _internal_has_customer_number();
}
inline const ::com::elarian::hera::proto::CustomerNumber& SendCustomerPaymentSimulatorNotification::_internal_customer_number() const {
  const ::com::elarian::hera::proto::CustomerNumber* p = customer_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::CustomerNumber&>(
      ::com::elarian::hera::proto::_CustomerNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::CustomerNumber& SendCustomerPaymentSimulatorNotification::customer_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_number)
  return _internal_customer_number();
}
inline void SendCustomerPaymentSimulatorNotification::unsafe_arena_set_allocated_customer_number(
    ::com::elarian::hera::proto::CustomerNumber* customer_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number_);
  }
  customer_number_ = customer_number;
  if (customer_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_number)
}
inline ::com::elarian::hera::proto::CustomerNumber* SendCustomerPaymentSimulatorNotification::release_customer_number() {
  
  ::com::elarian::hera::proto::CustomerNumber* temp = customer_number_;
  customer_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::CustomerNumber* SendCustomerPaymentSimulatorNotification::unsafe_arena_release_customer_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_number)
  
  ::com::elarian::hera::proto::CustomerNumber* temp = customer_number_;
  customer_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::CustomerNumber* SendCustomerPaymentSimulatorNotification::_internal_mutable_customer_number() {
  
  if (customer_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::CustomerNumber>(GetArena());
    customer_number_ = p;
  }
  return customer_number_;
}
inline ::com::elarian::hera::proto::CustomerNumber* SendCustomerPaymentSimulatorNotification::mutable_customer_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_number)
  return _internal_mutable_customer_number();
}
inline void SendCustomerPaymentSimulatorNotification::set_allocated_customer_number(::com::elarian::hera::proto::CustomerNumber* customer_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number_);
  }
  if (customer_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number)->GetArena();
    if (message_arena != submessage_arena) {
      customer_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, customer_number, submessage_arena);
    }
    
  } else {
    
  }
  customer_number_ = customer_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_number)
}

// .com.elarian.hera.proto.PaymentChannelNumber channel_number = 8;
inline bool SendCustomerPaymentSimulatorNotification::_internal_has_channel_number() const {
  return this != internal_default_instance() && channel_number_ != nullptr;
}
inline bool SendCustomerPaymentSimulatorNotification::has_channel_number() const {
  return _internal_has_channel_number();
}
inline const ::com::elarian::hera::proto::PaymentChannelNumber& SendCustomerPaymentSimulatorNotification::_internal_channel_number() const {
  const ::com::elarian::hera::proto::PaymentChannelNumber* p = channel_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::PaymentChannelNumber&>(
      ::com::elarian::hera::proto::_PaymentChannelNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::PaymentChannelNumber& SendCustomerPaymentSimulatorNotification::channel_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.channel_number)
  return _internal_channel_number();
}
inline void SendCustomerPaymentSimulatorNotification::unsafe_arena_set_allocated_channel_number(
    ::com::elarian::hera::proto::PaymentChannelNumber* channel_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  channel_number_ = channel_number;
  if (channel_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.channel_number)
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* SendCustomerPaymentSimulatorNotification::release_channel_number() {
  
  ::com::elarian::hera::proto::PaymentChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* SendCustomerPaymentSimulatorNotification::unsafe_arena_release_channel_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.channel_number)
  
  ::com::elarian::hera::proto::PaymentChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* SendCustomerPaymentSimulatorNotification::_internal_mutable_channel_number() {
  
  if (channel_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::PaymentChannelNumber>(GetArena());
    channel_number_ = p;
  }
  return channel_number_;
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* SendCustomerPaymentSimulatorNotification::mutable_channel_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.channel_number)
  return _internal_mutable_channel_number();
}
inline void SendCustomerPaymentSimulatorNotification::set_allocated_channel_number(::com::elarian::hera::proto::PaymentChannelNumber* channel_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  if (channel_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number)->GetArena();
    if (message_arena != submessage_arena) {
      channel_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel_number, submessage_arena);
    }
    
  } else {
    
  }
  channel_number_ = channel_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.channel_number)
}

// .com.elarian.hera.proto.Cash value = 9;
inline bool SendCustomerPaymentSimulatorNotification::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool SendCustomerPaymentSimulatorNotification::has_value() const {
  return _internal_has_value();
}
inline const ::com::elarian::hera::proto::Cash& SendCustomerPaymentSimulatorNotification::_internal_value() const {
  const ::com::elarian::hera::proto::Cash* p = value_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::Cash&>(
      ::com::elarian::hera::proto::_Cash_default_instance_);
}
inline const ::com::elarian::hera::proto::Cash& SendCustomerPaymentSimulatorNotification::value() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.value)
  return _internal_value();
}
inline void SendCustomerPaymentSimulatorNotification::unsafe_arena_set_allocated_value(
    ::com::elarian::hera::proto::Cash* value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.value)
}
inline ::com::elarian::hera::proto::Cash* SendCustomerPaymentSimulatorNotification::release_value() {
  
  ::com::elarian::hera::proto::Cash* temp = value_;
  value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::Cash* SendCustomerPaymentSimulatorNotification::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.value)
  
  ::com::elarian::hera::proto::Cash* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::Cash* SendCustomerPaymentSimulatorNotification::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::Cash>(GetArena());
    value_ = p;
  }
  return value_;
}
inline ::com::elarian::hera::proto::Cash* SendCustomerPaymentSimulatorNotification::mutable_value() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.value)
  return _internal_mutable_value();
}
inline void SendCustomerPaymentSimulatorNotification::set_allocated_value(::com::elarian::hera::proto::Cash* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.value)
}

inline bool SendCustomerPaymentSimulatorNotification::has_debit_party() const {
  return debit_party_case() != DEBIT_PARTY_NOT_SET;
}
inline void SendCustomerPaymentSimulatorNotification::clear_has_debit_party() {
  _oneof_case_[0] = DEBIT_PARTY_NOT_SET;
}
inline SendCustomerPaymentSimulatorNotification::DebitPartyCase SendCustomerPaymentSimulatorNotification::debit_party_case() const {
  return SendCustomerPaymentSimulatorNotification::DebitPartyCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SendChannelPaymentSimulatorNotification

// string org_id = 1;
inline void SendChannelPaymentSimulatorNotification::clear_org_id() {
  org_id_.ClearToEmpty();
}
inline const std::string& SendChannelPaymentSimulatorNotification::org_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.org_id)
  return _internal_org_id();
}
inline void SendChannelPaymentSimulatorNotification::set_org_id(const std::string& value) {
  _internal_set_org_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.org_id)
}
inline std::string* SendChannelPaymentSimulatorNotification::mutable_org_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.org_id)
  return _internal_mutable_org_id();
}
inline const std::string& SendChannelPaymentSimulatorNotification::_internal_org_id() const {
  return org_id_.Get();
}
inline void SendChannelPaymentSimulatorNotification::_internal_set_org_id(const std::string& value) {
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendChannelPaymentSimulatorNotification::set_org_id(std::string&& value) {
  
  org_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.org_id)
}
inline void SendChannelPaymentSimulatorNotification::set_org_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.org_id)
}
inline void SendChannelPaymentSimulatorNotification::set_org_id(const char* value,
    size_t size) {
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.org_id)
}
inline std::string* SendChannelPaymentSimulatorNotification::_internal_mutable_org_id() {
  
  return org_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendChannelPaymentSimulatorNotification::release_org_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.org_id)
  return org_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendChannelPaymentSimulatorNotification::set_allocated_org_id(std::string* org_id) {
  if (org_id != nullptr) {
    
  } else {
    
  }
  org_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), org_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.org_id)
}

// string app_id = 2;
inline void SendChannelPaymentSimulatorNotification::clear_app_id() {
  app_id_.ClearToEmpty();
}
inline const std::string& SendChannelPaymentSimulatorNotification::app_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.app_id)
  return _internal_app_id();
}
inline void SendChannelPaymentSimulatorNotification::set_app_id(const std::string& value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.app_id)
}
inline std::string* SendChannelPaymentSimulatorNotification::mutable_app_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.app_id)
  return _internal_mutable_app_id();
}
inline const std::string& SendChannelPaymentSimulatorNotification::_internal_app_id() const {
  return app_id_.Get();
}
inline void SendChannelPaymentSimulatorNotification::_internal_set_app_id(const std::string& value) {
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendChannelPaymentSimulatorNotification::set_app_id(std::string&& value) {
  
  app_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.app_id)
}
inline void SendChannelPaymentSimulatorNotification::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.app_id)
}
inline void SendChannelPaymentSimulatorNotification::set_app_id(const char* value,
    size_t size) {
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.app_id)
}
inline std::string* SendChannelPaymentSimulatorNotification::_internal_mutable_app_id() {
  
  return app_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendChannelPaymentSimulatorNotification::release_app_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.app_id)
  return app_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendChannelPaymentSimulatorNotification::set_allocated_app_id(std::string* app_id) {
  if (app_id != nullptr) {
    
  } else {
    
  }
  app_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), app_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.app_id)
}

// .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 3;
inline bool SendChannelPaymentSimulatorNotification::_internal_has_wallet() const {
  return debit_party_case() == kWallet;
}
inline bool SendChannelPaymentSimulatorNotification::has_wallet() const {
  return _internal_has_wallet();
}
inline void SendChannelPaymentSimulatorNotification::set_has_wallet() {
  _oneof_case_[0] = kWallet;
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* SendChannelPaymentSimulatorNotification::release_wallet() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.wallet)
  if (_internal_has_wallet()) {
    clear_has_debit_party();
      ::com::elarian::hera::proto::PaymentWalletCounterParty* temp = debit_party_.wallet_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    debit_party_.wallet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::PaymentWalletCounterParty& SendChannelPaymentSimulatorNotification::_internal_wallet() const {
  return _internal_has_wallet()
      ? *debit_party_.wallet_
      : reinterpret_cast< ::com::elarian::hera::proto::PaymentWalletCounterParty&>(::com::elarian::hera::proto::_PaymentWalletCounterParty_default_instance_);
}
inline const ::com::elarian::hera::proto::PaymentWalletCounterParty& SendChannelPaymentSimulatorNotification::wallet() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.wallet)
  return _internal_wallet();
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* SendChannelPaymentSimulatorNotification::unsafe_arena_release_wallet() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.wallet)
  if (_internal_has_wallet()) {
    clear_has_debit_party();
    ::com::elarian::hera::proto::PaymentWalletCounterParty* temp = debit_party_.wallet_;
    debit_party_.wallet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SendChannelPaymentSimulatorNotification::unsafe_arena_set_allocated_wallet(::com::elarian::hera::proto::PaymentWalletCounterParty* wallet) {
  clear_debit_party();
  if (wallet) {
    set_has_wallet();
    debit_party_.wallet_ = wallet;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.wallet)
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* SendChannelPaymentSimulatorNotification::_internal_mutable_wallet() {
  if (!_internal_has_wallet()) {
    clear_debit_party();
    set_has_wallet();
    debit_party_.wallet_ = CreateMaybeMessage< ::com::elarian::hera::proto::PaymentWalletCounterParty >(GetArena());
  }
  return debit_party_.wallet_;
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* SendChannelPaymentSimulatorNotification::mutable_wallet() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.wallet)
  return _internal_mutable_wallet();
}

// .com.elarian.hera.proto.PaymentPurseCounterParty purse = 4;
inline bool SendChannelPaymentSimulatorNotification::_internal_has_purse() const {
  return debit_party_case() == kPurse;
}
inline bool SendChannelPaymentSimulatorNotification::has_purse() const {
  return _internal_has_purse();
}
inline void SendChannelPaymentSimulatorNotification::set_has_purse() {
  _oneof_case_[0] = kPurse;
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* SendChannelPaymentSimulatorNotification::release_purse() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.purse)
  if (_internal_has_purse()) {
    clear_has_debit_party();
      ::com::elarian::hera::proto::PaymentPurseCounterParty* temp = debit_party_.purse_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    debit_party_.purse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::PaymentPurseCounterParty& SendChannelPaymentSimulatorNotification::_internal_purse() const {
  return _internal_has_purse()
      ? *debit_party_.purse_
      : reinterpret_cast< ::com::elarian::hera::proto::PaymentPurseCounterParty&>(::com::elarian::hera::proto::_PaymentPurseCounterParty_default_instance_);
}
inline const ::com::elarian::hera::proto::PaymentPurseCounterParty& SendChannelPaymentSimulatorNotification::purse() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.purse)
  return _internal_purse();
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* SendChannelPaymentSimulatorNotification::unsafe_arena_release_purse() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.purse)
  if (_internal_has_purse()) {
    clear_has_debit_party();
    ::com::elarian::hera::proto::PaymentPurseCounterParty* temp = debit_party_.purse_;
    debit_party_.purse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SendChannelPaymentSimulatorNotification::unsafe_arena_set_allocated_purse(::com::elarian::hera::proto::PaymentPurseCounterParty* purse) {
  clear_debit_party();
  if (purse) {
    set_has_purse();
    debit_party_.purse_ = purse;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.purse)
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* SendChannelPaymentSimulatorNotification::_internal_mutable_purse() {
  if (!_internal_has_purse()) {
    clear_debit_party();
    set_has_purse();
    debit_party_.purse_ = CreateMaybeMessage< ::com::elarian::hera::proto::PaymentPurseCounterParty >(GetArena());
  }
  return debit_party_.purse_;
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* SendChannelPaymentSimulatorNotification::mutable_purse() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.purse)
  return _internal_mutable_purse();
}

// string transaction_id = 5;
inline void SendChannelPaymentSimulatorNotification::clear_transaction_id() {
  transaction_id_.ClearToEmpty();
}
inline const std::string& SendChannelPaymentSimulatorNotification::transaction_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.transaction_id)
  return _internal_transaction_id();
}
inline void SendChannelPaymentSimulatorNotification::set_transaction_id(const std::string& value) {
  _internal_set_transaction_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.transaction_id)
}
inline std::string* SendChannelPaymentSimulatorNotification::mutable_transaction_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.transaction_id)
  return _internal_mutable_transaction_id();
}
inline const std::string& SendChannelPaymentSimulatorNotification::_internal_transaction_id() const {
  return transaction_id_.Get();
}
inline void SendChannelPaymentSimulatorNotification::_internal_set_transaction_id(const std::string& value) {
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendChannelPaymentSimulatorNotification::set_transaction_id(std::string&& value) {
  
  transaction_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.transaction_id)
}
inline void SendChannelPaymentSimulatorNotification::set_transaction_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.transaction_id)
}
inline void SendChannelPaymentSimulatorNotification::set_transaction_id(const char* value,
    size_t size) {
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.transaction_id)
}
inline std::string* SendChannelPaymentSimulatorNotification::_internal_mutable_transaction_id() {
  
  return transaction_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendChannelPaymentSimulatorNotification::release_transaction_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.transaction_id)
  return transaction_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendChannelPaymentSimulatorNotification::set_allocated_transaction_id(std::string* transaction_id) {
  if (transaction_id != nullptr) {
    
  } else {
    
  }
  transaction_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transaction_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.transaction_id)
}

// .com.elarian.hera.proto.PaymentChannel channel = 6;
inline void SendChannelPaymentSimulatorNotification::clear_channel() {
  channel_ = 0;
}
inline ::com::elarian::hera::proto::PaymentChannel SendChannelPaymentSimulatorNotification::_internal_channel() const {
  return static_cast< ::com::elarian::hera::proto::PaymentChannel >(channel_);
}
inline ::com::elarian::hera::proto::PaymentChannel SendChannelPaymentSimulatorNotification::channel() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.channel)
  return _internal_channel();
}
inline void SendChannelPaymentSimulatorNotification::_internal_set_channel(::com::elarian::hera::proto::PaymentChannel value) {
  
  channel_ = value;
}
inline void SendChannelPaymentSimulatorNotification::set_channel(::com::elarian::hera::proto::PaymentChannel value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.channel)
}

// string source = 7;
inline void SendChannelPaymentSimulatorNotification::clear_source() {
  source_.ClearToEmpty();
}
inline const std::string& SendChannelPaymentSimulatorNotification::source() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.source)
  return _internal_source();
}
inline void SendChannelPaymentSimulatorNotification::set_source(const std::string& value) {
  _internal_set_source(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.source)
}
inline std::string* SendChannelPaymentSimulatorNotification::mutable_source() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.source)
  return _internal_mutable_source();
}
inline const std::string& SendChannelPaymentSimulatorNotification::_internal_source() const {
  return source_.Get();
}
inline void SendChannelPaymentSimulatorNotification::_internal_set_source(const std::string& value) {
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendChannelPaymentSimulatorNotification::set_source(std::string&& value) {
  
  source_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.source)
}
inline void SendChannelPaymentSimulatorNotification::set_source(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.source)
}
inline void SendChannelPaymentSimulatorNotification::set_source(const char* value,
    size_t size) {
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.source)
}
inline std::string* SendChannelPaymentSimulatorNotification::_internal_mutable_source() {
  
  return source_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendChannelPaymentSimulatorNotification::release_source() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.source)
  return source_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendChannelPaymentSimulatorNotification::set_allocated_source(std::string* source) {
  if (source != nullptr) {
    
  } else {
    
  }
  source_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), source,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.source)
}

// string destination = 8;
inline void SendChannelPaymentSimulatorNotification::clear_destination() {
  destination_.ClearToEmpty();
}
inline const std::string& SendChannelPaymentSimulatorNotification::destination() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.destination)
  return _internal_destination();
}
inline void SendChannelPaymentSimulatorNotification::set_destination(const std::string& value) {
  _internal_set_destination(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.destination)
}
inline std::string* SendChannelPaymentSimulatorNotification::mutable_destination() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.destination)
  return _internal_mutable_destination();
}
inline const std::string& SendChannelPaymentSimulatorNotification::_internal_destination() const {
  return destination_.Get();
}
inline void SendChannelPaymentSimulatorNotification::_internal_set_destination(const std::string& value) {
  
  destination_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SendChannelPaymentSimulatorNotification::set_destination(std::string&& value) {
  
  destination_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.destination)
}
inline void SendChannelPaymentSimulatorNotification::set_destination(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  destination_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.destination)
}
inline void SendChannelPaymentSimulatorNotification::set_destination(const char* value,
    size_t size) {
  
  destination_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.destination)
}
inline std::string* SendChannelPaymentSimulatorNotification::_internal_mutable_destination() {
  
  return destination_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SendChannelPaymentSimulatorNotification::release_destination() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.destination)
  return destination_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SendChannelPaymentSimulatorNotification::set_allocated_destination(std::string* destination) {
  if (destination != nullptr) {
    
  } else {
    
  }
  destination_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), destination,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.destination)
}

// .google.protobuf.StringValue account = 9;
inline bool SendChannelPaymentSimulatorNotification::_internal_has_account() const {
  return this != internal_default_instance() && account_ != nullptr;
}
inline bool SendChannelPaymentSimulatorNotification::has_account() const {
  return _internal_has_account();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& SendChannelPaymentSimulatorNotification::_internal_account() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = account_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& SendChannelPaymentSimulatorNotification::account() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.account)
  return _internal_account();
}
inline void SendChannelPaymentSimulatorNotification::unsafe_arena_set_allocated_account(
    PROTOBUF_NAMESPACE_ID::StringValue* account) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_);
  }
  account_ = account;
  if (account) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.account)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* SendChannelPaymentSimulatorNotification::release_account() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = account_;
  account_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* SendChannelPaymentSimulatorNotification::unsafe_arena_release_account() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.account)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = account_;
  account_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* SendChannelPaymentSimulatorNotification::_internal_mutable_account() {
  
  if (account_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    account_ = p;
  }
  return account_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* SendChannelPaymentSimulatorNotification::mutable_account() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.account)
  return _internal_mutable_account();
}
inline void SendChannelPaymentSimulatorNotification::set_allocated_account(PROTOBUF_NAMESPACE_ID::StringValue* account) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_);
  }
  if (account) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(account)->GetArena();
    if (message_arena != submessage_arena) {
      account = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, account, submessage_arena);
    }
    
  } else {
    
  }
  account_ = account;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.account)
}

// .com.elarian.hera.proto.Cash value = 10;
inline bool SendChannelPaymentSimulatorNotification::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool SendChannelPaymentSimulatorNotification::has_value() const {
  return _internal_has_value();
}
inline const ::com::elarian::hera::proto::Cash& SendChannelPaymentSimulatorNotification::_internal_value() const {
  const ::com::elarian::hera::proto::Cash* p = value_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::Cash&>(
      ::com::elarian::hera::proto::_Cash_default_instance_);
}
inline const ::com::elarian::hera::proto::Cash& SendChannelPaymentSimulatorNotification::value() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.value)
  return _internal_value();
}
inline void SendChannelPaymentSimulatorNotification::unsafe_arena_set_allocated_value(
    ::com::elarian::hera::proto::Cash* value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.value)
}
inline ::com::elarian::hera::proto::Cash* SendChannelPaymentSimulatorNotification::release_value() {
  
  ::com::elarian::hera::proto::Cash* temp = value_;
  value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::Cash* SendChannelPaymentSimulatorNotification::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.value)
  
  ::com::elarian::hera::proto::Cash* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::Cash* SendChannelPaymentSimulatorNotification::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::Cash>(GetArena());
    value_ = p;
  }
  return value_;
}
inline ::com::elarian::hera::proto::Cash* SendChannelPaymentSimulatorNotification::mutable_value() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.value)
  return _internal_mutable_value();
}
inline void SendChannelPaymentSimulatorNotification::set_allocated_value(::com::elarian::hera::proto::Cash* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.value)
}

inline bool SendChannelPaymentSimulatorNotification::has_debit_party() const {
  return debit_party_case() != DEBIT_PARTY_NOT_SET;
}
inline void SendChannelPaymentSimulatorNotification::clear_has_debit_party() {
  _oneof_case_[0] = DEBIT_PARTY_NOT_SET;
}
inline SendChannelPaymentSimulatorNotification::DebitPartyCase SendChannelPaymentSimulatorNotification::debit_party_case() const {
  return SendChannelPaymentSimulatorNotification::DebitPartyCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// CheckoutPaymentSimulatorNotification

// string org_id = 1;
inline void CheckoutPaymentSimulatorNotification::clear_org_id() {
  org_id_.ClearToEmpty();
}
inline const std::string& CheckoutPaymentSimulatorNotification::org_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.org_id)
  return _internal_org_id();
}
inline void CheckoutPaymentSimulatorNotification::set_org_id(const std::string& value) {
  _internal_set_org_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.org_id)
}
inline std::string* CheckoutPaymentSimulatorNotification::mutable_org_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.org_id)
  return _internal_mutable_org_id();
}
inline const std::string& CheckoutPaymentSimulatorNotification::_internal_org_id() const {
  return org_id_.Get();
}
inline void CheckoutPaymentSimulatorNotification::_internal_set_org_id(const std::string& value) {
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CheckoutPaymentSimulatorNotification::set_org_id(std::string&& value) {
  
  org_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.org_id)
}
inline void CheckoutPaymentSimulatorNotification::set_org_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.org_id)
}
inline void CheckoutPaymentSimulatorNotification::set_org_id(const char* value,
    size_t size) {
  
  org_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.org_id)
}
inline std::string* CheckoutPaymentSimulatorNotification::_internal_mutable_org_id() {
  
  return org_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CheckoutPaymentSimulatorNotification::release_org_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.org_id)
  return org_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CheckoutPaymentSimulatorNotification::set_allocated_org_id(std::string* org_id) {
  if (org_id != nullptr) {
    
  } else {
    
  }
  org_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), org_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.org_id)
}

// string customer_id = 2;
inline void CheckoutPaymentSimulatorNotification::clear_customer_id() {
  customer_id_.ClearToEmpty();
}
inline const std::string& CheckoutPaymentSimulatorNotification::customer_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_id)
  return _internal_customer_id();
}
inline void CheckoutPaymentSimulatorNotification::set_customer_id(const std::string& value) {
  _internal_set_customer_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_id)
}
inline std::string* CheckoutPaymentSimulatorNotification::mutable_customer_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_id)
  return _internal_mutable_customer_id();
}
inline const std::string& CheckoutPaymentSimulatorNotification::_internal_customer_id() const {
  return customer_id_.Get();
}
inline void CheckoutPaymentSimulatorNotification::_internal_set_customer_id(const std::string& value) {
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CheckoutPaymentSimulatorNotification::set_customer_id(std::string&& value) {
  
  customer_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_id)
}
inline void CheckoutPaymentSimulatorNotification::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_id)
}
inline void CheckoutPaymentSimulatorNotification::set_customer_id(const char* value,
    size_t size) {
  
  customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_id)
}
inline std::string* CheckoutPaymentSimulatorNotification::_internal_mutable_customer_id() {
  
  return customer_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CheckoutPaymentSimulatorNotification::release_customer_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_id)
  return customer_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CheckoutPaymentSimulatorNotification::set_allocated_customer_id(std::string* customer_id) {
  if (customer_id != nullptr) {
    
  } else {
    
  }
  customer_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), customer_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_id)
}

// string app_id = 3;
inline void CheckoutPaymentSimulatorNotification::clear_app_id() {
  app_id_.ClearToEmpty();
}
inline const std::string& CheckoutPaymentSimulatorNotification::app_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.app_id)
  return _internal_app_id();
}
inline void CheckoutPaymentSimulatorNotification::set_app_id(const std::string& value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.app_id)
}
inline std::string* CheckoutPaymentSimulatorNotification::mutable_app_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.app_id)
  return _internal_mutable_app_id();
}
inline const std::string& CheckoutPaymentSimulatorNotification::_internal_app_id() const {
  return app_id_.Get();
}
inline void CheckoutPaymentSimulatorNotification::_internal_set_app_id(const std::string& value) {
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CheckoutPaymentSimulatorNotification::set_app_id(std::string&& value) {
  
  app_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.app_id)
}
inline void CheckoutPaymentSimulatorNotification::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.app_id)
}
inline void CheckoutPaymentSimulatorNotification::set_app_id(const char* value,
    size_t size) {
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.app_id)
}
inline std::string* CheckoutPaymentSimulatorNotification::_internal_mutable_app_id() {
  
  return app_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CheckoutPaymentSimulatorNotification::release_app_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.app_id)
  return app_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CheckoutPaymentSimulatorNotification::set_allocated_app_id(std::string* app_id) {
  if (app_id != nullptr) {
    
  } else {
    
  }
  app_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), app_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.app_id)
}

// .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 4;
inline bool CheckoutPaymentSimulatorNotification::_internal_has_wallet() const {
  return credit_party_case() == kWallet;
}
inline bool CheckoutPaymentSimulatorNotification::has_wallet() const {
  return _internal_has_wallet();
}
inline void CheckoutPaymentSimulatorNotification::set_has_wallet() {
  _oneof_case_[0] = kWallet;
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* CheckoutPaymentSimulatorNotification::release_wallet() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.wallet)
  if (_internal_has_wallet()) {
    clear_has_credit_party();
      ::com::elarian::hera::proto::PaymentWalletCounterParty* temp = credit_party_.wallet_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    credit_party_.wallet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::PaymentWalletCounterParty& CheckoutPaymentSimulatorNotification::_internal_wallet() const {
  return _internal_has_wallet()
      ? *credit_party_.wallet_
      : reinterpret_cast< ::com::elarian::hera::proto::PaymentWalletCounterParty&>(::com::elarian::hera::proto::_PaymentWalletCounterParty_default_instance_);
}
inline const ::com::elarian::hera::proto::PaymentWalletCounterParty& CheckoutPaymentSimulatorNotification::wallet() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.wallet)
  return _internal_wallet();
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* CheckoutPaymentSimulatorNotification::unsafe_arena_release_wallet() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.wallet)
  if (_internal_has_wallet()) {
    clear_has_credit_party();
    ::com::elarian::hera::proto::PaymentWalletCounterParty* temp = credit_party_.wallet_;
    credit_party_.wallet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CheckoutPaymentSimulatorNotification::unsafe_arena_set_allocated_wallet(::com::elarian::hera::proto::PaymentWalletCounterParty* wallet) {
  clear_credit_party();
  if (wallet) {
    set_has_wallet();
    credit_party_.wallet_ = wallet;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.wallet)
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* CheckoutPaymentSimulatorNotification::_internal_mutable_wallet() {
  if (!_internal_has_wallet()) {
    clear_credit_party();
    set_has_wallet();
    credit_party_.wallet_ = CreateMaybeMessage< ::com::elarian::hera::proto::PaymentWalletCounterParty >(GetArena());
  }
  return credit_party_.wallet_;
}
inline ::com::elarian::hera::proto::PaymentWalletCounterParty* CheckoutPaymentSimulatorNotification::mutable_wallet() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.wallet)
  return _internal_mutable_wallet();
}

// .com.elarian.hera.proto.PaymentPurseCounterParty purse = 5;
inline bool CheckoutPaymentSimulatorNotification::_internal_has_purse() const {
  return credit_party_case() == kPurse;
}
inline bool CheckoutPaymentSimulatorNotification::has_purse() const {
  return _internal_has_purse();
}
inline void CheckoutPaymentSimulatorNotification::set_has_purse() {
  _oneof_case_[0] = kPurse;
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* CheckoutPaymentSimulatorNotification::release_purse() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.purse)
  if (_internal_has_purse()) {
    clear_has_credit_party();
      ::com::elarian::hera::proto::PaymentPurseCounterParty* temp = credit_party_.purse_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    credit_party_.purse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::PaymentPurseCounterParty& CheckoutPaymentSimulatorNotification::_internal_purse() const {
  return _internal_has_purse()
      ? *credit_party_.purse_
      : reinterpret_cast< ::com::elarian::hera::proto::PaymentPurseCounterParty&>(::com::elarian::hera::proto::_PaymentPurseCounterParty_default_instance_);
}
inline const ::com::elarian::hera::proto::PaymentPurseCounterParty& CheckoutPaymentSimulatorNotification::purse() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.purse)
  return _internal_purse();
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* CheckoutPaymentSimulatorNotification::unsafe_arena_release_purse() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.purse)
  if (_internal_has_purse()) {
    clear_has_credit_party();
    ::com::elarian::hera::proto::PaymentPurseCounterParty* temp = credit_party_.purse_;
    credit_party_.purse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CheckoutPaymentSimulatorNotification::unsafe_arena_set_allocated_purse(::com::elarian::hera::proto::PaymentPurseCounterParty* purse) {
  clear_credit_party();
  if (purse) {
    set_has_purse();
    credit_party_.purse_ = purse;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.purse)
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* CheckoutPaymentSimulatorNotification::_internal_mutable_purse() {
  if (!_internal_has_purse()) {
    clear_credit_party();
    set_has_purse();
    credit_party_.purse_ = CreateMaybeMessage< ::com::elarian::hera::proto::PaymentPurseCounterParty >(GetArena());
  }
  return credit_party_.purse_;
}
inline ::com::elarian::hera::proto::PaymentPurseCounterParty* CheckoutPaymentSimulatorNotification::mutable_purse() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.purse)
  return _internal_mutable_purse();
}

// string transaction_id = 6;
inline void CheckoutPaymentSimulatorNotification::clear_transaction_id() {
  transaction_id_.ClearToEmpty();
}
inline const std::string& CheckoutPaymentSimulatorNotification::transaction_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.transaction_id)
  return _internal_transaction_id();
}
inline void CheckoutPaymentSimulatorNotification::set_transaction_id(const std::string& value) {
  _internal_set_transaction_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.transaction_id)
}
inline std::string* CheckoutPaymentSimulatorNotification::mutable_transaction_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.transaction_id)
  return _internal_mutable_transaction_id();
}
inline const std::string& CheckoutPaymentSimulatorNotification::_internal_transaction_id() const {
  return transaction_id_.Get();
}
inline void CheckoutPaymentSimulatorNotification::_internal_set_transaction_id(const std::string& value) {
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CheckoutPaymentSimulatorNotification::set_transaction_id(std::string&& value) {
  
  transaction_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.transaction_id)
}
inline void CheckoutPaymentSimulatorNotification::set_transaction_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.transaction_id)
}
inline void CheckoutPaymentSimulatorNotification::set_transaction_id(const char* value,
    size_t size) {
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.transaction_id)
}
inline std::string* CheckoutPaymentSimulatorNotification::_internal_mutable_transaction_id() {
  
  return transaction_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CheckoutPaymentSimulatorNotification::release_transaction_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.transaction_id)
  return transaction_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CheckoutPaymentSimulatorNotification::set_allocated_transaction_id(std::string* transaction_id) {
  if (transaction_id != nullptr) {
    
  } else {
    
  }
  transaction_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transaction_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.transaction_id)
}

// .com.elarian.hera.proto.CustomerNumber customer_number = 7;
inline bool CheckoutPaymentSimulatorNotification::_internal_has_customer_number() const {
  return this != internal_default_instance() && customer_number_ != nullptr;
}
inline bool CheckoutPaymentSimulatorNotification::has_customer_number() const {
  return _internal_has_customer_number();
}
inline const ::com::elarian::hera::proto::CustomerNumber& CheckoutPaymentSimulatorNotification::_internal_customer_number() const {
  const ::com::elarian::hera::proto::CustomerNumber* p = customer_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::CustomerNumber&>(
      ::com::elarian::hera::proto::_CustomerNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::CustomerNumber& CheckoutPaymentSimulatorNotification::customer_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_number)
  return _internal_customer_number();
}
inline void CheckoutPaymentSimulatorNotification::unsafe_arena_set_allocated_customer_number(
    ::com::elarian::hera::proto::CustomerNumber* customer_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number_);
  }
  customer_number_ = customer_number;
  if (customer_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_number)
}
inline ::com::elarian::hera::proto::CustomerNumber* CheckoutPaymentSimulatorNotification::release_customer_number() {
  
  ::com::elarian::hera::proto::CustomerNumber* temp = customer_number_;
  customer_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::CustomerNumber* CheckoutPaymentSimulatorNotification::unsafe_arena_release_customer_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_number)
  
  ::com::elarian::hera::proto::CustomerNumber* temp = customer_number_;
  customer_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::CustomerNumber* CheckoutPaymentSimulatorNotification::_internal_mutable_customer_number() {
  
  if (customer_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::CustomerNumber>(GetArena());
    customer_number_ = p;
  }
  return customer_number_;
}
inline ::com::elarian::hera::proto::CustomerNumber* CheckoutPaymentSimulatorNotification::mutable_customer_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_number)
  return _internal_mutable_customer_number();
}
inline void CheckoutPaymentSimulatorNotification::set_allocated_customer_number(::com::elarian::hera::proto::CustomerNumber* customer_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number_);
  }
  if (customer_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number)->GetArena();
    if (message_arena != submessage_arena) {
      customer_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, customer_number, submessage_arena);
    }
    
  } else {
    
  }
  customer_number_ = customer_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_number)
}

// .com.elarian.hera.proto.PaymentChannelNumber channel_number = 8;
inline bool CheckoutPaymentSimulatorNotification::_internal_has_channel_number() const {
  return this != internal_default_instance() && channel_number_ != nullptr;
}
inline bool CheckoutPaymentSimulatorNotification::has_channel_number() const {
  return _internal_has_channel_number();
}
inline const ::com::elarian::hera::proto::PaymentChannelNumber& CheckoutPaymentSimulatorNotification::_internal_channel_number() const {
  const ::com::elarian::hera::proto::PaymentChannelNumber* p = channel_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::PaymentChannelNumber&>(
      ::com::elarian::hera::proto::_PaymentChannelNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::PaymentChannelNumber& CheckoutPaymentSimulatorNotification::channel_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.channel_number)
  return _internal_channel_number();
}
inline void CheckoutPaymentSimulatorNotification::unsafe_arena_set_allocated_channel_number(
    ::com::elarian::hera::proto::PaymentChannelNumber* channel_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  channel_number_ = channel_number;
  if (channel_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.channel_number)
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* CheckoutPaymentSimulatorNotification::release_channel_number() {
  
  ::com::elarian::hera::proto::PaymentChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* CheckoutPaymentSimulatorNotification::unsafe_arena_release_channel_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.channel_number)
  
  ::com::elarian::hera::proto::PaymentChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* CheckoutPaymentSimulatorNotification::_internal_mutable_channel_number() {
  
  if (channel_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::PaymentChannelNumber>(GetArena());
    channel_number_ = p;
  }
  return channel_number_;
}
inline ::com::elarian::hera::proto::PaymentChannelNumber* CheckoutPaymentSimulatorNotification::mutable_channel_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.channel_number)
  return _internal_mutable_channel_number();
}
inline void CheckoutPaymentSimulatorNotification::set_allocated_channel_number(::com::elarian::hera::proto::PaymentChannelNumber* channel_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  if (channel_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number)->GetArena();
    if (message_arena != submessage_arena) {
      channel_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel_number, submessage_arena);
    }
    
  } else {
    
  }
  channel_number_ = channel_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.channel_number)
}

// .com.elarian.hera.proto.Cash value = 9;
inline bool CheckoutPaymentSimulatorNotification::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool CheckoutPaymentSimulatorNotification::has_value() const {
  return _internal_has_value();
}
inline const ::com::elarian::hera::proto::Cash& CheckoutPaymentSimulatorNotification::_internal_value() const {
  const ::com::elarian::hera::proto::Cash* p = value_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::Cash&>(
      ::com::elarian::hera::proto::_Cash_default_instance_);
}
inline const ::com::elarian::hera::proto::Cash& CheckoutPaymentSimulatorNotification::value() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.value)
  return _internal_value();
}
inline void CheckoutPaymentSimulatorNotification::unsafe_arena_set_allocated_value(
    ::com::elarian::hera::proto::Cash* value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.value)
}
inline ::com::elarian::hera::proto::Cash* CheckoutPaymentSimulatorNotification::release_value() {
  
  ::com::elarian::hera::proto::Cash* temp = value_;
  value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::Cash* CheckoutPaymentSimulatorNotification::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.value)
  
  ::com::elarian::hera::proto::Cash* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::Cash* CheckoutPaymentSimulatorNotification::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::Cash>(GetArena());
    value_ = p;
  }
  return value_;
}
inline ::com::elarian::hera::proto::Cash* CheckoutPaymentSimulatorNotification::mutable_value() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.value)
  return _internal_mutable_value();
}
inline void CheckoutPaymentSimulatorNotification::set_allocated_value(::com::elarian::hera::proto::Cash* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.value)
}

inline bool CheckoutPaymentSimulatorNotification::has_credit_party() const {
  return credit_party_case() != CREDIT_PARTY_NOT_SET;
}
inline void CheckoutPaymentSimulatorNotification::clear_has_credit_party() {
  _oneof_case_[0] = CREDIT_PARTY_NOT_SET;
}
inline CheckoutPaymentSimulatorNotification::CreditPartyCase CheckoutPaymentSimulatorNotification::credit_party_case() const {
  return CheckoutPaymentSimulatorNotification::CreditPartyCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_simulator_5fsocket_2eproto
