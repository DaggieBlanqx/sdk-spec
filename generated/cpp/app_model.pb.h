// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app_model.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_app_5fmodel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_app_5fmodel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_app_5fmodel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_app_5fmodel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_app_5fmodel_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class CustomerReminder;
class CustomerReminderDefaultTypeInternal;
extern CustomerReminderDefaultTypeInternal _CustomerReminder_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::elarian::hera::proto::CustomerReminder* Arena::CreateMaybeMessage<::com::elarian::hera::proto::CustomerReminder>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace elarian {
namespace hera {
namespace proto {

// ===================================================================

class CustomerReminder PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.CustomerReminder) */ {
 public:
  inline CustomerReminder() : CustomerReminder(nullptr) {}
  virtual ~CustomerReminder();

  CustomerReminder(const CustomerReminder& from);
  CustomerReminder(CustomerReminder&& from) noexcept
    : CustomerReminder() {
    *this = ::std::move(from);
  }

  inline CustomerReminder& operator=(const CustomerReminder& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomerReminder& operator=(CustomerReminder&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CustomerReminder& default_instance();

  static inline const CustomerReminder* internal_default_instance() {
    return reinterpret_cast<const CustomerReminder*>(
               &_CustomerReminder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CustomerReminder& a, CustomerReminder& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomerReminder* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomerReminder* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CustomerReminder* New() const final {
    return CreateMaybeMessage<CustomerReminder>(nullptr);
  }

  CustomerReminder* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CustomerReminder>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CustomerReminder& from);
  void MergeFrom(const CustomerReminder& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CustomerReminder* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.CustomerReminder";
  }
  protected:
  explicit CustomerReminder(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_app_5fmodel_2eproto);
    return ::descriptor_table_app_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kRemindAtFieldNumber = 2,
    kIntervalFieldNumber = 3,
    kPayloadFieldNumber = 4,
  };
  // string key = 1;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // .google.protobuf.Timestamp remind_at = 2;
  bool has_remind_at() const;
  private:
  bool _internal_has_remind_at() const;
  public:
  void clear_remind_at();
  const PROTOBUF_NAMESPACE_ID::Timestamp& remind_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_remind_at();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_remind_at();
  void set_allocated_remind_at(PROTOBUF_NAMESPACE_ID::Timestamp* remind_at);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_remind_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_remind_at();
  public:
  void unsafe_arena_set_allocated_remind_at(
      PROTOBUF_NAMESPACE_ID::Timestamp* remind_at);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_remind_at();

  // .google.protobuf.Duration interval = 3;
  bool has_interval() const;
  private:
  bool _internal_has_interval() const;
  public:
  void clear_interval();
  const PROTOBUF_NAMESPACE_ID::Duration& interval() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_interval();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_interval();
  void set_allocated_interval(PROTOBUF_NAMESPACE_ID::Duration* interval);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_interval() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_interval();
  public:
  void unsafe_arena_set_allocated_interval(
      PROTOBUF_NAMESPACE_ID::Duration* interval);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_interval();

  // .google.protobuf.StringValue payload = 4;
  bool has_payload() const;
  private:
  bool _internal_has_payload() const;
  public:
  void clear_payload();
  const PROTOBUF_NAMESPACE_ID::StringValue& payload() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_payload();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_payload();
  void set_allocated_payload(PROTOBUF_NAMESPACE_ID::StringValue* payload);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_payload() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_payload();
  public:
  void unsafe_arena_set_allocated_payload(
      PROTOBUF_NAMESPACE_ID::StringValue* payload);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_payload();

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.CustomerReminder)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  PROTOBUF_NAMESPACE_ID::Timestamp* remind_at_;
  PROTOBUF_NAMESPACE_ID::Duration* interval_;
  PROTOBUF_NAMESPACE_ID::StringValue* payload_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_app_5fmodel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CustomerReminder

// string key = 1;
inline void CustomerReminder::clear_key() {
  key_.ClearToEmpty();
}
inline const std::string& CustomerReminder::key() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CustomerReminder.key)
  return _internal_key();
}
inline void CustomerReminder::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.CustomerReminder.key)
}
inline std::string* CustomerReminder::mutable_key() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CustomerReminder.key)
  return _internal_mutable_key();
}
inline const std::string& CustomerReminder::_internal_key() const {
  return key_.Get();
}
inline void CustomerReminder::_internal_set_key(const std::string& value) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CustomerReminder::set_key(std::string&& value) {
  
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.CustomerReminder.key)
}
inline void CustomerReminder::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.CustomerReminder.key)
}
inline void CustomerReminder::set_key(const char* value,
    size_t size) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.CustomerReminder.key)
}
inline std::string* CustomerReminder::_internal_mutable_key() {
  
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CustomerReminder::release_key() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CustomerReminder.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CustomerReminder::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CustomerReminder.key)
}

// .google.protobuf.Timestamp remind_at = 2;
inline bool CustomerReminder::_internal_has_remind_at() const {
  return this != internal_default_instance() && remind_at_ != nullptr;
}
inline bool CustomerReminder::has_remind_at() const {
  return _internal_has_remind_at();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CustomerReminder::_internal_remind_at() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = remind_at_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CustomerReminder::remind_at() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CustomerReminder.remind_at)
  return _internal_remind_at();
}
inline void CustomerReminder::unsafe_arena_set_allocated_remind_at(
    PROTOBUF_NAMESPACE_ID::Timestamp* remind_at) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(remind_at_);
  }
  remind_at_ = remind_at;
  if (remind_at) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.CustomerReminder.remind_at)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomerReminder::release_remind_at() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = remind_at_;
  remind_at_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomerReminder::unsafe_arena_release_remind_at() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CustomerReminder.remind_at)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = remind_at_;
  remind_at_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomerReminder::_internal_mutable_remind_at() {
  
  if (remind_at_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    remind_at_ = p;
  }
  return remind_at_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CustomerReminder::mutable_remind_at() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CustomerReminder.remind_at)
  return _internal_mutable_remind_at();
}
inline void CustomerReminder::set_allocated_remind_at(PROTOBUF_NAMESPACE_ID::Timestamp* remind_at) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remind_at_);
  }
  if (remind_at) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(remind_at)->GetArena();
    if (message_arena != submessage_arena) {
      remind_at = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, remind_at, submessage_arena);
    }
    
  } else {
    
  }
  remind_at_ = remind_at;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CustomerReminder.remind_at)
}

// .google.protobuf.Duration interval = 3;
inline bool CustomerReminder::_internal_has_interval() const {
  return this != internal_default_instance() && interval_ != nullptr;
}
inline bool CustomerReminder::has_interval() const {
  return _internal_has_interval();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& CustomerReminder::_internal_interval() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = interval_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& CustomerReminder::interval() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CustomerReminder.interval)
  return _internal_interval();
}
inline void CustomerReminder::unsafe_arena_set_allocated_interval(
    PROTOBUF_NAMESPACE_ID::Duration* interval) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(interval_);
  }
  interval_ = interval;
  if (interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.CustomerReminder.interval)
}
inline PROTOBUF_NAMESPACE_ID::Duration* CustomerReminder::release_interval() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = interval_;
  interval_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CustomerReminder::unsafe_arena_release_interval() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CustomerReminder.interval)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = interval_;
  interval_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CustomerReminder::_internal_mutable_interval() {
  
  if (interval_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    interval_ = p;
  }
  return interval_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CustomerReminder::mutable_interval() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CustomerReminder.interval)
  return _internal_mutable_interval();
}
inline void CustomerReminder::set_allocated_interval(PROTOBUF_NAMESPACE_ID::Duration* interval) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(interval_);
  }
  if (interval) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(interval)->GetArena();
    if (message_arena != submessage_arena) {
      interval = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CustomerReminder.interval)
}

// .google.protobuf.StringValue payload = 4;
inline bool CustomerReminder::_internal_has_payload() const {
  return this != internal_default_instance() && payload_ != nullptr;
}
inline bool CustomerReminder::has_payload() const {
  return _internal_has_payload();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& CustomerReminder::_internal_payload() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = payload_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& CustomerReminder::payload() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.CustomerReminder.payload)
  return _internal_payload();
}
inline void CustomerReminder::unsafe_arena_set_allocated_payload(
    PROTOBUF_NAMESPACE_ID::StringValue* payload) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload_);
  }
  payload_ = payload;
  if (payload) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.CustomerReminder.payload)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* CustomerReminder::release_payload() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = payload_;
  payload_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* CustomerReminder::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.CustomerReminder.payload)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = payload_;
  payload_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* CustomerReminder::_internal_mutable_payload() {
  
  if (payload_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    payload_ = p;
  }
  return payload_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* CustomerReminder::mutable_payload() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.CustomerReminder.payload)
  return _internal_mutable_payload();
}
inline void CustomerReminder::set_allocated_payload(PROTOBUF_NAMESPACE_ID::StringValue* payload) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload_);
  }
  if (payload) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload)->GetArena();
    if (message_arena != submessage_arena) {
      payload = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.CustomerReminder.payload)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_app_5fmodel_2eproto
