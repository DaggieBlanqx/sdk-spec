// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: identity_state.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_identity_5fstate_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_identity_5fstate_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "common_model.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_identity_5fstate_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_identity_5fstate_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_identity_5fstate_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class IdentityState;
class IdentityStateDefaultTypeInternal;
extern IdentityStateDefaultTypeInternal _IdentityState_default_instance_;
class IdentityState_MetadataEntry_DoNotUse;
class IdentityState_MetadataEntry_DoNotUseDefaultTypeInternal;
extern IdentityState_MetadataEntry_DoNotUseDefaultTypeInternal _IdentityState_MetadataEntry_DoNotUse_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::elarian::hera::proto::IdentityState* Arena::CreateMaybeMessage<::com::elarian::hera::proto::IdentityState>(Arena*);
template<> ::com::elarian::hera::proto::IdentityState_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::com::elarian::hera::proto::IdentityState_MetadataEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace elarian {
namespace hera {
namespace proto {

// ===================================================================

class IdentityState_MetadataEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<IdentityState_MetadataEntry_DoNotUse, 
    std::string, ::com::elarian::hera::proto::DataMapValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<IdentityState_MetadataEntry_DoNotUse, 
    std::string, ::com::elarian::hera::proto::DataMapValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  IdentityState_MetadataEntry_DoNotUse();
  explicit IdentityState_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const IdentityState_MetadataEntry_DoNotUse& other);
  static const IdentityState_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const IdentityState_MetadataEntry_DoNotUse*>(&_IdentityState_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "com.elarian.hera.proto.IdentityState.MetadataEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_identity_5fstate_2eproto);
    return ::descriptor_table_identity_5fstate_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class IdentityState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.IdentityState) */ {
 public:
  inline IdentityState() : IdentityState(nullptr) {}
  virtual ~IdentityState();

  IdentityState(const IdentityState& from);
  IdentityState(IdentityState&& from) noexcept
    : IdentityState() {
    *this = ::std::move(from);
  }

  inline IdentityState& operator=(const IdentityState& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdentityState& operator=(IdentityState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IdentityState& default_instance();

  static inline const IdentityState* internal_default_instance() {
    return reinterpret_cast<const IdentityState*>(
               &_IdentityState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(IdentityState& a, IdentityState& b) {
    a.Swap(&b);
  }
  inline void Swap(IdentityState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdentityState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IdentityState* New() const final {
    return CreateMaybeMessage<IdentityState>(nullptr);
  }

  IdentityState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IdentityState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IdentityState& from);
  void MergeFrom(const IdentityState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdentityState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.IdentityState";
  }
  protected:
  explicit IdentityState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_identity_5fstate_2eproto);
    return ::descriptor_table_identity_5fstate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kTagsFieldNumber = 1,
    kMetadataFieldNumber = 2,
    kSecondaryIdsFieldNumber = 3,
  };
  // repeated .com.elarian.hera.proto.CustomerIndex tags = 1;
  int tags_size() const;
  private:
  int _internal_tags_size() const;
  public:
  void clear_tags();
  ::com::elarian::hera::proto::CustomerIndex* mutable_tags(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerIndex >*
      mutable_tags();
  private:
  const ::com::elarian::hera::proto::CustomerIndex& _internal_tags(int index) const;
  ::com::elarian::hera::proto::CustomerIndex* _internal_add_tags();
  public:
  const ::com::elarian::hera::proto::CustomerIndex& tags(int index) const;
  ::com::elarian::hera::proto::CustomerIndex* add_tags();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerIndex >&
      tags() const;

  // map<string, .com.elarian.hera.proto.DataMapValue> metadata = 2;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;
  public:
  void clear_metadata();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::DataMapValue >&
      _internal_metadata() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::DataMapValue >*
      _internal_mutable_metadata();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::DataMapValue >&
      metadata() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::DataMapValue >*
      mutable_metadata();

  // repeated .com.elarian.hera.proto.CustomerIndex secondary_ids = 3;
  int secondary_ids_size() const;
  private:
  int _internal_secondary_ids_size() const;
  public:
  void clear_secondary_ids();
  ::com::elarian::hera::proto::CustomerIndex* mutable_secondary_ids(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerIndex >*
      mutable_secondary_ids();
  private:
  const ::com::elarian::hera::proto::CustomerIndex& _internal_secondary_ids(int index) const;
  ::com::elarian::hera::proto::CustomerIndex* _internal_add_secondary_ids();
  public:
  const ::com::elarian::hera::proto::CustomerIndex& secondary_ids(int index) const;
  ::com::elarian::hera::proto::CustomerIndex* add_secondary_ids();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerIndex >&
      secondary_ids() const;

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.IdentityState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerIndex > tags_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      IdentityState_MetadataEntry_DoNotUse,
      std::string, ::com::elarian::hera::proto::DataMapValue,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerIndex > secondary_ids_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_identity_5fstate_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// IdentityState

// repeated .com.elarian.hera.proto.CustomerIndex tags = 1;
inline int IdentityState::_internal_tags_size() const {
  return tags_.size();
}
inline int IdentityState::tags_size() const {
  return _internal_tags_size();
}
inline ::com::elarian::hera::proto::CustomerIndex* IdentityState::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.IdentityState.tags)
  return tags_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerIndex >*
IdentityState::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.IdentityState.tags)
  return &tags_;
}
inline const ::com::elarian::hera::proto::CustomerIndex& IdentityState::_internal_tags(int index) const {
  return tags_.Get(index);
}
inline const ::com::elarian::hera::proto::CustomerIndex& IdentityState::tags(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.IdentityState.tags)
  return _internal_tags(index);
}
inline ::com::elarian::hera::proto::CustomerIndex* IdentityState::_internal_add_tags() {
  return tags_.Add();
}
inline ::com::elarian::hera::proto::CustomerIndex* IdentityState::add_tags() {
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.IdentityState.tags)
  return _internal_add_tags();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerIndex >&
IdentityState::tags() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.IdentityState.tags)
  return tags_;
}

// map<string, .com.elarian.hera.proto.DataMapValue> metadata = 2;
inline int IdentityState::_internal_metadata_size() const {
  return metadata_.size();
}
inline int IdentityState::metadata_size() const {
  return _internal_metadata_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::DataMapValue >&
IdentityState::_internal_metadata() const {
  return metadata_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::DataMapValue >&
IdentityState::metadata() const {
  // @@protoc_insertion_point(field_map:com.elarian.hera.proto.IdentityState.metadata)
  return _internal_metadata();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::DataMapValue >*
IdentityState::_internal_mutable_metadata() {
  return metadata_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::DataMapValue >*
IdentityState::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:com.elarian.hera.proto.IdentityState.metadata)
  return _internal_mutable_metadata();
}

// repeated .com.elarian.hera.proto.CustomerIndex secondary_ids = 3;
inline int IdentityState::_internal_secondary_ids_size() const {
  return secondary_ids_.size();
}
inline int IdentityState::secondary_ids_size() const {
  return _internal_secondary_ids_size();
}
inline ::com::elarian::hera::proto::CustomerIndex* IdentityState::mutable_secondary_ids(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.IdentityState.secondary_ids)
  return secondary_ids_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerIndex >*
IdentityState::mutable_secondary_ids() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.IdentityState.secondary_ids)
  return &secondary_ids_;
}
inline const ::com::elarian::hera::proto::CustomerIndex& IdentityState::_internal_secondary_ids(int index) const {
  return secondary_ids_.Get(index);
}
inline const ::com::elarian::hera::proto::CustomerIndex& IdentityState::secondary_ids(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.IdentityState.secondary_ids)
  return _internal_secondary_ids(index);
}
inline ::com::elarian::hera::proto::CustomerIndex* IdentityState::_internal_add_secondary_ids() {
  return secondary_ids_.Add();
}
inline ::com::elarian::hera::proto::CustomerIndex* IdentityState::add_secondary_ids() {
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.IdentityState.secondary_ids)
  return _internal_add_secondary_ids();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerIndex >&
IdentityState::secondary_ids() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.IdentityState.secondary_ids)
  return secondary_ids_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_identity_5fstate_2eproto
