// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity_state.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_activity_5fstate_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_activity_5fstate_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include "common_model.pb.h"
#include "activity_model.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_activity_5fstate_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_activity_5fstate_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_activity_5fstate_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class ActivitySessionState;
class ActivitySessionStateDefaultTypeInternal;
extern ActivitySessionStateDefaultTypeInternal _ActivitySessionState_default_instance_;
class ActivityState;
class ActivityStateDefaultTypeInternal;
extern ActivityStateDefaultTypeInternal _ActivityState_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::elarian::hera::proto::ActivitySessionState* Arena::CreateMaybeMessage<::com::elarian::hera::proto::ActivitySessionState>(Arena*);
template<> ::com::elarian::hera::proto::ActivityState* Arena::CreateMaybeMessage<::com::elarian::hera::proto::ActivityState>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace elarian {
namespace hera {
namespace proto {

// ===================================================================

class ActivitySessionState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.ActivitySessionState) */ {
 public:
  inline ActivitySessionState() : ActivitySessionState(nullptr) {}
  virtual ~ActivitySessionState();

  ActivitySessionState(const ActivitySessionState& from);
  ActivitySessionState(ActivitySessionState&& from) noexcept
    : ActivitySessionState() {
    *this = ::std::move(from);
  }

  inline ActivitySessionState& operator=(const ActivitySessionState& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActivitySessionState& operator=(ActivitySessionState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActivitySessionState& default_instance();

  static inline const ActivitySessionState* internal_default_instance() {
    return reinterpret_cast<const ActivitySessionState*>(
               &_ActivitySessionState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ActivitySessionState& a, ActivitySessionState& b) {
    a.Swap(&b);
  }
  inline void Swap(ActivitySessionState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActivitySessionState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActivitySessionState* New() const final {
    return CreateMaybeMessage<ActivitySessionState>(nullptr);
  }

  ActivitySessionState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActivitySessionState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActivitySessionState& from);
  void MergeFrom(const ActivitySessionState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActivitySessionState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.ActivitySessionState";
  }
  protected:
  explicit ActivitySessionState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_activity_5fstate_2eproto);
    return ::descriptor_table_activity_5fstate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActivitiesFieldNumber = 5,
    kSourceFieldNumber = 2,
    kSessionIdFieldNumber = 3,
    kAppIdFieldNumber = 4,
    kCustomerNumberFieldNumber = 1,
    kCreatedAtFieldNumber = 6,
    kUpdatedAtFieldNumber = 7,
  };
  // repeated .com.elarian.hera.proto.CustomerActivity activities = 5;
  int activities_size() const;
  private:
  int _internal_activities_size() const;
  public:
  void clear_activities();
  ::com::elarian::hera::proto::CustomerActivity* mutable_activities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerActivity >*
      mutable_activities();
  private:
  const ::com::elarian::hera::proto::CustomerActivity& _internal_activities(int index) const;
  ::com::elarian::hera::proto::CustomerActivity* _internal_add_activities();
  public:
  const ::com::elarian::hera::proto::CustomerActivity& activities(int index) const;
  ::com::elarian::hera::proto::CustomerActivity* add_activities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerActivity >&
      activities() const;

  // string source = 2;
  void clear_source();
  const std::string& source() const;
  void set_source(const std::string& value);
  void set_source(std::string&& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  std::string* mutable_source();
  std::string* release_source();
  void set_allocated_source(std::string* source);
  private:
  const std::string& _internal_source() const;
  void _internal_set_source(const std::string& value);
  std::string* _internal_mutable_source();
  public:

  // string session_id = 3;
  void clear_session_id();
  const std::string& session_id() const;
  void set_session_id(const std::string& value);
  void set_session_id(std::string&& value);
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  std::string* mutable_session_id();
  std::string* release_session_id();
  void set_allocated_session_id(std::string* session_id);
  private:
  const std::string& _internal_session_id() const;
  void _internal_set_session_id(const std::string& value);
  std::string* _internal_mutable_session_id();
  public:

  // string app_id = 4;
  void clear_app_id();
  const std::string& app_id() const;
  void set_app_id(const std::string& value);
  void set_app_id(std::string&& value);
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  std::string* mutable_app_id();
  std::string* release_app_id();
  void set_allocated_app_id(std::string* app_id);
  private:
  const std::string& _internal_app_id() const;
  void _internal_set_app_id(const std::string& value);
  std::string* _internal_mutable_app_id();
  public:

  // .com.elarian.hera.proto.CustomerNumber customer_number = 1;
  bool has_customer_number() const;
  private:
  bool _internal_has_customer_number() const;
  public:
  void clear_customer_number();
  const ::com::elarian::hera::proto::CustomerNumber& customer_number() const;
  ::com::elarian::hera::proto::CustomerNumber* release_customer_number();
  ::com::elarian::hera::proto::CustomerNumber* mutable_customer_number();
  void set_allocated_customer_number(::com::elarian::hera::proto::CustomerNumber* customer_number);
  private:
  const ::com::elarian::hera::proto::CustomerNumber& _internal_customer_number() const;
  ::com::elarian::hera::proto::CustomerNumber* _internal_mutable_customer_number();
  public:
  void unsafe_arena_set_allocated_customer_number(
      ::com::elarian::hera::proto::CustomerNumber* customer_number);
  ::com::elarian::hera::proto::CustomerNumber* unsafe_arena_release_customer_number();

  // .google.protobuf.Timestamp created_at = 6;
  bool has_created_at() const;
  private:
  bool _internal_has_created_at() const;
  public:
  void clear_created_at();
  const PROTOBUF_NAMESPACE_ID::Timestamp& created_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_created_at();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_created_at();
  void set_allocated_created_at(PROTOBUF_NAMESPACE_ID::Timestamp* created_at);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_created_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_created_at();
  public:
  void unsafe_arena_set_allocated_created_at(
      PROTOBUF_NAMESPACE_ID::Timestamp* created_at);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_created_at();

  // .google.protobuf.Timestamp updated_at = 7;
  bool has_updated_at() const;
  private:
  bool _internal_has_updated_at() const;
  public:
  void clear_updated_at();
  const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_updated_at();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(PROTOBUF_NAMESPACE_ID::Timestamp* updated_at);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_updated_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_updated_at();
  public:
  void unsafe_arena_set_allocated_updated_at(
      PROTOBUF_NAMESPACE_ID::Timestamp* updated_at);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_updated_at();

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.ActivitySessionState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerActivity > activities_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr source_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr session_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr app_id_;
  ::com::elarian::hera::proto::CustomerNumber* customer_number_;
  PROTOBUF_NAMESPACE_ID::Timestamp* created_at_;
  PROTOBUF_NAMESPACE_ID::Timestamp* updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_activity_5fstate_2eproto;
};
// -------------------------------------------------------------------

class ActivityState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.ActivityState) */ {
 public:
  inline ActivityState() : ActivityState(nullptr) {}
  virtual ~ActivityState();

  ActivityState(const ActivityState& from);
  ActivityState(ActivityState&& from) noexcept
    : ActivityState() {
    *this = ::std::move(from);
  }

  inline ActivityState& operator=(const ActivityState& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActivityState& operator=(ActivityState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActivityState& default_instance();

  static inline const ActivityState* internal_default_instance() {
    return reinterpret_cast<const ActivityState*>(
               &_ActivityState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ActivityState& a, ActivityState& b) {
    a.Swap(&b);
  }
  inline void Swap(ActivityState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActivityState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActivityState* New() const final {
    return CreateMaybeMessage<ActivityState>(nullptr);
  }

  ActivityState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActivityState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActivityState& from);
  void MergeFrom(const ActivityState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActivityState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.ActivityState";
  }
  protected:
  explicit ActivityState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_activity_5fstate_2eproto);
    return ::descriptor_table_activity_5fstate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionsFieldNumber = 1,
    kCustomerNumbersFieldNumber = 2,
  };
  // repeated .com.elarian.hera.proto.ActivitySessionState sessions = 1;
  int sessions_size() const;
  private:
  int _internal_sessions_size() const;
  public:
  void clear_sessions();
  ::com::elarian::hera::proto::ActivitySessionState* mutable_sessions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::ActivitySessionState >*
      mutable_sessions();
  private:
  const ::com::elarian::hera::proto::ActivitySessionState& _internal_sessions(int index) const;
  ::com::elarian::hera::proto::ActivitySessionState* _internal_add_sessions();
  public:
  const ::com::elarian::hera::proto::ActivitySessionState& sessions(int index) const;
  ::com::elarian::hera::proto::ActivitySessionState* add_sessions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::ActivitySessionState >&
      sessions() const;

  // repeated .com.elarian.hera.proto.CustomerNumber customer_numbers = 2;
  int customer_numbers_size() const;
  private:
  int _internal_customer_numbers_size() const;
  public:
  void clear_customer_numbers();
  ::com::elarian::hera::proto::CustomerNumber* mutable_customer_numbers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerNumber >*
      mutable_customer_numbers();
  private:
  const ::com::elarian::hera::proto::CustomerNumber& _internal_customer_numbers(int index) const;
  ::com::elarian::hera::proto::CustomerNumber* _internal_add_customer_numbers();
  public:
  const ::com::elarian::hera::proto::CustomerNumber& customer_numbers(int index) const;
  ::com::elarian::hera::proto::CustomerNumber* add_customer_numbers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerNumber >&
      customer_numbers() const;

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.ActivityState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::ActivitySessionState > sessions_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerNumber > customer_numbers_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_activity_5fstate_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ActivitySessionState

// .com.elarian.hera.proto.CustomerNumber customer_number = 1;
inline bool ActivitySessionState::_internal_has_customer_number() const {
  return this != internal_default_instance() && customer_number_ != nullptr;
}
inline bool ActivitySessionState::has_customer_number() const {
  return _internal_has_customer_number();
}
inline const ::com::elarian::hera::proto::CustomerNumber& ActivitySessionState::_internal_customer_number() const {
  const ::com::elarian::hera::proto::CustomerNumber* p = customer_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::CustomerNumber&>(
      ::com::elarian::hera::proto::_CustomerNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::CustomerNumber& ActivitySessionState::customer_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ActivitySessionState.customer_number)
  return _internal_customer_number();
}
inline void ActivitySessionState::unsafe_arena_set_allocated_customer_number(
    ::com::elarian::hera::proto::CustomerNumber* customer_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number_);
  }
  customer_number_ = customer_number;
  if (customer_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ActivitySessionState.customer_number)
}
inline ::com::elarian::hera::proto::CustomerNumber* ActivitySessionState::release_customer_number() {
  
  ::com::elarian::hera::proto::CustomerNumber* temp = customer_number_;
  customer_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::CustomerNumber* ActivitySessionState::unsafe_arena_release_customer_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ActivitySessionState.customer_number)
  
  ::com::elarian::hera::proto::CustomerNumber* temp = customer_number_;
  customer_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::CustomerNumber* ActivitySessionState::_internal_mutable_customer_number() {
  
  if (customer_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::CustomerNumber>(GetArena());
    customer_number_ = p;
  }
  return customer_number_;
}
inline ::com::elarian::hera::proto::CustomerNumber* ActivitySessionState::mutable_customer_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ActivitySessionState.customer_number)
  return _internal_mutable_customer_number();
}
inline void ActivitySessionState::set_allocated_customer_number(::com::elarian::hera::proto::CustomerNumber* customer_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number_);
  }
  if (customer_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(customer_number)->GetArena();
    if (message_arena != submessage_arena) {
      customer_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, customer_number, submessage_arena);
    }
    
  } else {
    
  }
  customer_number_ = customer_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ActivitySessionState.customer_number)
}

// string source = 2;
inline void ActivitySessionState::clear_source() {
  source_.ClearToEmpty();
}
inline const std::string& ActivitySessionState::source() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ActivitySessionState.source)
  return _internal_source();
}
inline void ActivitySessionState::set_source(const std::string& value) {
  _internal_set_source(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.ActivitySessionState.source)
}
inline std::string* ActivitySessionState::mutable_source() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ActivitySessionState.source)
  return _internal_mutable_source();
}
inline const std::string& ActivitySessionState::_internal_source() const {
  return source_.Get();
}
inline void ActivitySessionState::_internal_set_source(const std::string& value) {
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ActivitySessionState::set_source(std::string&& value) {
  
  source_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.ActivitySessionState.source)
}
inline void ActivitySessionState::set_source(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.ActivitySessionState.source)
}
inline void ActivitySessionState::set_source(const char* value,
    size_t size) {
  
  source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.ActivitySessionState.source)
}
inline std::string* ActivitySessionState::_internal_mutable_source() {
  
  return source_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ActivitySessionState::release_source() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ActivitySessionState.source)
  return source_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ActivitySessionState::set_allocated_source(std::string* source) {
  if (source != nullptr) {
    
  } else {
    
  }
  source_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), source,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ActivitySessionState.source)
}

// string session_id = 3;
inline void ActivitySessionState::clear_session_id() {
  session_id_.ClearToEmpty();
}
inline const std::string& ActivitySessionState::session_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ActivitySessionState.session_id)
  return _internal_session_id();
}
inline void ActivitySessionState::set_session_id(const std::string& value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.ActivitySessionState.session_id)
}
inline std::string* ActivitySessionState::mutable_session_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ActivitySessionState.session_id)
  return _internal_mutable_session_id();
}
inline const std::string& ActivitySessionState::_internal_session_id() const {
  return session_id_.Get();
}
inline void ActivitySessionState::_internal_set_session_id(const std::string& value) {
  
  session_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ActivitySessionState::set_session_id(std::string&& value) {
  
  session_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.ActivitySessionState.session_id)
}
inline void ActivitySessionState::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  session_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.ActivitySessionState.session_id)
}
inline void ActivitySessionState::set_session_id(const char* value,
    size_t size) {
  
  session_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.ActivitySessionState.session_id)
}
inline std::string* ActivitySessionState::_internal_mutable_session_id() {
  
  return session_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ActivitySessionState::release_session_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ActivitySessionState.session_id)
  return session_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ActivitySessionState::set_allocated_session_id(std::string* session_id) {
  if (session_id != nullptr) {
    
  } else {
    
  }
  session_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), session_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ActivitySessionState.session_id)
}

// string app_id = 4;
inline void ActivitySessionState::clear_app_id() {
  app_id_.ClearToEmpty();
}
inline const std::string& ActivitySessionState::app_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ActivitySessionState.app_id)
  return _internal_app_id();
}
inline void ActivitySessionState::set_app_id(const std::string& value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.ActivitySessionState.app_id)
}
inline std::string* ActivitySessionState::mutable_app_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ActivitySessionState.app_id)
  return _internal_mutable_app_id();
}
inline const std::string& ActivitySessionState::_internal_app_id() const {
  return app_id_.Get();
}
inline void ActivitySessionState::_internal_set_app_id(const std::string& value) {
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ActivitySessionState::set_app_id(std::string&& value) {
  
  app_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.ActivitySessionState.app_id)
}
inline void ActivitySessionState::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.ActivitySessionState.app_id)
}
inline void ActivitySessionState::set_app_id(const char* value,
    size_t size) {
  
  app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.ActivitySessionState.app_id)
}
inline std::string* ActivitySessionState::_internal_mutable_app_id() {
  
  return app_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ActivitySessionState::release_app_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ActivitySessionState.app_id)
  return app_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ActivitySessionState::set_allocated_app_id(std::string* app_id) {
  if (app_id != nullptr) {
    
  } else {
    
  }
  app_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), app_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ActivitySessionState.app_id)
}

// repeated .com.elarian.hera.proto.CustomerActivity activities = 5;
inline int ActivitySessionState::_internal_activities_size() const {
  return activities_.size();
}
inline int ActivitySessionState::activities_size() const {
  return _internal_activities_size();
}
inline ::com::elarian::hera::proto::CustomerActivity* ActivitySessionState::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ActivitySessionState.activities)
  return activities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerActivity >*
ActivitySessionState::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.ActivitySessionState.activities)
  return &activities_;
}
inline const ::com::elarian::hera::proto::CustomerActivity& ActivitySessionState::_internal_activities(int index) const {
  return activities_.Get(index);
}
inline const ::com::elarian::hera::proto::CustomerActivity& ActivitySessionState::activities(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ActivitySessionState.activities)
  return _internal_activities(index);
}
inline ::com::elarian::hera::proto::CustomerActivity* ActivitySessionState::_internal_add_activities() {
  return activities_.Add();
}
inline ::com::elarian::hera::proto::CustomerActivity* ActivitySessionState::add_activities() {
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.ActivitySessionState.activities)
  return _internal_add_activities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerActivity >&
ActivitySessionState::activities() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.ActivitySessionState.activities)
  return activities_;
}

// .google.protobuf.Timestamp created_at = 6;
inline bool ActivitySessionState::_internal_has_created_at() const {
  return this != internal_default_instance() && created_at_ != nullptr;
}
inline bool ActivitySessionState::has_created_at() const {
  return _internal_has_created_at();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& ActivitySessionState::_internal_created_at() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = created_at_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& ActivitySessionState::created_at() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ActivitySessionState.created_at)
  return _internal_created_at();
}
inline void ActivitySessionState::unsafe_arena_set_allocated_created_at(
    PROTOBUF_NAMESPACE_ID::Timestamp* created_at) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_at_);
  }
  created_at_ = created_at;
  if (created_at) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ActivitySessionState.created_at)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ActivitySessionState::release_created_at() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = created_at_;
  created_at_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ActivitySessionState::unsafe_arena_release_created_at() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ActivitySessionState.created_at)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = created_at_;
  created_at_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ActivitySessionState::_internal_mutable_created_at() {
  
  if (created_at_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    created_at_ = p;
  }
  return created_at_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ActivitySessionState::mutable_created_at() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ActivitySessionState.created_at)
  return _internal_mutable_created_at();
}
inline void ActivitySessionState::set_allocated_created_at(PROTOBUF_NAMESPACE_ID::Timestamp* created_at) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_at_);
  }
  if (created_at) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_at)->GetArena();
    if (message_arena != submessage_arena) {
      created_at = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, created_at, submessage_arena);
    }
    
  } else {
    
  }
  created_at_ = created_at;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ActivitySessionState.created_at)
}

// .google.protobuf.Timestamp updated_at = 7;
inline bool ActivitySessionState::_internal_has_updated_at() const {
  return this != internal_default_instance() && updated_at_ != nullptr;
}
inline bool ActivitySessionState::has_updated_at() const {
  return _internal_has_updated_at();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& ActivitySessionState::_internal_updated_at() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& ActivitySessionState::updated_at() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ActivitySessionState.updated_at)
  return _internal_updated_at();
}
inline void ActivitySessionState::unsafe_arena_set_allocated_updated_at(
    PROTOBUF_NAMESPACE_ID::Timestamp* updated_at) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_at_);
  }
  updated_at_ = updated_at;
  if (updated_at) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.ActivitySessionState.updated_at)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ActivitySessionState::release_updated_at() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = updated_at_;
  updated_at_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ActivitySessionState::unsafe_arena_release_updated_at() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.ActivitySessionState.updated_at)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = updated_at_;
  updated_at_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ActivitySessionState::_internal_mutable_updated_at() {
  
  if (updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    updated_at_ = p;
  }
  return updated_at_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ActivitySessionState::mutable_updated_at() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ActivitySessionState.updated_at)
  return _internal_mutable_updated_at();
}
inline void ActivitySessionState::set_allocated_updated_at(PROTOBUF_NAMESPACE_ID::Timestamp* updated_at) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_at_);
  }
  if (updated_at) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_at)->GetArena();
    if (message_arena != submessage_arena) {
      updated_at = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updated_at, submessage_arena);
    }
    
  } else {
    
  }
  updated_at_ = updated_at;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.ActivitySessionState.updated_at)
}

// -------------------------------------------------------------------

// ActivityState

// repeated .com.elarian.hera.proto.ActivitySessionState sessions = 1;
inline int ActivityState::_internal_sessions_size() const {
  return sessions_.size();
}
inline int ActivityState::sessions_size() const {
  return _internal_sessions_size();
}
inline void ActivityState::clear_sessions() {
  sessions_.Clear();
}
inline ::com::elarian::hera::proto::ActivitySessionState* ActivityState::mutable_sessions(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ActivityState.sessions)
  return sessions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::ActivitySessionState >*
ActivityState::mutable_sessions() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.ActivityState.sessions)
  return &sessions_;
}
inline const ::com::elarian::hera::proto::ActivitySessionState& ActivityState::_internal_sessions(int index) const {
  return sessions_.Get(index);
}
inline const ::com::elarian::hera::proto::ActivitySessionState& ActivityState::sessions(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ActivityState.sessions)
  return _internal_sessions(index);
}
inline ::com::elarian::hera::proto::ActivitySessionState* ActivityState::_internal_add_sessions() {
  return sessions_.Add();
}
inline ::com::elarian::hera::proto::ActivitySessionState* ActivityState::add_sessions() {
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.ActivityState.sessions)
  return _internal_add_sessions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::ActivitySessionState >&
ActivityState::sessions() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.ActivityState.sessions)
  return sessions_;
}

// repeated .com.elarian.hera.proto.CustomerNumber customer_numbers = 2;
inline int ActivityState::_internal_customer_numbers_size() const {
  return customer_numbers_.size();
}
inline int ActivityState::customer_numbers_size() const {
  return _internal_customer_numbers_size();
}
inline ::com::elarian::hera::proto::CustomerNumber* ActivityState::mutable_customer_numbers(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.ActivityState.customer_numbers)
  return customer_numbers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerNumber >*
ActivityState::mutable_customer_numbers() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.ActivityState.customer_numbers)
  return &customer_numbers_;
}
inline const ::com::elarian::hera::proto::CustomerNumber& ActivityState::_internal_customer_numbers(int index) const {
  return customer_numbers_.Get(index);
}
inline const ::com::elarian::hera::proto::CustomerNumber& ActivityState::customer_numbers(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.ActivityState.customer_numbers)
  return _internal_customer_numbers(index);
}
inline ::com::elarian::hera::proto::CustomerNumber* ActivityState::_internal_add_customer_numbers() {
  return customer_numbers_.Add();
}
inline ::com::elarian::hera::proto::CustomerNumber* ActivityState::add_customer_numbers() {
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.ActivityState.customer_numbers)
  return _internal_add_customer_numbers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerNumber >&
ActivityState::customer_numbers() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.ActivityState.customer_numbers)
  return customer_numbers_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_activity_5fstate_2eproto
