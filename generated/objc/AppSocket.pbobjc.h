// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app_socket.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ActivityState;
@class AddCustomerReminderCommand;
@class AddCustomerReminderTagCommand;
@class AdoptCustomerStateCommand;
@class AppDataUpdate;
@class CancelCustomerReminderCommand;
@class CancelCustomerReminderTagCommand;
@class Cash;
@class CreateCustomerCommand;
@class CustomerActivity;
@class CustomerActivityCommand;
@class CustomerActivityNotification;
@class CustomerActivityReply;
@class CustomerIndex;
@class CustomerNumber;
@class CustomerReminder;
@class CustomerStateReplyData;
@class DataMapValue;
@class DeleteCustomerAppDataCommand;
@class DeleteCustomerMetadataCommand;
@class DeleteCustomerSecondaryIdCommand;
@class DeleteCustomerTagCommand;
@class GPBDuration;
@class GPBStringValue;
@class GPBTimestamp;
@class GenerateAuthTokenCommand;
@class GenerateAuthTokenReply;
@class GetCustomerStateCommand;
@class GetCustomerStateReply;
@class IdentityState;
@class InboundMessageBody;
@class IndexMapping;
@class InitiatePaymentCommand;
@class InitiatePaymentReply;
@class LeaseCustomerAppDataCommand;
@class LeaseCustomerAppDataReply;
@class MessageStatusNotification;
@class MessagingChannelNumber;
@class MessagingConsentUpdateNotification;
@class MessagingSessionEndedNotification;
@class MessagingSessionRenewedNotification;
@class MessagingSessionStartedNotification;
@class MessagingState;
@class OutboundMessage;
@class PaymentChannelNumber;
@class PaymentCounterParty;
@class PaymentState;
@class PaymentStatusNotification;
@class ReceivedMessageNotification;
@class ReceivedPaymentNotification;
@class ReminderNotification;
@class ReplyToMessageCommand;
@class SendMessageCommand;
@class SendMessageReply;
@class SendMessageTagCommand;
@class SentMessageReactionNotification;
@class ServerToAppCustomerNotification;
@class ServerToAppPurseNotification;
@class TagCommandReply;
@class UpdateCustomerAppDataCommand;
@class UpdateCustomerAppDataReply;
@class UpdateCustomerMetadataCommand;
@class UpdateCustomerSecondaryIdCommand;
@class UpdateCustomerStateReply;
@class UpdateCustomerTagCommand;
@class UpdateMessagingConsentCommand;
@class UpdateMessagingConsentReply;
@class WalletPaymentStatusNotification;
GPB_ENUM_FWD_DECLARE(MessageDeliveryStatus);
GPB_ENUM_FWD_DECLARE(MessageReaction);
GPB_ENUM_FWD_DECLARE(MessagingConsentUpdate);
GPB_ENUM_FWD_DECLARE(MessagingConsentUpdateStatus);
GPB_ENUM_FWD_DECLARE(MessagingSessionEndReason);
GPB_ENUM_FWD_DECLARE(PaymentStatus);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - AppSocketRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface AppSocketRoot : GPBRootObject
@end

#pragma mark - AppConnectionMetadata

typedef GPB_ENUM(AppConnectionMetadata_FieldNumber) {
  AppConnectionMetadata_FieldNumber_OrgId = 1,
  AppConnectionMetadata_FieldNumber_AppId = 2,
  AppConnectionMetadata_FieldNumber_ApiKey = 3,
  AppConnectionMetadata_FieldNumber_AuthToken = 4,
  AppConnectionMetadata_FieldNumber_SimplexMode = 5,
  AppConnectionMetadata_FieldNumber_SimulatorMode = 6,
};

GPB_FINAL @interface AppConnectionMetadata : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *orgId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *apiKey;
/** Test to see if @c apiKey has been set. */
@property(nonatomic, readwrite) BOOL hasApiKey;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *authToken;
/** Test to see if @c authToken has been set. */
@property(nonatomic, readwrite) BOOL hasAuthToken;

@property(nonatomic, readwrite) BOOL simplexMode;

@property(nonatomic, readwrite) BOOL simulatorMode;

@end

#pragma mark - AppToServerCommand

typedef GPB_ENUM(AppToServerCommand_FieldNumber) {
  AppToServerCommand_FieldNumber_GenerateAuthToken = 1,
  AppToServerCommand_FieldNumber_CreateCustomer = 2,
  AppToServerCommand_FieldNumber_GetCustomerState = 3,
  AppToServerCommand_FieldNumber_AdoptCustomerState = 4,
  AppToServerCommand_FieldNumber_AddCustomerReminder = 5,
  AppToServerCommand_FieldNumber_AddCustomerReminderTag = 6,
  AppToServerCommand_FieldNumber_CancelCustomerReminder = 7,
  AppToServerCommand_FieldNumber_CancelCustomerReminderTag = 8,
  AppToServerCommand_FieldNumber_UpdateCustomerTag = 9,
  AppToServerCommand_FieldNumber_DeleteCustomerTag = 10,
  AppToServerCommand_FieldNumber_UpdateCustomerSecondaryId = 11,
  AppToServerCommand_FieldNumber_DeleteCustomerSecondaryId = 12,
  AppToServerCommand_FieldNumber_UpdateCustomerMetadata = 13,
  AppToServerCommand_FieldNumber_DeleteCustomerMetadata = 14,
  AppToServerCommand_FieldNumber_LeaseCustomerAppData = 15,
  AppToServerCommand_FieldNumber_UpdateCustomerAppData = 16,
  AppToServerCommand_FieldNumber_DeleteCustomerAppData = 17,
  AppToServerCommand_FieldNumber_SendMessage = 18,
  AppToServerCommand_FieldNumber_SendMessageTag = 19,
  AppToServerCommand_FieldNumber_ReplyToMessage = 20,
  AppToServerCommand_FieldNumber_UpdateMessagingConsent = 21,
  AppToServerCommand_FieldNumber_InitiatePayment = 22,
  AppToServerCommand_FieldNumber_CustomerActivity = 23,
};

typedef GPB_ENUM(AppToServerCommand_Entry_OneOfCase) {
  AppToServerCommand_Entry_OneOfCase_GPBUnsetOneOfCase = 0,
  AppToServerCommand_Entry_OneOfCase_GenerateAuthToken = 1,
  AppToServerCommand_Entry_OneOfCase_CreateCustomer = 2,
  AppToServerCommand_Entry_OneOfCase_GetCustomerState = 3,
  AppToServerCommand_Entry_OneOfCase_AdoptCustomerState = 4,
  AppToServerCommand_Entry_OneOfCase_AddCustomerReminder = 5,
  AppToServerCommand_Entry_OneOfCase_AddCustomerReminderTag = 6,
  AppToServerCommand_Entry_OneOfCase_CancelCustomerReminder = 7,
  AppToServerCommand_Entry_OneOfCase_CancelCustomerReminderTag = 8,
  AppToServerCommand_Entry_OneOfCase_UpdateCustomerTag = 9,
  AppToServerCommand_Entry_OneOfCase_DeleteCustomerTag = 10,
  AppToServerCommand_Entry_OneOfCase_UpdateCustomerSecondaryId = 11,
  AppToServerCommand_Entry_OneOfCase_DeleteCustomerSecondaryId = 12,
  AppToServerCommand_Entry_OneOfCase_UpdateCustomerMetadata = 13,
  AppToServerCommand_Entry_OneOfCase_DeleteCustomerMetadata = 14,
  AppToServerCommand_Entry_OneOfCase_LeaseCustomerAppData = 15,
  AppToServerCommand_Entry_OneOfCase_UpdateCustomerAppData = 16,
  AppToServerCommand_Entry_OneOfCase_DeleteCustomerAppData = 17,
  AppToServerCommand_Entry_OneOfCase_SendMessage = 18,
  AppToServerCommand_Entry_OneOfCase_SendMessageTag = 19,
  AppToServerCommand_Entry_OneOfCase_ReplyToMessage = 20,
  AppToServerCommand_Entry_OneOfCase_UpdateMessagingConsent = 21,
  AppToServerCommand_Entry_OneOfCase_InitiatePayment = 22,
  AppToServerCommand_Entry_OneOfCase_CustomerActivity = 23,
};

GPB_FINAL @interface AppToServerCommand : GPBMessage

@property(nonatomic, readonly) AppToServerCommand_Entry_OneOfCase entryOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) GenerateAuthTokenCommand *generateAuthToken;

@property(nonatomic, readwrite, strong, null_resettable) CreateCustomerCommand *createCustomer;

@property(nonatomic, readwrite, strong, null_resettable) GetCustomerStateCommand *getCustomerState;

@property(nonatomic, readwrite, strong, null_resettable) AdoptCustomerStateCommand *adoptCustomerState;

@property(nonatomic, readwrite, strong, null_resettable) AddCustomerReminderCommand *addCustomerReminder;

@property(nonatomic, readwrite, strong, null_resettable) AddCustomerReminderTagCommand *addCustomerReminderTag;

@property(nonatomic, readwrite, strong, null_resettable) CancelCustomerReminderCommand *cancelCustomerReminder;

@property(nonatomic, readwrite, strong, null_resettable) CancelCustomerReminderTagCommand *cancelCustomerReminderTag;

@property(nonatomic, readwrite, strong, null_resettable) UpdateCustomerTagCommand *updateCustomerTag;

@property(nonatomic, readwrite, strong, null_resettable) DeleteCustomerTagCommand *deleteCustomerTag;

@property(nonatomic, readwrite, strong, null_resettable) UpdateCustomerSecondaryIdCommand *updateCustomerSecondaryId;

@property(nonatomic, readwrite, strong, null_resettable) DeleteCustomerSecondaryIdCommand *deleteCustomerSecondaryId;

@property(nonatomic, readwrite, strong, null_resettable) UpdateCustomerMetadataCommand *updateCustomerMetadata;

@property(nonatomic, readwrite, strong, null_resettable) DeleteCustomerMetadataCommand *deleteCustomerMetadata;

@property(nonatomic, readwrite, strong, null_resettable) LeaseCustomerAppDataCommand *leaseCustomerAppData;

@property(nonatomic, readwrite, strong, null_resettable) UpdateCustomerAppDataCommand *updateCustomerAppData;

@property(nonatomic, readwrite, strong, null_resettable) DeleteCustomerAppDataCommand *deleteCustomerAppData;

@property(nonatomic, readwrite, strong, null_resettable) SendMessageCommand *sendMessage;

@property(nonatomic, readwrite, strong, null_resettable) SendMessageTagCommand *sendMessageTag;

@property(nonatomic, readwrite, strong, null_resettable) ReplyToMessageCommand *replyToMessage;

@property(nonatomic, readwrite, strong, null_resettable) UpdateMessagingConsentCommand *updateMessagingConsent;

@property(nonatomic, readwrite, strong, null_resettable) InitiatePaymentCommand *initiatePayment;

@property(nonatomic, readwrite, strong, null_resettable) CustomerActivityCommand *customerActivity;

@end

/**
 * Clears whatever value was set for the oneof 'entry'.
 **/
void AppToServerCommand_ClearEntryOneOfCase(AppToServerCommand *message);

#pragma mark - AppToServerCommandReply

typedef GPB_ENUM(AppToServerCommandReply_FieldNumber) {
  AppToServerCommandReply_FieldNumber_GenerateAuthToken = 1,
  AppToServerCommandReply_FieldNumber_GetCustomerState = 2,
  AppToServerCommandReply_FieldNumber_UpdateCustomerState = 3,
  AppToServerCommandReply_FieldNumber_UpdateCustomerAppData = 4,
  AppToServerCommandReply_FieldNumber_LeaseCustomerAppData = 5,
  AppToServerCommandReply_FieldNumber_SendMessage = 6,
  AppToServerCommandReply_FieldNumber_UpdateMessagingConsent = 7,
  AppToServerCommandReply_FieldNumber_InitiatePayment = 8,
  AppToServerCommandReply_FieldNumber_TagCommand = 9,
  AppToServerCommandReply_FieldNumber_CustomerActivity = 10,
};

typedef GPB_ENUM(AppToServerCommandReply_Entry_OneOfCase) {
  AppToServerCommandReply_Entry_OneOfCase_GPBUnsetOneOfCase = 0,
  AppToServerCommandReply_Entry_OneOfCase_GenerateAuthToken = 1,
  AppToServerCommandReply_Entry_OneOfCase_GetCustomerState = 2,
  AppToServerCommandReply_Entry_OneOfCase_UpdateCustomerState = 3,
  AppToServerCommandReply_Entry_OneOfCase_UpdateCustomerAppData = 4,
  AppToServerCommandReply_Entry_OneOfCase_LeaseCustomerAppData = 5,
  AppToServerCommandReply_Entry_OneOfCase_SendMessage = 6,
  AppToServerCommandReply_Entry_OneOfCase_UpdateMessagingConsent = 7,
  AppToServerCommandReply_Entry_OneOfCase_InitiatePayment = 8,
  AppToServerCommandReply_Entry_OneOfCase_TagCommand = 9,
  AppToServerCommandReply_Entry_OneOfCase_CustomerActivity = 10,
};

GPB_FINAL @interface AppToServerCommandReply : GPBMessage

@property(nonatomic, readonly) AppToServerCommandReply_Entry_OneOfCase entryOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) GenerateAuthTokenReply *generateAuthToken;

@property(nonatomic, readwrite, strong, null_resettable) GetCustomerStateReply *getCustomerState;

@property(nonatomic, readwrite, strong, null_resettable) UpdateCustomerStateReply *updateCustomerState;

@property(nonatomic, readwrite, strong, null_resettable) UpdateCustomerAppDataReply *updateCustomerAppData;

@property(nonatomic, readwrite, strong, null_resettable) LeaseCustomerAppDataReply *leaseCustomerAppData;

@property(nonatomic, readwrite, strong, null_resettable) SendMessageReply *sendMessage;

@property(nonatomic, readwrite, strong, null_resettable) UpdateMessagingConsentReply *updateMessagingConsent;

@property(nonatomic, readwrite, strong, null_resettable) InitiatePaymentReply *initiatePayment;

@property(nonatomic, readwrite, strong, null_resettable) TagCommandReply *tagCommand;

@property(nonatomic, readwrite, strong, null_resettable) CustomerActivityReply *customerActivity;

@end

/**
 * Clears whatever value was set for the oneof 'entry'.
 **/
void AppToServerCommandReply_ClearEntryOneOfCase(AppToServerCommandReply *message);

#pragma mark - GenerateAuthTokenCommand

GPB_FINAL @interface GenerateAuthTokenCommand : GPBMessage

@end

#pragma mark - GenerateAuthTokenReply

typedef GPB_ENUM(GenerateAuthTokenReply_FieldNumber) {
  GenerateAuthTokenReply_FieldNumber_Token = 1,
  GenerateAuthTokenReply_FieldNumber_Lifetime = 2,
};

GPB_FINAL @interface GenerateAuthTokenReply : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite, strong, null_resettable) GPBDuration *lifetime;
/** Test to see if @c lifetime has been set. */
@property(nonatomic, readwrite) BOOL hasLifetime;

@end

#pragma mark - CreateCustomerCommand

typedef GPB_ENUM(CreateCustomerCommand_FieldNumber) {
  CreateCustomerCommand_FieldNumber_CustomerNumber = 1,
};

GPB_FINAL @interface CreateCustomerCommand : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@end

#pragma mark - GetCustomerStateCommand

typedef GPB_ENUM(GetCustomerStateCommand_FieldNumber) {
  GetCustomerStateCommand_FieldNumber_CustomerId = 1,
  GetCustomerStateCommand_FieldNumber_CustomerNumber = 2,
  GetCustomerStateCommand_FieldNumber_SecondaryId = 3,
};

typedef GPB_ENUM(GetCustomerStateCommand_Customer_OneOfCase) {
  GetCustomerStateCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  GetCustomerStateCommand_Customer_OneOfCase_CustomerId = 1,
  GetCustomerStateCommand_Customer_OneOfCase_CustomerNumber = 2,
  GetCustomerStateCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface GetCustomerStateCommand : GPBMessage

@property(nonatomic, readonly) GetCustomerStateCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void GetCustomerStateCommand_ClearCustomerOneOfCase(GetCustomerStateCommand *message);

#pragma mark - GetCustomerStateReply

typedef GPB_ENUM(GetCustomerStateReply_FieldNumber) {
  GetCustomerStateReply_FieldNumber_Status = 1,
  GetCustomerStateReply_FieldNumber_Description_p = 2,
  GetCustomerStateReply_FieldNumber_Data_p = 3,
};

GPB_FINAL @interface GetCustomerStateReply : GPBMessage

@property(nonatomic, readwrite) BOOL status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) CustomerStateReplyData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - CustomerStateReplyData

typedef GPB_ENUM(CustomerStateReplyData_FieldNumber) {
  CustomerStateReplyData_FieldNumber_CustomerId = 1,
  CustomerStateReplyData_FieldNumber_IdentityState = 2,
  CustomerStateReplyData_FieldNumber_MessagingState = 3,
  CustomerStateReplyData_FieldNumber_PaymentState = 4,
  CustomerStateReplyData_FieldNumber_ActivityState = 5,
};

GPB_FINAL @interface CustomerStateReplyData : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) IdentityState *identityState;
/** Test to see if @c identityState has been set. */
@property(nonatomic, readwrite) BOOL hasIdentityState;

@property(nonatomic, readwrite, strong, null_resettable) MessagingState *messagingState;
/** Test to see if @c messagingState has been set. */
@property(nonatomic, readwrite) BOOL hasMessagingState;

@property(nonatomic, readwrite, strong, null_resettable) PaymentState *paymentState;
/** Test to see if @c paymentState has been set. */
@property(nonatomic, readwrite) BOOL hasPaymentState;

@property(nonatomic, readwrite, strong, null_resettable) ActivityState *activityState;
/** Test to see if @c activityState has been set. */
@property(nonatomic, readwrite) BOOL hasActivityState;

@end

#pragma mark - AdoptCustomerStateCommand

typedef GPB_ENUM(AdoptCustomerStateCommand_FieldNumber) {
  AdoptCustomerStateCommand_FieldNumber_CustomerId = 1,
  AdoptCustomerStateCommand_FieldNumber_OtherCustomerId = 2,
  AdoptCustomerStateCommand_FieldNumber_OtherCustomerNumber = 3,
  AdoptCustomerStateCommand_FieldNumber_OtherSecondaryId = 4,
};

typedef GPB_ENUM(AdoptCustomerStateCommand_OtherCustomer_OneOfCase) {
  AdoptCustomerStateCommand_OtherCustomer_OneOfCase_GPBUnsetOneOfCase = 0,
  AdoptCustomerStateCommand_OtherCustomer_OneOfCase_OtherCustomerId = 2,
  AdoptCustomerStateCommand_OtherCustomer_OneOfCase_OtherCustomerNumber = 3,
  AdoptCustomerStateCommand_OtherCustomer_OneOfCase_OtherSecondaryId = 4,
};

GPB_FINAL @interface AdoptCustomerStateCommand : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readonly) AdoptCustomerStateCommand_OtherCustomer_OneOfCase otherCustomerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *otherCustomerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *otherCustomerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *otherSecondaryId;

@end

/**
 * Clears whatever value was set for the oneof 'otherCustomer'.
 **/
void AdoptCustomerStateCommand_ClearOtherCustomerOneOfCase(AdoptCustomerStateCommand *message);

#pragma mark - AddCustomerReminderCommand

typedef GPB_ENUM(AddCustomerReminderCommand_FieldNumber) {
  AddCustomerReminderCommand_FieldNumber_CustomerId = 1,
  AddCustomerReminderCommand_FieldNumber_CustomerNumber = 2,
  AddCustomerReminderCommand_FieldNumber_SecondaryId = 3,
  AddCustomerReminderCommand_FieldNumber_Reminder = 4,
};

typedef GPB_ENUM(AddCustomerReminderCommand_Customer_OneOfCase) {
  AddCustomerReminderCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  AddCustomerReminderCommand_Customer_OneOfCase_CustomerId = 1,
  AddCustomerReminderCommand_Customer_OneOfCase_CustomerNumber = 2,
  AddCustomerReminderCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface AddCustomerReminderCommand : GPBMessage

@property(nonatomic, readonly) AddCustomerReminderCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerReminder *reminder;
/** Test to see if @c reminder has been set. */
@property(nonatomic, readwrite) BOOL hasReminder;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void AddCustomerReminderCommand_ClearCustomerOneOfCase(AddCustomerReminderCommand *message);

#pragma mark - AddCustomerReminderTagCommand

typedef GPB_ENUM(AddCustomerReminderTagCommand_FieldNumber) {
  AddCustomerReminderTagCommand_FieldNumber_Tag = 1,
  AddCustomerReminderTagCommand_FieldNumber_Reminder = 2,
};

GPB_FINAL @interface AddCustomerReminderTagCommand : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *tag;
/** Test to see if @c tag has been set. */
@property(nonatomic, readwrite) BOOL hasTag;

@property(nonatomic, readwrite, strong, null_resettable) CustomerReminder *reminder;
/** Test to see if @c reminder has been set. */
@property(nonatomic, readwrite) BOOL hasReminder;

@end

#pragma mark - CancelCustomerReminderCommand

typedef GPB_ENUM(CancelCustomerReminderCommand_FieldNumber) {
  CancelCustomerReminderCommand_FieldNumber_CustomerId = 1,
  CancelCustomerReminderCommand_FieldNumber_CustomerNumber = 2,
  CancelCustomerReminderCommand_FieldNumber_SecondaryId = 3,
  CancelCustomerReminderCommand_FieldNumber_Key = 4,
};

typedef GPB_ENUM(CancelCustomerReminderCommand_Customer_OneOfCase) {
  CancelCustomerReminderCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  CancelCustomerReminderCommand_Customer_OneOfCase_CustomerId = 1,
  CancelCustomerReminderCommand_Customer_OneOfCase_CustomerNumber = 2,
  CancelCustomerReminderCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface CancelCustomerReminderCommand : GPBMessage

@property(nonatomic, readonly) CancelCustomerReminderCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void CancelCustomerReminderCommand_ClearCustomerOneOfCase(CancelCustomerReminderCommand *message);

#pragma mark - CancelCustomerReminderTagCommand

typedef GPB_ENUM(CancelCustomerReminderTagCommand_FieldNumber) {
  CancelCustomerReminderTagCommand_FieldNumber_Tag = 1,
  CancelCustomerReminderTagCommand_FieldNumber_Key = 2,
};

GPB_FINAL @interface CancelCustomerReminderTagCommand : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *tag;
/** Test to see if @c tag has been set. */
@property(nonatomic, readwrite) BOOL hasTag;

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@end

#pragma mark - UpdateCustomerTagCommand

typedef GPB_ENUM(UpdateCustomerTagCommand_FieldNumber) {
  UpdateCustomerTagCommand_FieldNumber_CustomerId = 1,
  UpdateCustomerTagCommand_FieldNumber_CustomerNumber = 2,
  UpdateCustomerTagCommand_FieldNumber_SecondaryId = 3,
  UpdateCustomerTagCommand_FieldNumber_UpdatesArray = 4,
};

typedef GPB_ENUM(UpdateCustomerTagCommand_Customer_OneOfCase) {
  UpdateCustomerTagCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  UpdateCustomerTagCommand_Customer_OneOfCase_CustomerId = 1,
  UpdateCustomerTagCommand_Customer_OneOfCase_CustomerNumber = 2,
  UpdateCustomerTagCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface UpdateCustomerTagCommand : GPBMessage

@property(nonatomic, readonly) UpdateCustomerTagCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CustomerIndex*> *updatesArray;
/** The number of items in @c updatesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger updatesArray_Count;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void UpdateCustomerTagCommand_ClearCustomerOneOfCase(UpdateCustomerTagCommand *message);

#pragma mark - DeleteCustomerTagCommand

typedef GPB_ENUM(DeleteCustomerTagCommand_FieldNumber) {
  DeleteCustomerTagCommand_FieldNumber_CustomerId = 1,
  DeleteCustomerTagCommand_FieldNumber_CustomerNumber = 2,
  DeleteCustomerTagCommand_FieldNumber_SecondaryId = 3,
  DeleteCustomerTagCommand_FieldNumber_DeletionsArray = 4,
};

typedef GPB_ENUM(DeleteCustomerTagCommand_Customer_OneOfCase) {
  DeleteCustomerTagCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  DeleteCustomerTagCommand_Customer_OneOfCase_CustomerId = 1,
  DeleteCustomerTagCommand_Customer_OneOfCase_CustomerNumber = 2,
  DeleteCustomerTagCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface DeleteCustomerTagCommand : GPBMessage

@property(nonatomic, readonly) DeleteCustomerTagCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *deletionsArray;
/** The number of items in @c deletionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger deletionsArray_Count;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void DeleteCustomerTagCommand_ClearCustomerOneOfCase(DeleteCustomerTagCommand *message);

#pragma mark - UpdateCustomerSecondaryIdCommand

typedef GPB_ENUM(UpdateCustomerSecondaryIdCommand_FieldNumber) {
  UpdateCustomerSecondaryIdCommand_FieldNumber_CustomerId = 1,
  UpdateCustomerSecondaryIdCommand_FieldNumber_CustomerNumber = 2,
  UpdateCustomerSecondaryIdCommand_FieldNumber_SecondaryId = 3,
  UpdateCustomerSecondaryIdCommand_FieldNumber_UpdatesArray = 4,
};

typedef GPB_ENUM(UpdateCustomerSecondaryIdCommand_Customer_OneOfCase) {
  UpdateCustomerSecondaryIdCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  UpdateCustomerSecondaryIdCommand_Customer_OneOfCase_CustomerId = 1,
  UpdateCustomerSecondaryIdCommand_Customer_OneOfCase_CustomerNumber = 2,
  UpdateCustomerSecondaryIdCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface UpdateCustomerSecondaryIdCommand : GPBMessage

@property(nonatomic, readonly) UpdateCustomerSecondaryIdCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CustomerIndex*> *updatesArray;
/** The number of items in @c updatesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger updatesArray_Count;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void UpdateCustomerSecondaryIdCommand_ClearCustomerOneOfCase(UpdateCustomerSecondaryIdCommand *message);

#pragma mark - DeleteCustomerSecondaryIdCommand

typedef GPB_ENUM(DeleteCustomerSecondaryIdCommand_FieldNumber) {
  DeleteCustomerSecondaryIdCommand_FieldNumber_CustomerId = 1,
  DeleteCustomerSecondaryIdCommand_FieldNumber_CustomerNumber = 2,
  DeleteCustomerSecondaryIdCommand_FieldNumber_SecondaryId = 3,
  DeleteCustomerSecondaryIdCommand_FieldNumber_DeletionsArray = 4,
};

typedef GPB_ENUM(DeleteCustomerSecondaryIdCommand_Customer_OneOfCase) {
  DeleteCustomerSecondaryIdCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  DeleteCustomerSecondaryIdCommand_Customer_OneOfCase_CustomerId = 1,
  DeleteCustomerSecondaryIdCommand_Customer_OneOfCase_CustomerNumber = 2,
  DeleteCustomerSecondaryIdCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface DeleteCustomerSecondaryIdCommand : GPBMessage

@property(nonatomic, readonly) DeleteCustomerSecondaryIdCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<IndexMapping*> *deletionsArray;
/** The number of items in @c deletionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger deletionsArray_Count;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void DeleteCustomerSecondaryIdCommand_ClearCustomerOneOfCase(DeleteCustomerSecondaryIdCommand *message);

#pragma mark - UpdateCustomerMetadataCommand

typedef GPB_ENUM(UpdateCustomerMetadataCommand_FieldNumber) {
  UpdateCustomerMetadataCommand_FieldNumber_CustomerId = 1,
  UpdateCustomerMetadataCommand_FieldNumber_CustomerNumber = 2,
  UpdateCustomerMetadataCommand_FieldNumber_SecondaryId = 3,
  UpdateCustomerMetadataCommand_FieldNumber_Updates = 4,
};

typedef GPB_ENUM(UpdateCustomerMetadataCommand_Customer_OneOfCase) {
  UpdateCustomerMetadataCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  UpdateCustomerMetadataCommand_Customer_OneOfCase_CustomerId = 1,
  UpdateCustomerMetadataCommand_Customer_OneOfCase_CustomerNumber = 2,
  UpdateCustomerMetadataCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface UpdateCustomerMetadataCommand : GPBMessage

@property(nonatomic, readonly) UpdateCustomerMetadataCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, DataMapValue*> *updates;
/** The number of items in @c updates without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger updates_Count;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void UpdateCustomerMetadataCommand_ClearCustomerOneOfCase(UpdateCustomerMetadataCommand *message);

#pragma mark - DeleteCustomerMetadataCommand

typedef GPB_ENUM(DeleteCustomerMetadataCommand_FieldNumber) {
  DeleteCustomerMetadataCommand_FieldNumber_CustomerId = 1,
  DeleteCustomerMetadataCommand_FieldNumber_CustomerNumber = 2,
  DeleteCustomerMetadataCommand_FieldNumber_SecondaryId = 3,
  DeleteCustomerMetadataCommand_FieldNumber_DeletionsArray = 4,
};

typedef GPB_ENUM(DeleteCustomerMetadataCommand_Customer_OneOfCase) {
  DeleteCustomerMetadataCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  DeleteCustomerMetadataCommand_Customer_OneOfCase_CustomerId = 1,
  DeleteCustomerMetadataCommand_Customer_OneOfCase_CustomerNumber = 2,
  DeleteCustomerMetadataCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface DeleteCustomerMetadataCommand : GPBMessage

@property(nonatomic, readonly) DeleteCustomerMetadataCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *deletionsArray;
/** The number of items in @c deletionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger deletionsArray_Count;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void DeleteCustomerMetadataCommand_ClearCustomerOneOfCase(DeleteCustomerMetadataCommand *message);

#pragma mark - UpdateCustomerStateReply

typedef GPB_ENUM(UpdateCustomerStateReply_FieldNumber) {
  UpdateCustomerStateReply_FieldNumber_Status = 1,
  UpdateCustomerStateReply_FieldNumber_Description_p = 2,
  UpdateCustomerStateReply_FieldNumber_CustomerId = 3,
};

GPB_FINAL @interface UpdateCustomerStateReply : GPBMessage

@property(nonatomic, readwrite) BOOL status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *customerId;
/** Test to see if @c customerId has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerId;

@end

#pragma mark - UpdateCustomerAppDataCommand

typedef GPB_ENUM(UpdateCustomerAppDataCommand_FieldNumber) {
  UpdateCustomerAppDataCommand_FieldNumber_CustomerId = 1,
  UpdateCustomerAppDataCommand_FieldNumber_CustomerNumber = 2,
  UpdateCustomerAppDataCommand_FieldNumber_SecondaryId = 3,
  UpdateCustomerAppDataCommand_FieldNumber_Update = 4,
};

typedef GPB_ENUM(UpdateCustomerAppDataCommand_Customer_OneOfCase) {
  UpdateCustomerAppDataCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  UpdateCustomerAppDataCommand_Customer_OneOfCase_CustomerId = 1,
  UpdateCustomerAppDataCommand_Customer_OneOfCase_CustomerNumber = 2,
  UpdateCustomerAppDataCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface UpdateCustomerAppDataCommand : GPBMessage

@property(nonatomic, readonly) UpdateCustomerAppDataCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@property(nonatomic, readwrite, strong, null_resettable) DataMapValue *update;
/** Test to see if @c update has been set. */
@property(nonatomic, readwrite) BOOL hasUpdate;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void UpdateCustomerAppDataCommand_ClearCustomerOneOfCase(UpdateCustomerAppDataCommand *message);

#pragma mark - DeleteCustomerAppDataCommand

typedef GPB_ENUM(DeleteCustomerAppDataCommand_FieldNumber) {
  DeleteCustomerAppDataCommand_FieldNumber_CustomerId = 1,
  DeleteCustomerAppDataCommand_FieldNumber_CustomerNumber = 2,
  DeleteCustomerAppDataCommand_FieldNumber_SecondaryId = 3,
};

typedef GPB_ENUM(DeleteCustomerAppDataCommand_Customer_OneOfCase) {
  DeleteCustomerAppDataCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  DeleteCustomerAppDataCommand_Customer_OneOfCase_CustomerId = 1,
  DeleteCustomerAppDataCommand_Customer_OneOfCase_CustomerNumber = 2,
  DeleteCustomerAppDataCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface DeleteCustomerAppDataCommand : GPBMessage

@property(nonatomic, readonly) DeleteCustomerAppDataCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void DeleteCustomerAppDataCommand_ClearCustomerOneOfCase(DeleteCustomerAppDataCommand *message);

#pragma mark - UpdateCustomerAppDataReply

typedef GPB_ENUM(UpdateCustomerAppDataReply_FieldNumber) {
  UpdateCustomerAppDataReply_FieldNumber_Status = 1,
  UpdateCustomerAppDataReply_FieldNumber_Description_p = 2,
  UpdateCustomerAppDataReply_FieldNumber_CustomerId = 3,
};

GPB_FINAL @interface UpdateCustomerAppDataReply : GPBMessage

@property(nonatomic, readwrite) BOOL status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *customerId;
/** Test to see if @c customerId has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerId;

@end

#pragma mark - LeaseCustomerAppDataCommand

typedef GPB_ENUM(LeaseCustomerAppDataCommand_FieldNumber) {
  LeaseCustomerAppDataCommand_FieldNumber_CustomerId = 1,
  LeaseCustomerAppDataCommand_FieldNumber_CustomerNumber = 2,
  LeaseCustomerAppDataCommand_FieldNumber_SecondaryId = 3,
};

typedef GPB_ENUM(LeaseCustomerAppDataCommand_Customer_OneOfCase) {
  LeaseCustomerAppDataCommand_Customer_OneOfCase_GPBUnsetOneOfCase = 0,
  LeaseCustomerAppDataCommand_Customer_OneOfCase_CustomerId = 1,
  LeaseCustomerAppDataCommand_Customer_OneOfCase_CustomerNumber = 2,
  LeaseCustomerAppDataCommand_Customer_OneOfCase_SecondaryId = 3,
};

GPB_FINAL @interface LeaseCustomerAppDataCommand : GPBMessage

@property(nonatomic, readonly) LeaseCustomerAppDataCommand_Customer_OneOfCase customerOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *secondaryId;

@end

/**
 * Clears whatever value was set for the oneof 'customer'.
 **/
void LeaseCustomerAppDataCommand_ClearCustomerOneOfCase(LeaseCustomerAppDataCommand *message);

#pragma mark - LeaseCustomerAppDataReply

typedef GPB_ENUM(LeaseCustomerAppDataReply_FieldNumber) {
  LeaseCustomerAppDataReply_FieldNumber_Status = 1,
  LeaseCustomerAppDataReply_FieldNumber_Description_p = 2,
  LeaseCustomerAppDataReply_FieldNumber_CustomerId = 3,
  LeaseCustomerAppDataReply_FieldNumber_Value = 4,
};

GPB_FINAL @interface LeaseCustomerAppDataReply : GPBMessage

@property(nonatomic, readwrite) BOOL status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *customerId;
/** Test to see if @c customerId has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerId;

@property(nonatomic, readwrite, strong, null_resettable) DataMapValue *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

@end

#pragma mark - SendMessageCommand

typedef GPB_ENUM(SendMessageCommand_FieldNumber) {
  SendMessageCommand_FieldNumber_CustomerNumber = 1,
  SendMessageCommand_FieldNumber_ChannelNumber = 2,
  SendMessageCommand_FieldNumber_Message = 3,
};

GPB_FINAL @interface SendMessageCommand : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@property(nonatomic, readwrite, strong, null_resettable) MessagingChannelNumber *channelNumber;
/** Test to see if @c channelNumber has been set. */
@property(nonatomic, readwrite) BOOL hasChannelNumber;

@property(nonatomic, readwrite, strong, null_resettable) OutboundMessage *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - ReplyToMessageCommand

typedef GPB_ENUM(ReplyToMessageCommand_FieldNumber) {
  ReplyToMessageCommand_FieldNumber_CustomerId = 1,
  ReplyToMessageCommand_FieldNumber_MessageId = 2,
  ReplyToMessageCommand_FieldNumber_Message = 3,
};

GPB_FINAL @interface ReplyToMessageCommand : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *messageId;

@property(nonatomic, readwrite, strong, null_resettable) OutboundMessage *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - SendMessageTagCommand

typedef GPB_ENUM(SendMessageTagCommand_FieldNumber) {
  SendMessageTagCommand_FieldNumber_Tag = 1,
  SendMessageTagCommand_FieldNumber_ChannelNumber = 2,
  SendMessageTagCommand_FieldNumber_Message = 3,
};

GPB_FINAL @interface SendMessageTagCommand : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) IndexMapping *tag;
/** Test to see if @c tag has been set. */
@property(nonatomic, readwrite) BOOL hasTag;

@property(nonatomic, readwrite, strong, null_resettable) MessagingChannelNumber *channelNumber;
/** Test to see if @c channelNumber has been set. */
@property(nonatomic, readwrite) BOOL hasChannelNumber;

@property(nonatomic, readwrite, strong, null_resettable) OutboundMessage *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - SendMessageReply

typedef GPB_ENUM(SendMessageReply_FieldNumber) {
  SendMessageReply_FieldNumber_Status = 1,
  SendMessageReply_FieldNumber_Description_p = 2,
  SendMessageReply_FieldNumber_MessageId = 3,
  SendMessageReply_FieldNumber_SessionId = 4,
  SendMessageReply_FieldNumber_CustomerId = 5,
};

GPB_FINAL @interface SendMessageReply : GPBMessage

@property(nonatomic, readwrite) enum MessageDeliveryStatus status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *messageId;
/** Test to see if @c messageId has been set. */
@property(nonatomic, readwrite) BOOL hasMessageId;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *customerId;
/** Test to see if @c customerId has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerId;

@end

/**
 * Fetches the raw value of a @c SendMessageReply's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SendMessageReply_Status_RawValue(SendMessageReply *message);
/**
 * Sets the raw value of an @c SendMessageReply's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSendMessageReply_Status_RawValue(SendMessageReply *message, int32_t value);

#pragma mark - UpdateMessagingConsentCommand

typedef GPB_ENUM(UpdateMessagingConsentCommand_FieldNumber) {
  UpdateMessagingConsentCommand_FieldNumber_CustomerNumber = 1,
  UpdateMessagingConsentCommand_FieldNumber_ChannelNumber = 2,
  UpdateMessagingConsentCommand_FieldNumber_Update = 3,
};

GPB_FINAL @interface UpdateMessagingConsentCommand : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@property(nonatomic, readwrite, strong, null_resettable) MessagingChannelNumber *channelNumber;
/** Test to see if @c channelNumber has been set. */
@property(nonatomic, readwrite) BOOL hasChannelNumber;

@property(nonatomic, readwrite) enum MessagingConsentUpdate update;

@end

/**
 * Fetches the raw value of a @c UpdateMessagingConsentCommand's @c update property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UpdateMessagingConsentCommand_Update_RawValue(UpdateMessagingConsentCommand *message);
/**
 * Sets the raw value of an @c UpdateMessagingConsentCommand's @c update property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUpdateMessagingConsentCommand_Update_RawValue(UpdateMessagingConsentCommand *message, int32_t value);

#pragma mark - UpdateMessagingConsentReply

typedef GPB_ENUM(UpdateMessagingConsentReply_FieldNumber) {
  UpdateMessagingConsentReply_FieldNumber_Status = 1,
  UpdateMessagingConsentReply_FieldNumber_Description_p = 2,
  UpdateMessagingConsentReply_FieldNumber_CustomerId = 3,
};

GPB_FINAL @interface UpdateMessagingConsentReply : GPBMessage

@property(nonatomic, readwrite) enum MessagingConsentUpdateStatus status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *customerId;
/** Test to see if @c customerId has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerId;

@end

/**
 * Fetches the raw value of a @c UpdateMessagingConsentReply's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UpdateMessagingConsentReply_Status_RawValue(UpdateMessagingConsentReply *message);
/**
 * Sets the raw value of an @c UpdateMessagingConsentReply's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUpdateMessagingConsentReply_Status_RawValue(UpdateMessagingConsentReply *message, int32_t value);

#pragma mark - InitiatePaymentCommand

typedef GPB_ENUM(InitiatePaymentCommand_FieldNumber) {
  InitiatePaymentCommand_FieldNumber_DebitParty = 1,
  InitiatePaymentCommand_FieldNumber_CreditParty = 2,
  InitiatePaymentCommand_FieldNumber_Value = 3,
};

GPB_FINAL @interface InitiatePaymentCommand : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PaymentCounterParty *debitParty;
/** Test to see if @c debitParty has been set. */
@property(nonatomic, readwrite) BOOL hasDebitParty;

@property(nonatomic, readwrite, strong, null_resettable) PaymentCounterParty *creditParty;
/** Test to see if @c creditParty has been set. */
@property(nonatomic, readwrite) BOOL hasCreditParty;

@property(nonatomic, readwrite, strong, null_resettable) Cash *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

@end

#pragma mark - InitiatePaymentReply

typedef GPB_ENUM(InitiatePaymentReply_FieldNumber) {
  InitiatePaymentReply_FieldNumber_Status = 1,
  InitiatePaymentReply_FieldNumber_Description_p = 2,
  InitiatePaymentReply_FieldNumber_TransactionId = 3,
  InitiatePaymentReply_FieldNumber_DebitCustomerId = 4,
  InitiatePaymentReply_FieldNumber_CreditCustomerId = 5,
};

GPB_FINAL @interface InitiatePaymentReply : GPBMessage

@property(nonatomic, readwrite) enum PaymentStatus status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *transactionId;
/** Test to see if @c transactionId has been set. */
@property(nonatomic, readwrite) BOOL hasTransactionId;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *debitCustomerId;
/** Test to see if @c debitCustomerId has been set. */
@property(nonatomic, readwrite) BOOL hasDebitCustomerId;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *creditCustomerId;
/** Test to see if @c creditCustomerId has been set. */
@property(nonatomic, readwrite) BOOL hasCreditCustomerId;

@end

/**
 * Fetches the raw value of a @c InitiatePaymentReply's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t InitiatePaymentReply_Status_RawValue(InitiatePaymentReply *message);
/**
 * Sets the raw value of an @c InitiatePaymentReply's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetInitiatePaymentReply_Status_RawValue(InitiatePaymentReply *message, int32_t value);

#pragma mark - TagCommandReply

typedef GPB_ENUM(TagCommandReply_FieldNumber) {
  TagCommandReply_FieldNumber_Status = 1,
  TagCommandReply_FieldNumber_Description_p = 2,
  TagCommandReply_FieldNumber_WorkId = 3,
};

GPB_FINAL @interface TagCommandReply : GPBMessage

@property(nonatomic, readwrite) BOOL status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *workId;
/** Test to see if @c workId has been set. */
@property(nonatomic, readwrite) BOOL hasWorkId;

@end

#pragma mark - CustomerActivityCommand

typedef GPB_ENUM(CustomerActivityCommand_FieldNumber) {
  CustomerActivityCommand_FieldNumber_CustomerNumber = 1,
  CustomerActivityCommand_FieldNumber_Source = 2,
  CustomerActivityCommand_FieldNumber_SessionId = 3,
  CustomerActivityCommand_FieldNumber_Key = 4,
  CustomerActivityCommand_FieldNumber_Properties = 5,
};

GPB_FINAL @interface CustomerActivityCommand : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@property(nonatomic, readwrite, copy, null_resettable) NSString *source;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *properties;
/** The number of items in @c properties without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger properties_Count;

@end

#pragma mark - CustomerActivityReply

typedef GPB_ENUM(CustomerActivityReply_FieldNumber) {
  CustomerActivityReply_FieldNumber_Status = 1,
  CustomerActivityReply_FieldNumber_Description_p = 2,
  CustomerActivityReply_FieldNumber_CustomerId = 3,
};

GPB_FINAL @interface CustomerActivityReply : GPBMessage

@property(nonatomic, readwrite) BOOL status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *customerId;
/** Test to see if @c customerId has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerId;

@end

#pragma mark - ServerToAppNotification

typedef GPB_ENUM(ServerToAppNotification_FieldNumber) {
  ServerToAppNotification_FieldNumber_Customer = 1,
  ServerToAppNotification_FieldNumber_Purse = 2,
};

typedef GPB_ENUM(ServerToAppNotification_Entry_OneOfCase) {
  ServerToAppNotification_Entry_OneOfCase_GPBUnsetOneOfCase = 0,
  ServerToAppNotification_Entry_OneOfCase_Customer = 1,
  ServerToAppNotification_Entry_OneOfCase_Purse = 2,
};

GPB_FINAL @interface ServerToAppNotification : GPBMessage

@property(nonatomic, readonly) ServerToAppNotification_Entry_OneOfCase entryOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) ServerToAppCustomerNotification *customer;

@property(nonatomic, readwrite, strong, null_resettable) ServerToAppPurseNotification *purse;

@end

/**
 * Clears whatever value was set for the oneof 'entry'.
 **/
void ServerToAppNotification_ClearEntryOneOfCase(ServerToAppNotification *message);

#pragma mark - ServerToAppCustomerNotification

typedef GPB_ENUM(ServerToAppCustomerNotification_FieldNumber) {
  ServerToAppCustomerNotification_FieldNumber_OrgId = 1,
  ServerToAppCustomerNotification_FieldNumber_AppId = 2,
  ServerToAppCustomerNotification_FieldNumber_CustomerId = 3,
  ServerToAppCustomerNotification_FieldNumber_AppData = 4,
  ServerToAppCustomerNotification_FieldNumber_CreatedAt = 5,
  ServerToAppCustomerNotification_FieldNumber_Reminder = 6,
  ServerToAppCustomerNotification_FieldNumber_MessagingSessionStarted = 7,
  ServerToAppCustomerNotification_FieldNumber_MessagingSessionRenewed = 8,
  ServerToAppCustomerNotification_FieldNumber_MessagingSessionEnded = 9,
  ServerToAppCustomerNotification_FieldNumber_MessagingConsentUpdate = 10,
  ServerToAppCustomerNotification_FieldNumber_ReceivedMessage = 11,
  ServerToAppCustomerNotification_FieldNumber_MessageStatus = 12,
  ServerToAppCustomerNotification_FieldNumber_SentMessageReaction = 13,
  ServerToAppCustomerNotification_FieldNumber_ReceivedPayment = 14,
  ServerToAppCustomerNotification_FieldNumber_PaymentStatus = 15,
  ServerToAppCustomerNotification_FieldNumber_WalletPaymentStatus = 16,
  ServerToAppCustomerNotification_FieldNumber_CustomerActivity = 17,
};

typedef GPB_ENUM(ServerToAppCustomerNotification_Entry_OneOfCase) {
  ServerToAppCustomerNotification_Entry_OneOfCase_GPBUnsetOneOfCase = 0,
  ServerToAppCustomerNotification_Entry_OneOfCase_Reminder = 6,
  ServerToAppCustomerNotification_Entry_OneOfCase_MessagingSessionStarted = 7,
  ServerToAppCustomerNotification_Entry_OneOfCase_MessagingSessionRenewed = 8,
  ServerToAppCustomerNotification_Entry_OneOfCase_MessagingSessionEnded = 9,
  ServerToAppCustomerNotification_Entry_OneOfCase_MessagingConsentUpdate = 10,
  ServerToAppCustomerNotification_Entry_OneOfCase_ReceivedMessage = 11,
  ServerToAppCustomerNotification_Entry_OneOfCase_MessageStatus = 12,
  ServerToAppCustomerNotification_Entry_OneOfCase_SentMessageReaction = 13,
  ServerToAppCustomerNotification_Entry_OneOfCase_ReceivedPayment = 14,
  ServerToAppCustomerNotification_Entry_OneOfCase_PaymentStatus = 15,
  ServerToAppCustomerNotification_Entry_OneOfCase_WalletPaymentStatus = 16,
  ServerToAppCustomerNotification_Entry_OneOfCase_CustomerActivity = 17,
};

GPB_FINAL @interface ServerToAppCustomerNotification : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *orgId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *customerId;

@property(nonatomic, readwrite, strong, null_resettable) DataMapValue *appData;
/** Test to see if @c appData has been set. */
@property(nonatomic, readwrite) BOOL hasAppData;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *createdAt;
/** Test to see if @c createdAt has been set. */
@property(nonatomic, readwrite) BOOL hasCreatedAt;

@property(nonatomic, readonly) ServerToAppCustomerNotification_Entry_OneOfCase entryOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) ReminderNotification *reminder;

@property(nonatomic, readwrite, strong, null_resettable) MessagingSessionStartedNotification *messagingSessionStarted;

@property(nonatomic, readwrite, strong, null_resettable) MessagingSessionRenewedNotification *messagingSessionRenewed;

@property(nonatomic, readwrite, strong, null_resettable) MessagingSessionEndedNotification *messagingSessionEnded;

@property(nonatomic, readwrite, strong, null_resettable) MessagingConsentUpdateNotification *messagingConsentUpdate;

@property(nonatomic, readwrite, strong, null_resettable) ReceivedMessageNotification *receivedMessage;

@property(nonatomic, readwrite, strong, null_resettable) MessageStatusNotification *messageStatus;

@property(nonatomic, readwrite, strong, null_resettable) SentMessageReactionNotification *sentMessageReaction;

@property(nonatomic, readwrite, strong, null_resettable) ReceivedPaymentNotification *receivedPayment;

@property(nonatomic, readwrite, strong, null_resettable) PaymentStatusNotification *paymentStatus;

@property(nonatomic, readwrite, strong, null_resettable) WalletPaymentStatusNotification *walletPaymentStatus;

@property(nonatomic, readwrite, strong, null_resettable) CustomerActivityNotification *customerActivity;

@end

/**
 * Clears whatever value was set for the oneof 'entry'.
 **/
void ServerToAppCustomerNotification_ClearEntryOneOfCase(ServerToAppCustomerNotification *message);

#pragma mark - ServerToAppPurseNotification

typedef GPB_ENUM(ServerToAppPurseNotification_FieldNumber) {
  ServerToAppPurseNotification_FieldNumber_OrgId = 1,
  ServerToAppPurseNotification_FieldNumber_AppId = 2,
  ServerToAppPurseNotification_FieldNumber_PurseId = 3,
  ServerToAppPurseNotification_FieldNumber_CreatedAt = 4,
  ServerToAppPurseNotification_FieldNumber_PaymentStatus = 5,
};

typedef GPB_ENUM(ServerToAppPurseNotification_Entry_OneOfCase) {
  ServerToAppPurseNotification_Entry_OneOfCase_GPBUnsetOneOfCase = 0,
  ServerToAppPurseNotification_Entry_OneOfCase_PaymentStatus = 5,
};

GPB_FINAL @interface ServerToAppPurseNotification : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *orgId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *purseId;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *createdAt;
/** Test to see if @c createdAt has been set. */
@property(nonatomic, readwrite) BOOL hasCreatedAt;

@property(nonatomic, readonly) ServerToAppPurseNotification_Entry_OneOfCase entryOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) PaymentStatusNotification *paymentStatus;

@end

/**
 * Clears whatever value was set for the oneof 'entry'.
 **/
void ServerToAppPurseNotification_ClearEntryOneOfCase(ServerToAppPurseNotification *message);

#pragma mark - AppDataUpdate

typedef GPB_ENUM(AppDataUpdate_FieldNumber) {
  AppDataUpdate_FieldNumber_Data_p = 1,
};

GPB_FINAL @interface AppDataUpdate : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) DataMapValue *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - ServerToAppNotificationReply

typedef GPB_ENUM(ServerToAppNotificationReply_FieldNumber) {
  ServerToAppNotificationReply_FieldNumber_DataUpdate = 1,
  ServerToAppNotificationReply_FieldNumber_Message = 2,
};

GPB_FINAL @interface ServerToAppNotificationReply : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) AppDataUpdate *dataUpdate;
/** Test to see if @c dataUpdate has been set. */
@property(nonatomic, readwrite) BOOL hasDataUpdate;

@property(nonatomic, readwrite, strong, null_resettable) OutboundMessage *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - ReminderNotification

typedef GPB_ENUM(ReminderNotification_FieldNumber) {
  ReminderNotification_FieldNumber_Reminder = 1,
  ReminderNotification_FieldNumber_Tag = 2,
  ReminderNotification_FieldNumber_WorkId = 3,
};

GPB_FINAL @interface ReminderNotification : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CustomerReminder *reminder;
/** Test to see if @c reminder has been set. */
@property(nonatomic, readwrite) BOOL hasReminder;

@property(nonatomic, readwrite, strong, null_resettable) CustomerIndex *tag;
/** Test to see if @c tag has been set. */
@property(nonatomic, readwrite) BOOL hasTag;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *workId;
/** Test to see if @c workId has been set. */
@property(nonatomic, readwrite) BOOL hasWorkId;

@end

#pragma mark - MessagingSessionStartedNotification

typedef GPB_ENUM(MessagingSessionStartedNotification_FieldNumber) {
  MessagingSessionStartedNotification_FieldNumber_CustomerNumber = 1,
  MessagingSessionStartedNotification_FieldNumber_ChannelNumber = 2,
  MessagingSessionStartedNotification_FieldNumber_SessionId = 3,
  MessagingSessionStartedNotification_FieldNumber_ExpiresAt = 4,
};

GPB_FINAL @interface MessagingSessionStartedNotification : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@property(nonatomic, readwrite, strong, null_resettable) MessagingChannelNumber *channelNumber;
/** Test to see if @c channelNumber has been set. */
@property(nonatomic, readwrite) BOOL hasChannelNumber;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *expiresAt;
/** Test to see if @c expiresAt has been set. */
@property(nonatomic, readwrite) BOOL hasExpiresAt;

@end

#pragma mark - MessagingSessionRenewedNotification

typedef GPB_ENUM(MessagingSessionRenewedNotification_FieldNumber) {
  MessagingSessionRenewedNotification_FieldNumber_CustomerNumber = 1,
  MessagingSessionRenewedNotification_FieldNumber_ChannelNumber = 2,
  MessagingSessionRenewedNotification_FieldNumber_SessionId = 3,
  MessagingSessionRenewedNotification_FieldNumber_ExpiresAt = 4,
};

GPB_FINAL @interface MessagingSessionRenewedNotification : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@property(nonatomic, readwrite, strong, null_resettable) MessagingChannelNumber *channelNumber;
/** Test to see if @c channelNumber has been set. */
@property(nonatomic, readwrite) BOOL hasChannelNumber;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *expiresAt;
/** Test to see if @c expiresAt has been set. */
@property(nonatomic, readwrite) BOOL hasExpiresAt;

@end

#pragma mark - MessagingSessionEndedNotification

typedef GPB_ENUM(MessagingSessionEndedNotification_FieldNumber) {
  MessagingSessionEndedNotification_FieldNumber_CustomerNumber = 1,
  MessagingSessionEndedNotification_FieldNumber_ChannelNumber = 2,
  MessagingSessionEndedNotification_FieldNumber_SessionId = 3,
  MessagingSessionEndedNotification_FieldNumber_Duration = 4,
  MessagingSessionEndedNotification_FieldNumber_Reason = 5,
};

GPB_FINAL @interface MessagingSessionEndedNotification : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@property(nonatomic, readwrite, strong, null_resettable) MessagingChannelNumber *channelNumber;
/** Test to see if @c channelNumber has been set. */
@property(nonatomic, readwrite) BOOL hasChannelNumber;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

@property(nonatomic, readwrite, strong, null_resettable) GPBDuration *duration;
/** Test to see if @c duration has been set. */
@property(nonatomic, readwrite) BOOL hasDuration;

@property(nonatomic, readwrite) enum MessagingSessionEndReason reason;

@end

/**
 * Fetches the raw value of a @c MessagingSessionEndedNotification's @c reason property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MessagingSessionEndedNotification_Reason_RawValue(MessagingSessionEndedNotification *message);
/**
 * Sets the raw value of an @c MessagingSessionEndedNotification's @c reason property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMessagingSessionEndedNotification_Reason_RawValue(MessagingSessionEndedNotification *message, int32_t value);

#pragma mark - MessagingConsentUpdateNotification

typedef GPB_ENUM(MessagingConsentUpdateNotification_FieldNumber) {
  MessagingConsentUpdateNotification_FieldNumber_CustomerNumber = 1,
  MessagingConsentUpdateNotification_FieldNumber_ChannelNumber = 2,
  MessagingConsentUpdateNotification_FieldNumber_Update = 3,
  MessagingConsentUpdateNotification_FieldNumber_Status = 4,
};

GPB_FINAL @interface MessagingConsentUpdateNotification : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@property(nonatomic, readwrite, strong, null_resettable) MessagingChannelNumber *channelNumber;
/** Test to see if @c channelNumber has been set. */
@property(nonatomic, readwrite) BOOL hasChannelNumber;

@property(nonatomic, readwrite) enum MessagingConsentUpdate update;

@property(nonatomic, readwrite) enum MessagingConsentUpdateStatus status;

@end

/**
 * Fetches the raw value of a @c MessagingConsentUpdateNotification's @c update property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MessagingConsentUpdateNotification_Update_RawValue(MessagingConsentUpdateNotification *message);
/**
 * Sets the raw value of an @c MessagingConsentUpdateNotification's @c update property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMessagingConsentUpdateNotification_Update_RawValue(MessagingConsentUpdateNotification *message, int32_t value);

/**
 * Fetches the raw value of a @c MessagingConsentUpdateNotification's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MessagingConsentUpdateNotification_Status_RawValue(MessagingConsentUpdateNotification *message);
/**
 * Sets the raw value of an @c MessagingConsentUpdateNotification's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMessagingConsentUpdateNotification_Status_RawValue(MessagingConsentUpdateNotification *message, int32_t value);

#pragma mark - ReceivedMessageNotification

typedef GPB_ENUM(ReceivedMessageNotification_FieldNumber) {
  ReceivedMessageNotification_FieldNumber_MessageId = 1,
  ReceivedMessageNotification_FieldNumber_CustomerNumber = 2,
  ReceivedMessageNotification_FieldNumber_ChannelNumber = 3,
  ReceivedMessageNotification_FieldNumber_PartsArray = 4,
  ReceivedMessageNotification_FieldNumber_SessionId = 5,
  ReceivedMessageNotification_FieldNumber_InReplyTo = 6,
};

GPB_FINAL @interface ReceivedMessageNotification : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *messageId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@property(nonatomic, readwrite, strong, null_resettable) MessagingChannelNumber *channelNumber;
/** Test to see if @c channelNumber has been set. */
@property(nonatomic, readwrite) BOOL hasChannelNumber;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InboundMessageBody*> *partsArray;
/** The number of items in @c partsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger partsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *inReplyTo;
/** Test to see if @c inReplyTo has been set. */
@property(nonatomic, readwrite) BOOL hasInReplyTo;

@end

#pragma mark - MessageStatusNotification

typedef GPB_ENUM(MessageStatusNotification_FieldNumber) {
  MessageStatusNotification_FieldNumber_MessageId = 1,
  MessageStatusNotification_FieldNumber_Status = 2,
};

GPB_FINAL @interface MessageStatusNotification : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *messageId;

@property(nonatomic, readwrite) enum MessageDeliveryStatus status;

@end

/**
 * Fetches the raw value of a @c MessageStatusNotification's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MessageStatusNotification_Status_RawValue(MessageStatusNotification *message);
/**
 * Sets the raw value of an @c MessageStatusNotification's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMessageStatusNotification_Status_RawValue(MessageStatusNotification *message, int32_t value);

#pragma mark - SentMessageReactionNotification

typedef GPB_ENUM(SentMessageReactionNotification_FieldNumber) {
  SentMessageReactionNotification_FieldNumber_MessageId = 1,
  SentMessageReactionNotification_FieldNumber_CustomerNumber = 2,
  SentMessageReactionNotification_FieldNumber_ChannelNumber = 3,
  SentMessageReactionNotification_FieldNumber_Reaction = 4,
};

GPB_FINAL @interface SentMessageReactionNotification : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *messageId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@property(nonatomic, readwrite, strong, null_resettable) MessagingChannelNumber *channelNumber;
/** Test to see if @c channelNumber has been set. */
@property(nonatomic, readwrite) BOOL hasChannelNumber;

@property(nonatomic, readwrite) enum MessageReaction reaction;

@end

/**
 * Fetches the raw value of a @c SentMessageReactionNotification's @c reaction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SentMessageReactionNotification_Reaction_RawValue(SentMessageReactionNotification *message);
/**
 * Sets the raw value of an @c SentMessageReactionNotification's @c reaction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSentMessageReactionNotification_Reaction_RawValue(SentMessageReactionNotification *message, int32_t value);

#pragma mark - ReceivedPaymentNotification

typedef GPB_ENUM(ReceivedPaymentNotification_FieldNumber) {
  ReceivedPaymentNotification_FieldNumber_PurseId = 1,
  ReceivedPaymentNotification_FieldNumber_TransactionId = 2,
  ReceivedPaymentNotification_FieldNumber_CustomerNumber = 3,
  ReceivedPaymentNotification_FieldNumber_ChannelNumber = 4,
  ReceivedPaymentNotification_FieldNumber_Value = 5,
  ReceivedPaymentNotification_FieldNumber_Status = 6,
};

GPB_FINAL @interface ReceivedPaymentNotification : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *purseId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@property(nonatomic, readwrite, strong, null_resettable) PaymentChannelNumber *channelNumber;
/** Test to see if @c channelNumber has been set. */
@property(nonatomic, readwrite) BOOL hasChannelNumber;

@property(nonatomic, readwrite, strong, null_resettable) Cash *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

@property(nonatomic, readwrite) enum PaymentStatus status;

@end

/**
 * Fetches the raw value of a @c ReceivedPaymentNotification's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ReceivedPaymentNotification_Status_RawValue(ReceivedPaymentNotification *message);
/**
 * Sets the raw value of an @c ReceivedPaymentNotification's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetReceivedPaymentNotification_Status_RawValue(ReceivedPaymentNotification *message, int32_t value);

#pragma mark - PaymentStatusNotification

typedef GPB_ENUM(PaymentStatusNotification_FieldNumber) {
  PaymentStatusNotification_FieldNumber_TransactionId = 1,
  PaymentStatusNotification_FieldNumber_Status = 2,
};

GPB_FINAL @interface PaymentStatusNotification : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionId;

@property(nonatomic, readwrite) enum PaymentStatus status;

@end

/**
 * Fetches the raw value of a @c PaymentStatusNotification's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PaymentStatusNotification_Status_RawValue(PaymentStatusNotification *message);
/**
 * Sets the raw value of an @c PaymentStatusNotification's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPaymentStatusNotification_Status_RawValue(PaymentStatusNotification *message, int32_t value);

#pragma mark - WalletPaymentStatusNotification

typedef GPB_ENUM(WalletPaymentStatusNotification_FieldNumber) {
  WalletPaymentStatusNotification_FieldNumber_WalletId = 1,
  WalletPaymentStatusNotification_FieldNumber_TransactionId = 2,
  WalletPaymentStatusNotification_FieldNumber_Status = 3,
};

GPB_FINAL @interface WalletPaymentStatusNotification : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *walletId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionId;

@property(nonatomic, readwrite) enum PaymentStatus status;

@end

/**
 * Fetches the raw value of a @c WalletPaymentStatusNotification's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t WalletPaymentStatusNotification_Status_RawValue(WalletPaymentStatusNotification *message);
/**
 * Sets the raw value of an @c WalletPaymentStatusNotification's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetWalletPaymentStatusNotification_Status_RawValue(WalletPaymentStatusNotification *message, int32_t value);

#pragma mark - CustomerActivityNotification

typedef GPB_ENUM(CustomerActivityNotification_FieldNumber) {
  CustomerActivityNotification_FieldNumber_CustomerNumber = 1,
  CustomerActivityNotification_FieldNumber_Source = 2,
  CustomerActivityNotification_FieldNumber_SessionId = 3,
  CustomerActivityNotification_FieldNumber_Activity = 4,
};

GPB_FINAL @interface CustomerActivityNotification : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CustomerNumber *customerNumber;
/** Test to see if @c customerNumber has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerNumber;

@property(nonatomic, readwrite, copy, null_resettable) NSString *source;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

@property(nonatomic, readwrite, strong, null_resettable) CustomerActivity *activity;
/** Test to see if @c activity has been set. */
@property(nonatomic, readwrite) BOOL hasActivity;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
